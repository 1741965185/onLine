import { BN } from "@okxweb3/crypto-lib";
export type IntegerType = number | string | bigint | Uint8Array | BN;
export declare function intToBytes(value: IntegerType, signed: boolean, byteLength: number): Uint8Array;
export declare function intToBigInt(value: IntegerType, signed: boolean): bigint;
export declare function with0x(value: string): string;
export declare function hexToBigInt(hex: string): bigint;
export declare function intToHex(integer: IntegerType, lengthBytes?: number): string;
export declare function hexToInt(hex: string): number;
export declare function bigIntToBytes(value: bigint, length?: number): Uint8Array;
export declare function toTwos(value: bigint, width: bigint): bigint;
export declare function fromTwos(value: bigint, width: bigint): bigint;
export declare function bytesToHex(uint8a: Uint8Array): string;
export declare function hexToBytes(hex: string): Uint8Array;
export declare function utf8ToBytes(str: string): Uint8Array;
export declare function bytesToUtf8(arr: Uint8Array): string;
export declare function asciiToBytes(str: string): Uint8Array;
export declare function bytesToAscii(arr: Uint8Array): string;
export declare function octetsToBytes(numbers: number[]): Uint8Array;
export declare function toBytes(data: Uint8Array | string): Uint8Array;
export declare function concatBytes(...arrays: Uint8Array[]): Uint8Array;
export declare function concatArray(elements: (Uint8Array | number[] | number)[]): Uint8Array;
export declare function isInstance(object: any, type: any): boolean;
