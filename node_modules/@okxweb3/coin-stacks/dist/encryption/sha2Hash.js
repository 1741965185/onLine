"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hashSha512Sync = exports.hashSha256Sync = exports.NodeCryptoSha2Hash = void 0;
const crypto_lib_1 = require("@okxweb3/crypto-lib");
class NodeCryptoSha2Hash {
    constructor(createHash) {
        this.createHash = createHash;
    }
    async digest(data, algorithm = 'sha256') {
        try {
            const result = this.createHash(algorithm).update(data).digest();
            return Promise.resolve(result);
        }
        catch (error) {
            console.log(error);
            console.log(`Error performing ${algorithm} digest with Node.js 'crypto.createHash', falling back to JS implementation.`);
            return Promise.resolve(algorithm === 'sha256' ? hashSha256Sync(data) : hashSha512Sync(data));
        }
    }
}
exports.NodeCryptoSha2Hash = NodeCryptoSha2Hash;
function hashSha256Sync(data) {
    return crypto_lib_1.base.sha256(data);
}
exports.hashSha256Sync = hashSha256Sync;
function hashSha512Sync(data) {
    return crypto_lib_1.base.sha512(data);
}
exports.hashSha512Sync = hashSha512Sync;
//# sourceMappingURL=sha2Hash.js.map