import { Abi, Call, DeclareSignerDetails, InvocationsSignerDetails, Signature } from '../types';
import { DeployAccountSignerDetails } from '../types/signer';
import { TypedData } from '../utils/typedData';
export declare abstract class SignerInterface {
    abstract getPubKey(): Promise<string>;
    abstract signMessage(typedData: TypedData, accountAddress: string): Promise<Signature>;
    abstract signTransaction(transactions: Call[], transactionsDetail: InvocationsSignerDetails, abis?: Abi[]): Promise<any>;
    abstract signDeployAccountTransaction(transaction: DeployAccountSignerDetails): Promise<any>;
    abstract signDeclareTransaction(transaction: DeclareSignerDetails): Promise<Signature>;
}
