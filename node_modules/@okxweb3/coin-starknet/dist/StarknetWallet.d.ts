import { BaseWallet, DerivePriKeyParams, GetDerivedPathParam, NewAddressParams, SignTxParams, ValidAddressParams, ValidPrivateKeyParams, VerifyMessageParams } from '@okxweb3/coin-base';
import { Call, constants, DeployAccountContractPayload } from "./index";
export type StarknetTransactionType = "transfer" | "deploy_account" | "contract_call" | "multi_contract_call";
export type StarknetSignData = {
    type: StarknetTransactionType;
    nonce: string;
    maxFee: string;
    chainId?: constants.StarknetChainId;
    transferData?: {
        contractAddress: string;
        from: string;
        to: string;
        amount: string;
    };
    deployAccountData?: DeployAccountContractPayload;
    contractCallData?: {
        contractAddress: string;
        from: string;
        functionName: string;
        callData: string[];
    };
    multiContractCallData?: {
        from: string;
        calls: Call[];
    };
};
export declare class StarknetWallet extends BaseWallet {
    getRandomPrivateKey(): Promise<any>;
    getDerivedPath(param: GetDerivedPathParam): Promise<any>;
    getDerivedPrivateKey(param: DerivePriKeyParams): Promise<any>;
    getNewAddress(param: NewAddressParams): Promise<any>;
    validPrivateKey(param: ValidPrivateKeyParams): Promise<any>;
    signTransaction(param: SignTxParams): Promise<any>;
    validAddress(param: ValidAddressParams): Promise<any>;
    signMessage(param: SignTxParams): Promise<any>;
    verifyMessage(param: VerifyMessageParams): Promise<any>;
}
