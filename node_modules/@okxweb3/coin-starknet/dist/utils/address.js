"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateAndParseAddress = exports.addAddressPadding = void 0;
const constants_1 = require("../constants");
const encode_1 = require("./encode");
const num_1 = require("./num");
function addAddressPadding(address) {
    return (0, encode_1.addHexPrefix)((0, encode_1.removeHexPrefix)((0, num_1.toHex)(address)).padStart(64, '0'));
}
exports.addAddressPadding = addAddressPadding;
function validateAndParseAddress(address) {
    (0, num_1.assertInRange)(address, constants_1.ZERO, constants_1.MASK_251, 'Starknet Address');
    const result = addAddressPadding(address);
    if (!result.match(/^(0x)?[0-9a-fA-F]{64}$/)) {
        throw new Error('Invalid Address Format');
    }
    return result;
}
exports.validateAndParseAddress = validateAndParseAddress;
//# sourceMappingURL=address.js.map