"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.extractContractHashes = exports.isSierra = void 0;
const hash_1 = require("./hash");
const index_1 = require("../index");
function isSierra(contract) {
    const compiledContract = typeof contract === 'string' ? index_1.json.parse(contract) : contract;
    return 'sierra_program' in compiledContract;
}
exports.isSierra = isSierra;
function extractContractHashes(payload) {
    const response = { ...payload };
    if (isSierra(payload.contract)) {
        if (!payload.compiledClassHash && payload.casm) {
            response.compiledClassHash = (0, hash_1.computeCompiledClassHash)(payload.casm);
        }
        if (!response.compiledClassHash)
            throw new Error('Extract compiledClassHash failed, provide (CairoAssembly).casm file or compiledClassHash');
    }
    response.classHash = payload.classHash ?? (0, hash_1.computeContractClassHash)(payload.contract);
    if (!response.classHash)
        throw new Error('Extract classHash failed, provide (CompiledContract).json file or classHash');
    return response;
}
exports.extractContractHashes = extractContractHashes;
//# sourceMappingURL=contract.js.map