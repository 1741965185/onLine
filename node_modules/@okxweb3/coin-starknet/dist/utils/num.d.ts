export type BigNumberish = string | number | bigint;
export declare function isHex(hex: string): boolean;
export declare function toBigInt(value: BigNumberish): bigint;
export declare function isBigInt(value: any): value is bigint;
export declare function toHex(number: BigNumberish): string;
export declare function hexToDecimalString(hex: string): string;
export declare const cleanHex: (hex: string) => string;
export declare function assertInRange(input: BigNumberish, lowerBound: BigNumberish, upperBound: BigNumberish, inputName?: string): void;
export declare function bigNumberishArrayToDecimalStringArray(rawCalldata: BigNumberish[]): string[];
export declare function bigNumberishArrayToHexadecimalStringArray(rawCalldata: BigNumberish[]): string[];
export declare const isStringWholeNumber: (value: string) => boolean;
export declare const toHexString: (value: string) => string;
export declare function getDecimalString(value: string): string;
export declare function getHexString(value: string): string;
export declare function getHexStringArray(value: Array<string>): string[];
export declare const toCairoBool: (value: boolean) => string;
export declare function hexToBytes(value: string): Uint8Array;
