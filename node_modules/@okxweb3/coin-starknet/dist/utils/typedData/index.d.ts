import { BigNumberish } from '../num';
import { StarkNetMerkleType, StarkNetType, TypedData } from './types';
export * from './types';
export declare function prepareSelector(selector: string): string;
export declare function isMerkleTreeType(type: StarkNetType): type is StarkNetMerkleType;
interface Context {
    parent?: string;
    key?: string;
}
export declare const getDependencies: (types: TypedData['types'], type: string, dependencies?: string[]) => string[];
export declare const encodeType: (types: TypedData['types'], type: string) => string;
export declare const getTypeHash: (types: TypedData['types'], type: string) => string;
export declare const encodeValue: (types: TypedData['types'], type: string, data: unknown, ctx?: Context) => [string, string];
export declare const encodeData: <T extends TypedData>(types: T["types"], type: string, data: T["message"]) => string[][];
export declare const getStructHash: <T extends TypedData>(types: T["types"], type: string, data: T["message"]) => string;
export declare const getMessageHash: (typedData: TypedData, account: BigNumberish) => string;
