import { StarknetChainId, TransactionHashPrefix } from '../constants';
import { CompiledContract, CompiledSierra, CompiledSierraCasm, LegacyCompiledContract, RawCalldata } from '../types/lib';
import { BigNumberish } from './num';
export declare const transactionVersion = 1n;
export declare const transactionVersion_2 = 2n;
export declare const feeTransactionVersion: bigint;
export declare function keccakBn(value: BigNumberish): string;
export declare function starknetKeccak(value: string): bigint;
export declare function getSelectorFromName(funcName: string): string;
export declare function getSelector(value: string): string;
export declare function computeHashOnElements(data: BigNumberish[]): string;
export declare function calculateTransactionHashCommon(txHashPrefix: TransactionHashPrefix, version: BigNumberish, contractAddress: BigNumberish, entryPointSelector: BigNumberish, calldata: BigNumberish[], maxFee: BigNumberish, chainId: StarknetChainId, additionalData?: BigNumberish[]): string;
export declare function calculateDeployTransactionHash(contractAddress: BigNumberish, constructorCalldata: BigNumberish[], version: BigNumberish, chainId: StarknetChainId): string;
export declare function calculateDeclareTransactionHash(classHash: string, senderAddress: BigNumberish, version: BigNumberish, maxFee: BigNumberish, chainId: StarknetChainId, nonce: BigNumberish, compiledClassHash?: string): string;
export declare function calculateDeployAccountTransactionHash(contractAddress: BigNumberish, classHash: BigNumberish, constructorCalldata: BigNumberish[], salt: BigNumberish, version: BigNumberish, maxFee: BigNumberish, chainId: StarknetChainId, nonce: BigNumberish): string;
export declare function calculateTransactionHash(contractAddress: BigNumberish, version: BigNumberish, calldata: BigNumberish[], maxFee: BigNumberish, chainId: StarknetChainId, nonce: BigNumberish): string;
export declare function calculateContractAddressFromHash(salt: BigNumberish, classHash: BigNumberish, constructorCalldata: RawCalldata, deployerAddress: BigNumberish): string;
export declare function formatSpaces(json: string): string;
export default function computeHintedClassHash(compiledContract: LegacyCompiledContract): string;
export declare function computeLegacyContractClassHash(contract: LegacyCompiledContract | string): string;
export declare function computeCompiledClassHash(casm: CompiledSierraCasm): string;
export declare function computeSierraContractClassHash(sierra: CompiledSierra): string;
export declare function computeContractClassHash(contract: CompiledContract | string): string;
