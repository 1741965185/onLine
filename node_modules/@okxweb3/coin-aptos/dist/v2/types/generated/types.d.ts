export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends {
    [key: string]: unknown;
}> = {
    [K in keyof T]: T[K];
};
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
    [SubKey in K]?: Maybe<T[SubKey]>;
};
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
    [SubKey in K]: Maybe<T[SubKey]>;
};
export type MakeEmpty<T extends {
    [key: string]: unknown;
}, K extends keyof T> = {
    [_ in K]?: never;
};
export type Incremental<T> = T | {
    [P in keyof T]?: P extends " $fragmentName" | "__typename" ? T[P] : never;
};
export type Scalars = {
    ID: {
        input: string;
        output: string;
    };
    String: {
        input: string;
        output: string;
    };
    Boolean: {
        input: boolean;
        output: boolean;
    };
    Int: {
        input: number;
        output: number;
    };
    Float: {
        input: number;
        output: number;
    };
    bigint: {
        input: any;
        output: any;
    };
    jsonb: {
        input: any;
        output: any;
    };
    numeric: {
        input: any;
        output: any;
    };
    timestamp: {
        input: any;
        output: any;
    };
    timestamptz: {
        input: any;
        output: any;
    };
};
export type BooleanComparisonExp = {
    _eq?: InputMaybe<Scalars["Boolean"]["input"]>;
    _gt?: InputMaybe<Scalars["Boolean"]["input"]>;
    _gte?: InputMaybe<Scalars["Boolean"]["input"]>;
    _in?: InputMaybe<Array<Scalars["Boolean"]["input"]>>;
    _is_null?: InputMaybe<Scalars["Boolean"]["input"]>;
    _lt?: InputMaybe<Scalars["Boolean"]["input"]>;
    _lte?: InputMaybe<Scalars["Boolean"]["input"]>;
    _neq?: InputMaybe<Scalars["Boolean"]["input"]>;
    _nin?: InputMaybe<Array<Scalars["Boolean"]["input"]>>;
};
export type IntComparisonExp = {
    _eq?: InputMaybe<Scalars["Int"]["input"]>;
    _gt?: InputMaybe<Scalars["Int"]["input"]>;
    _gte?: InputMaybe<Scalars["Int"]["input"]>;
    _in?: InputMaybe<Array<Scalars["Int"]["input"]>>;
    _is_null?: InputMaybe<Scalars["Boolean"]["input"]>;
    _lt?: InputMaybe<Scalars["Int"]["input"]>;
    _lte?: InputMaybe<Scalars["Int"]["input"]>;
    _neq?: InputMaybe<Scalars["Int"]["input"]>;
    _nin?: InputMaybe<Array<Scalars["Int"]["input"]>>;
};
export type StringComparisonExp = {
    _eq?: InputMaybe<Scalars["String"]["input"]>;
    _gt?: InputMaybe<Scalars["String"]["input"]>;
    _gte?: InputMaybe<Scalars["String"]["input"]>;
    _ilike?: InputMaybe<Scalars["String"]["input"]>;
    _in?: InputMaybe<Array<Scalars["String"]["input"]>>;
    _iregex?: InputMaybe<Scalars["String"]["input"]>;
    _is_null?: InputMaybe<Scalars["Boolean"]["input"]>;
    _like?: InputMaybe<Scalars["String"]["input"]>;
    _lt?: InputMaybe<Scalars["String"]["input"]>;
    _lte?: InputMaybe<Scalars["String"]["input"]>;
    _neq?: InputMaybe<Scalars["String"]["input"]>;
    _nilike?: InputMaybe<Scalars["String"]["input"]>;
    _nin?: InputMaybe<Array<Scalars["String"]["input"]>>;
    _niregex?: InputMaybe<Scalars["String"]["input"]>;
    _nlike?: InputMaybe<Scalars["String"]["input"]>;
    _nregex?: InputMaybe<Scalars["String"]["input"]>;
    _nsimilar?: InputMaybe<Scalars["String"]["input"]>;
    _regex?: InputMaybe<Scalars["String"]["input"]>;
    _similar?: InputMaybe<Scalars["String"]["input"]>;
};
export type AccountTransactions = {
    account_address: Scalars["String"]["output"];
    coin_activities: Array<CoinActivities>;
    coin_activities_aggregate: CoinActivitiesAggregate;
    delegated_staking_activities: Array<DelegatedStakingActivities>;
    fungible_asset_activities: Array<FungibleAssetActivities>;
    token_activities: Array<TokenActivities>;
    token_activities_aggregate: TokenActivitiesAggregate;
    token_activities_v2: Array<TokenActivitiesV2>;
    token_activities_v2_aggregate: TokenActivitiesV2Aggregate;
    transaction_version: Scalars["bigint"]["output"];
};
export type AccountTransactionsCoinActivitiesArgs = {
    distinct_on?: InputMaybe<Array<CoinActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CoinActivitiesOrderBy>>;
    where?: InputMaybe<CoinActivitiesBoolExp>;
};
export type AccountTransactionsCoinActivitiesAggregateArgs = {
    distinct_on?: InputMaybe<Array<CoinActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CoinActivitiesOrderBy>>;
    where?: InputMaybe<CoinActivitiesBoolExp>;
};
export type AccountTransactionsDelegatedStakingActivitiesArgs = {
    distinct_on?: InputMaybe<Array<DelegatedStakingActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<DelegatedStakingActivitiesOrderBy>>;
    where?: InputMaybe<DelegatedStakingActivitiesBoolExp>;
};
export type AccountTransactionsFungibleAssetActivitiesArgs = {
    distinct_on?: InputMaybe<Array<FungibleAssetActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<FungibleAssetActivitiesOrderBy>>;
    where?: InputMaybe<FungibleAssetActivitiesBoolExp>;
};
export type AccountTransactionsTokenActivitiesArgs = {
    distinct_on?: InputMaybe<Array<TokenActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenActivitiesOrderBy>>;
    where?: InputMaybe<TokenActivitiesBoolExp>;
};
export type AccountTransactionsTokenActivitiesAggregateArgs = {
    distinct_on?: InputMaybe<Array<TokenActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenActivitiesOrderBy>>;
    where?: InputMaybe<TokenActivitiesBoolExp>;
};
export type AccountTransactionsTokenActivitiesV2Args = {
    distinct_on?: InputMaybe<Array<TokenActivitiesV2SelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenActivitiesV2OrderBy>>;
    where?: InputMaybe<TokenActivitiesV2BoolExp>;
};
export type AccountTransactionsTokenActivitiesV2AggregateArgs = {
    distinct_on?: InputMaybe<Array<TokenActivitiesV2SelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenActivitiesV2OrderBy>>;
    where?: InputMaybe<TokenActivitiesV2BoolExp>;
};
export type AccountTransactionsAggregate = {
    aggregate?: Maybe<AccountTransactionsAggregateFields>;
    nodes: Array<AccountTransactions>;
};
export type AccountTransactionsAggregateFields = {
    avg?: Maybe<AccountTransactionsAvgFields>;
    count: Scalars["Int"]["output"];
    max?: Maybe<AccountTransactionsMaxFields>;
    min?: Maybe<AccountTransactionsMinFields>;
    stddev?: Maybe<AccountTransactionsStddevFields>;
    stddev_pop?: Maybe<AccountTransactionsStddevPopFields>;
    stddev_samp?: Maybe<AccountTransactionsStddevSampFields>;
    sum?: Maybe<AccountTransactionsSumFields>;
    var_pop?: Maybe<AccountTransactionsVarPopFields>;
    var_samp?: Maybe<AccountTransactionsVarSampFields>;
    variance?: Maybe<AccountTransactionsVarianceFields>;
};
export type AccountTransactionsAggregateFieldsCountArgs = {
    columns?: InputMaybe<Array<AccountTransactionsSelectColumn>>;
    distinct?: InputMaybe<Scalars["Boolean"]["input"]>;
};
export type AccountTransactionsAvgFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type AccountTransactionsBoolExp = {
    _and?: InputMaybe<Array<AccountTransactionsBoolExp>>;
    _not?: InputMaybe<AccountTransactionsBoolExp>;
    _or?: InputMaybe<Array<AccountTransactionsBoolExp>>;
    account_address?: InputMaybe<StringComparisonExp>;
    coin_activities?: InputMaybe<CoinActivitiesBoolExp>;
    delegated_staking_activities?: InputMaybe<DelegatedStakingActivitiesBoolExp>;
    fungible_asset_activities?: InputMaybe<FungibleAssetActivitiesBoolExp>;
    token_activities?: InputMaybe<TokenActivitiesBoolExp>;
    token_activities_v2?: InputMaybe<TokenActivitiesV2BoolExp>;
    transaction_version?: InputMaybe<BigintComparisonExp>;
};
export type AccountTransactionsMaxFields = {
    account_address?: Maybe<Scalars["String"]["output"]>;
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
};
export type AccountTransactionsMinFields = {
    account_address?: Maybe<Scalars["String"]["output"]>;
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
};
export type AccountTransactionsOrderBy = {
    account_address?: InputMaybe<OrderBy>;
    coin_activities_aggregate?: InputMaybe<CoinActivitiesAggregateOrderBy>;
    delegated_staking_activities_aggregate?: InputMaybe<DelegatedStakingActivitiesAggregateOrderBy>;
    fungible_asset_activities_aggregate?: InputMaybe<FungibleAssetActivitiesAggregateOrderBy>;
    token_activities_aggregate?: InputMaybe<TokenActivitiesAggregateOrderBy>;
    token_activities_v2_aggregate?: InputMaybe<TokenActivitiesV2AggregateOrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export declare enum AccountTransactionsSelectColumn {
    AccountAddress = "account_address",
    TransactionVersion = "transaction_version"
}
export type AccountTransactionsStddevFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type AccountTransactionsStddevPopFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type AccountTransactionsStddevSampFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type AccountTransactionsStreamCursorInput = {
    initial_value: AccountTransactionsStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type AccountTransactionsStreamCursorValueInput = {
    account_address?: InputMaybe<Scalars["String"]["input"]>;
    transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
};
export type AccountTransactionsSumFields = {
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
};
export type AccountTransactionsVarPopFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type AccountTransactionsVarSampFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type AccountTransactionsVarianceFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type AddressEventsSummary = {
    account_address?: Maybe<Scalars["String"]["output"]>;
    block_metadata?: Maybe<BlockMetadataTransactions>;
    min_block_height?: Maybe<Scalars["bigint"]["output"]>;
    num_distinct_versions?: Maybe<Scalars["bigint"]["output"]>;
};
export type AddressEventsSummaryBoolExp = {
    _and?: InputMaybe<Array<AddressEventsSummaryBoolExp>>;
    _not?: InputMaybe<AddressEventsSummaryBoolExp>;
    _or?: InputMaybe<Array<AddressEventsSummaryBoolExp>>;
    account_address?: InputMaybe<StringComparisonExp>;
    block_metadata?: InputMaybe<BlockMetadataTransactionsBoolExp>;
    min_block_height?: InputMaybe<BigintComparisonExp>;
    num_distinct_versions?: InputMaybe<BigintComparisonExp>;
};
export type AddressEventsSummaryOrderBy = {
    account_address?: InputMaybe<OrderBy>;
    block_metadata?: InputMaybe<BlockMetadataTransactionsOrderBy>;
    min_block_height?: InputMaybe<OrderBy>;
    num_distinct_versions?: InputMaybe<OrderBy>;
};
export declare enum AddressEventsSummarySelectColumn {
    AccountAddress = "account_address",
    MinBlockHeight = "min_block_height",
    NumDistinctVersions = "num_distinct_versions"
}
export type AddressEventsSummaryStreamCursorInput = {
    initial_value: AddressEventsSummaryStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type AddressEventsSummaryStreamCursorValueInput = {
    account_address?: InputMaybe<Scalars["String"]["input"]>;
    min_block_height?: InputMaybe<Scalars["bigint"]["input"]>;
    num_distinct_versions?: InputMaybe<Scalars["bigint"]["input"]>;
};
export type AddressVersionFromEvents = {
    account_address?: Maybe<Scalars["String"]["output"]>;
    coin_activities: Array<CoinActivities>;
    coin_activities_aggregate: CoinActivitiesAggregate;
    delegated_staking_activities: Array<DelegatedStakingActivities>;
    token_activities: Array<TokenActivities>;
    token_activities_aggregate: TokenActivitiesAggregate;
    token_activities_v2: Array<TokenActivitiesV2>;
    token_activities_v2_aggregate: TokenActivitiesV2Aggregate;
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
};
export type AddressVersionFromEventsCoinActivitiesArgs = {
    distinct_on?: InputMaybe<Array<CoinActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CoinActivitiesOrderBy>>;
    where?: InputMaybe<CoinActivitiesBoolExp>;
};
export type AddressVersionFromEventsCoinActivitiesAggregateArgs = {
    distinct_on?: InputMaybe<Array<CoinActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CoinActivitiesOrderBy>>;
    where?: InputMaybe<CoinActivitiesBoolExp>;
};
export type AddressVersionFromEventsDelegatedStakingActivitiesArgs = {
    distinct_on?: InputMaybe<Array<DelegatedStakingActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<DelegatedStakingActivitiesOrderBy>>;
    where?: InputMaybe<DelegatedStakingActivitiesBoolExp>;
};
export type AddressVersionFromEventsTokenActivitiesArgs = {
    distinct_on?: InputMaybe<Array<TokenActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenActivitiesOrderBy>>;
    where?: InputMaybe<TokenActivitiesBoolExp>;
};
export type AddressVersionFromEventsTokenActivitiesAggregateArgs = {
    distinct_on?: InputMaybe<Array<TokenActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenActivitiesOrderBy>>;
    where?: InputMaybe<TokenActivitiesBoolExp>;
};
export type AddressVersionFromEventsTokenActivitiesV2Args = {
    distinct_on?: InputMaybe<Array<TokenActivitiesV2SelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenActivitiesV2OrderBy>>;
    where?: InputMaybe<TokenActivitiesV2BoolExp>;
};
export type AddressVersionFromEventsTokenActivitiesV2AggregateArgs = {
    distinct_on?: InputMaybe<Array<TokenActivitiesV2SelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenActivitiesV2OrderBy>>;
    where?: InputMaybe<TokenActivitiesV2BoolExp>;
};
export type AddressVersionFromEventsAggregate = {
    aggregate?: Maybe<AddressVersionFromEventsAggregateFields>;
    nodes: Array<AddressVersionFromEvents>;
};
export type AddressVersionFromEventsAggregateFields = {
    avg?: Maybe<AddressVersionFromEventsAvgFields>;
    count: Scalars["Int"]["output"];
    max?: Maybe<AddressVersionFromEventsMaxFields>;
    min?: Maybe<AddressVersionFromEventsMinFields>;
    stddev?: Maybe<AddressVersionFromEventsStddevFields>;
    stddev_pop?: Maybe<AddressVersionFromEventsStddevPopFields>;
    stddev_samp?: Maybe<AddressVersionFromEventsStddevSampFields>;
    sum?: Maybe<AddressVersionFromEventsSumFields>;
    var_pop?: Maybe<AddressVersionFromEventsVarPopFields>;
    var_samp?: Maybe<AddressVersionFromEventsVarSampFields>;
    variance?: Maybe<AddressVersionFromEventsVarianceFields>;
};
export type AddressVersionFromEventsAggregateFieldsCountArgs = {
    columns?: InputMaybe<Array<AddressVersionFromEventsSelectColumn>>;
    distinct?: InputMaybe<Scalars["Boolean"]["input"]>;
};
export type AddressVersionFromEventsAvgFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type AddressVersionFromEventsBoolExp = {
    _and?: InputMaybe<Array<AddressVersionFromEventsBoolExp>>;
    _not?: InputMaybe<AddressVersionFromEventsBoolExp>;
    _or?: InputMaybe<Array<AddressVersionFromEventsBoolExp>>;
    account_address?: InputMaybe<StringComparisonExp>;
    coin_activities?: InputMaybe<CoinActivitiesBoolExp>;
    delegated_staking_activities?: InputMaybe<DelegatedStakingActivitiesBoolExp>;
    token_activities?: InputMaybe<TokenActivitiesBoolExp>;
    token_activities_v2?: InputMaybe<TokenActivitiesV2BoolExp>;
    transaction_version?: InputMaybe<BigintComparisonExp>;
};
export type AddressVersionFromEventsMaxFields = {
    account_address?: Maybe<Scalars["String"]["output"]>;
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
};
export type AddressVersionFromEventsMinFields = {
    account_address?: Maybe<Scalars["String"]["output"]>;
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
};
export type AddressVersionFromEventsOrderBy = {
    account_address?: InputMaybe<OrderBy>;
    coin_activities_aggregate?: InputMaybe<CoinActivitiesAggregateOrderBy>;
    delegated_staking_activities_aggregate?: InputMaybe<DelegatedStakingActivitiesAggregateOrderBy>;
    token_activities_aggregate?: InputMaybe<TokenActivitiesAggregateOrderBy>;
    token_activities_v2_aggregate?: InputMaybe<TokenActivitiesV2AggregateOrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export declare enum AddressVersionFromEventsSelectColumn {
    AccountAddress = "account_address",
    TransactionVersion = "transaction_version"
}
export type AddressVersionFromEventsStddevFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type AddressVersionFromEventsStddevPopFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type AddressVersionFromEventsStddevSampFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type AddressVersionFromEventsStreamCursorInput = {
    initial_value: AddressVersionFromEventsStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type AddressVersionFromEventsStreamCursorValueInput = {
    account_address?: InputMaybe<Scalars["String"]["input"]>;
    transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
};
export type AddressVersionFromEventsSumFields = {
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
};
export type AddressVersionFromEventsVarPopFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type AddressVersionFromEventsVarSampFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type AddressVersionFromEventsVarianceFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type AddressVersionFromMoveResources = {
    address?: Maybe<Scalars["String"]["output"]>;
    coin_activities: Array<CoinActivities>;
    coin_activities_aggregate: CoinActivitiesAggregate;
    delegated_staking_activities: Array<DelegatedStakingActivities>;
    token_activities: Array<TokenActivities>;
    token_activities_aggregate: TokenActivitiesAggregate;
    token_activities_v2: Array<TokenActivitiesV2>;
    token_activities_v2_aggregate: TokenActivitiesV2Aggregate;
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
};
export type AddressVersionFromMoveResourcesCoinActivitiesArgs = {
    distinct_on?: InputMaybe<Array<CoinActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CoinActivitiesOrderBy>>;
    where?: InputMaybe<CoinActivitiesBoolExp>;
};
export type AddressVersionFromMoveResourcesCoinActivitiesAggregateArgs = {
    distinct_on?: InputMaybe<Array<CoinActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CoinActivitiesOrderBy>>;
    where?: InputMaybe<CoinActivitiesBoolExp>;
};
export type AddressVersionFromMoveResourcesDelegatedStakingActivitiesArgs = {
    distinct_on?: InputMaybe<Array<DelegatedStakingActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<DelegatedStakingActivitiesOrderBy>>;
    where?: InputMaybe<DelegatedStakingActivitiesBoolExp>;
};
export type AddressVersionFromMoveResourcesTokenActivitiesArgs = {
    distinct_on?: InputMaybe<Array<TokenActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenActivitiesOrderBy>>;
    where?: InputMaybe<TokenActivitiesBoolExp>;
};
export type AddressVersionFromMoveResourcesTokenActivitiesAggregateArgs = {
    distinct_on?: InputMaybe<Array<TokenActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenActivitiesOrderBy>>;
    where?: InputMaybe<TokenActivitiesBoolExp>;
};
export type AddressVersionFromMoveResourcesTokenActivitiesV2Args = {
    distinct_on?: InputMaybe<Array<TokenActivitiesV2SelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenActivitiesV2OrderBy>>;
    where?: InputMaybe<TokenActivitiesV2BoolExp>;
};
export type AddressVersionFromMoveResourcesTokenActivitiesV2AggregateArgs = {
    distinct_on?: InputMaybe<Array<TokenActivitiesV2SelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenActivitiesV2OrderBy>>;
    where?: InputMaybe<TokenActivitiesV2BoolExp>;
};
export type AddressVersionFromMoveResourcesAggregate = {
    aggregate?: Maybe<AddressVersionFromMoveResourcesAggregateFields>;
    nodes: Array<AddressVersionFromMoveResources>;
};
export type AddressVersionFromMoveResourcesAggregateFields = {
    avg?: Maybe<AddressVersionFromMoveResourcesAvgFields>;
    count: Scalars["Int"]["output"];
    max?: Maybe<AddressVersionFromMoveResourcesMaxFields>;
    min?: Maybe<AddressVersionFromMoveResourcesMinFields>;
    stddev?: Maybe<AddressVersionFromMoveResourcesStddevFields>;
    stddev_pop?: Maybe<AddressVersionFromMoveResourcesStddevPopFields>;
    stddev_samp?: Maybe<AddressVersionFromMoveResourcesStddevSampFields>;
    sum?: Maybe<AddressVersionFromMoveResourcesSumFields>;
    var_pop?: Maybe<AddressVersionFromMoveResourcesVarPopFields>;
    var_samp?: Maybe<AddressVersionFromMoveResourcesVarSampFields>;
    variance?: Maybe<AddressVersionFromMoveResourcesVarianceFields>;
};
export type AddressVersionFromMoveResourcesAggregateFieldsCountArgs = {
    columns?: InputMaybe<Array<AddressVersionFromMoveResourcesSelectColumn>>;
    distinct?: InputMaybe<Scalars["Boolean"]["input"]>;
};
export type AddressVersionFromMoveResourcesAvgFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type AddressVersionFromMoveResourcesBoolExp = {
    _and?: InputMaybe<Array<AddressVersionFromMoveResourcesBoolExp>>;
    _not?: InputMaybe<AddressVersionFromMoveResourcesBoolExp>;
    _or?: InputMaybe<Array<AddressVersionFromMoveResourcesBoolExp>>;
    address?: InputMaybe<StringComparisonExp>;
    coin_activities?: InputMaybe<CoinActivitiesBoolExp>;
    delegated_staking_activities?: InputMaybe<DelegatedStakingActivitiesBoolExp>;
    token_activities?: InputMaybe<TokenActivitiesBoolExp>;
    token_activities_v2?: InputMaybe<TokenActivitiesV2BoolExp>;
    transaction_version?: InputMaybe<BigintComparisonExp>;
};
export type AddressVersionFromMoveResourcesMaxFields = {
    address?: Maybe<Scalars["String"]["output"]>;
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
};
export type AddressVersionFromMoveResourcesMinFields = {
    address?: Maybe<Scalars["String"]["output"]>;
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
};
export type AddressVersionFromMoveResourcesOrderBy = {
    address?: InputMaybe<OrderBy>;
    coin_activities_aggregate?: InputMaybe<CoinActivitiesAggregateOrderBy>;
    delegated_staking_activities_aggregate?: InputMaybe<DelegatedStakingActivitiesAggregateOrderBy>;
    token_activities_aggregate?: InputMaybe<TokenActivitiesAggregateOrderBy>;
    token_activities_v2_aggregate?: InputMaybe<TokenActivitiesV2AggregateOrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export declare enum AddressVersionFromMoveResourcesSelectColumn {
    Address = "address",
    TransactionVersion = "transaction_version"
}
export type AddressVersionFromMoveResourcesStddevFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type AddressVersionFromMoveResourcesStddevPopFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type AddressVersionFromMoveResourcesStddevSampFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type AddressVersionFromMoveResourcesStreamCursorInput = {
    initial_value: AddressVersionFromMoveResourcesStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type AddressVersionFromMoveResourcesStreamCursorValueInput = {
    address?: InputMaybe<Scalars["String"]["input"]>;
    transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
};
export type AddressVersionFromMoveResourcesSumFields = {
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
};
export type AddressVersionFromMoveResourcesVarPopFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type AddressVersionFromMoveResourcesVarSampFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type AddressVersionFromMoveResourcesVarianceFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type BigintComparisonExp = {
    _eq?: InputMaybe<Scalars["bigint"]["input"]>;
    _gt?: InputMaybe<Scalars["bigint"]["input"]>;
    _gte?: InputMaybe<Scalars["bigint"]["input"]>;
    _in?: InputMaybe<Array<Scalars["bigint"]["input"]>>;
    _is_null?: InputMaybe<Scalars["Boolean"]["input"]>;
    _lt?: InputMaybe<Scalars["bigint"]["input"]>;
    _lte?: InputMaybe<Scalars["bigint"]["input"]>;
    _neq?: InputMaybe<Scalars["bigint"]["input"]>;
    _nin?: InputMaybe<Array<Scalars["bigint"]["input"]>>;
};
export type BlockMetadataTransactions = {
    block_height: Scalars["bigint"]["output"];
    epoch: Scalars["bigint"]["output"];
    failed_proposer_indices: Scalars["jsonb"]["output"];
    id: Scalars["String"]["output"];
    previous_block_votes_bitvec: Scalars["jsonb"]["output"];
    proposer: Scalars["String"]["output"];
    round: Scalars["bigint"]["output"];
    timestamp: Scalars["timestamp"]["output"];
    version: Scalars["bigint"]["output"];
};
export type BlockMetadataTransactionsFailedProposerIndicesArgs = {
    path?: InputMaybe<Scalars["String"]["input"]>;
};
export type BlockMetadataTransactionsPreviousBlockVotesBitvecArgs = {
    path?: InputMaybe<Scalars["String"]["input"]>;
};
export type BlockMetadataTransactionsBoolExp = {
    _and?: InputMaybe<Array<BlockMetadataTransactionsBoolExp>>;
    _not?: InputMaybe<BlockMetadataTransactionsBoolExp>;
    _or?: InputMaybe<Array<BlockMetadataTransactionsBoolExp>>;
    block_height?: InputMaybe<BigintComparisonExp>;
    epoch?: InputMaybe<BigintComparisonExp>;
    failed_proposer_indices?: InputMaybe<JsonbComparisonExp>;
    id?: InputMaybe<StringComparisonExp>;
    previous_block_votes_bitvec?: InputMaybe<JsonbComparisonExp>;
    proposer?: InputMaybe<StringComparisonExp>;
    round?: InputMaybe<BigintComparisonExp>;
    timestamp?: InputMaybe<TimestampComparisonExp>;
    version?: InputMaybe<BigintComparisonExp>;
};
export type BlockMetadataTransactionsOrderBy = {
    block_height?: InputMaybe<OrderBy>;
    epoch?: InputMaybe<OrderBy>;
    failed_proposer_indices?: InputMaybe<OrderBy>;
    id?: InputMaybe<OrderBy>;
    previous_block_votes_bitvec?: InputMaybe<OrderBy>;
    proposer?: InputMaybe<OrderBy>;
    round?: InputMaybe<OrderBy>;
    timestamp?: InputMaybe<OrderBy>;
    version?: InputMaybe<OrderBy>;
};
export declare enum BlockMetadataTransactionsSelectColumn {
    BlockHeight = "block_height",
    Epoch = "epoch",
    FailedProposerIndices = "failed_proposer_indices",
    Id = "id",
    PreviousBlockVotesBitvec = "previous_block_votes_bitvec",
    Proposer = "proposer",
    Round = "round",
    Timestamp = "timestamp",
    Version = "version"
}
export type BlockMetadataTransactionsStreamCursorInput = {
    initial_value: BlockMetadataTransactionsStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type BlockMetadataTransactionsStreamCursorValueInput = {
    block_height?: InputMaybe<Scalars["bigint"]["input"]>;
    epoch?: InputMaybe<Scalars["bigint"]["input"]>;
    failed_proposer_indices?: InputMaybe<Scalars["jsonb"]["input"]>;
    id?: InputMaybe<Scalars["String"]["input"]>;
    previous_block_votes_bitvec?: InputMaybe<Scalars["jsonb"]["input"]>;
    proposer?: InputMaybe<Scalars["String"]["input"]>;
    round?: InputMaybe<Scalars["bigint"]["input"]>;
    timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    version?: InputMaybe<Scalars["bigint"]["input"]>;
};
export type CoinActivities = {
    activity_type: Scalars["String"]["output"];
    amount: Scalars["numeric"]["output"];
    aptos_names: Array<CurrentAptosNames>;
    aptos_names_aggregate: CurrentAptosNamesAggregate;
    block_height: Scalars["bigint"]["output"];
    coin_info?: Maybe<CoinInfos>;
    coin_type: Scalars["String"]["output"];
    entry_function_id_str?: Maybe<Scalars["String"]["output"]>;
    event_account_address: Scalars["String"]["output"];
    event_creation_number: Scalars["bigint"]["output"];
    event_index?: Maybe<Scalars["bigint"]["output"]>;
    event_sequence_number: Scalars["bigint"]["output"];
    is_gas_fee: Scalars["Boolean"]["output"];
    is_transaction_success: Scalars["Boolean"]["output"];
    owner_address: Scalars["String"]["output"];
    storage_refund_amount: Scalars["numeric"]["output"];
    transaction_timestamp: Scalars["timestamp"]["output"];
    transaction_version: Scalars["bigint"]["output"];
};
export type CoinActivitiesAptosNamesArgs = {
    distinct_on?: InputMaybe<Array<CurrentAptosNamesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentAptosNamesOrderBy>>;
    where?: InputMaybe<CurrentAptosNamesBoolExp>;
};
export type CoinActivitiesAptosNamesAggregateArgs = {
    distinct_on?: InputMaybe<Array<CurrentAptosNamesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentAptosNamesOrderBy>>;
    where?: InputMaybe<CurrentAptosNamesBoolExp>;
};
export type CoinActivitiesAggregate = {
    aggregate?: Maybe<CoinActivitiesAggregateFields>;
    nodes: Array<CoinActivities>;
};
export type CoinActivitiesAggregateFields = {
    avg?: Maybe<CoinActivitiesAvgFields>;
    count: Scalars["Int"]["output"];
    max?: Maybe<CoinActivitiesMaxFields>;
    min?: Maybe<CoinActivitiesMinFields>;
    stddev?: Maybe<CoinActivitiesStddevFields>;
    stddev_pop?: Maybe<CoinActivitiesStddevPopFields>;
    stddev_samp?: Maybe<CoinActivitiesStddevSampFields>;
    sum?: Maybe<CoinActivitiesSumFields>;
    var_pop?: Maybe<CoinActivitiesVarPopFields>;
    var_samp?: Maybe<CoinActivitiesVarSampFields>;
    variance?: Maybe<CoinActivitiesVarianceFields>;
};
export type CoinActivitiesAggregateFieldsCountArgs = {
    columns?: InputMaybe<Array<CoinActivitiesSelectColumn>>;
    distinct?: InputMaybe<Scalars["Boolean"]["input"]>;
};
export type CoinActivitiesAggregateOrderBy = {
    avg?: InputMaybe<CoinActivitiesAvgOrderBy>;
    count?: InputMaybe<OrderBy>;
    max?: InputMaybe<CoinActivitiesMaxOrderBy>;
    min?: InputMaybe<CoinActivitiesMinOrderBy>;
    stddev?: InputMaybe<CoinActivitiesStddevOrderBy>;
    stddev_pop?: InputMaybe<CoinActivitiesStddevPopOrderBy>;
    stddev_samp?: InputMaybe<CoinActivitiesStddevSampOrderBy>;
    sum?: InputMaybe<CoinActivitiesSumOrderBy>;
    var_pop?: InputMaybe<CoinActivitiesVarPopOrderBy>;
    var_samp?: InputMaybe<CoinActivitiesVarSampOrderBy>;
    variance?: InputMaybe<CoinActivitiesVarianceOrderBy>;
};
export type CoinActivitiesAvgFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    block_height?: Maybe<Scalars["Float"]["output"]>;
    event_creation_number?: Maybe<Scalars["Float"]["output"]>;
    event_index?: Maybe<Scalars["Float"]["output"]>;
    event_sequence_number?: Maybe<Scalars["Float"]["output"]>;
    storage_refund_amount?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CoinActivitiesAvgOrderBy = {
    amount?: InputMaybe<OrderBy>;
    block_height?: InputMaybe<OrderBy>;
    event_creation_number?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_sequence_number?: InputMaybe<OrderBy>;
    storage_refund_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type CoinActivitiesBoolExp = {
    _and?: InputMaybe<Array<CoinActivitiesBoolExp>>;
    _not?: InputMaybe<CoinActivitiesBoolExp>;
    _or?: InputMaybe<Array<CoinActivitiesBoolExp>>;
    activity_type?: InputMaybe<StringComparisonExp>;
    amount?: InputMaybe<NumericComparisonExp>;
    aptos_names?: InputMaybe<CurrentAptosNamesBoolExp>;
    block_height?: InputMaybe<BigintComparisonExp>;
    coin_info?: InputMaybe<CoinInfosBoolExp>;
    coin_type?: InputMaybe<StringComparisonExp>;
    entry_function_id_str?: InputMaybe<StringComparisonExp>;
    event_account_address?: InputMaybe<StringComparisonExp>;
    event_creation_number?: InputMaybe<BigintComparisonExp>;
    event_index?: InputMaybe<BigintComparisonExp>;
    event_sequence_number?: InputMaybe<BigintComparisonExp>;
    is_gas_fee?: InputMaybe<BooleanComparisonExp>;
    is_transaction_success?: InputMaybe<BooleanComparisonExp>;
    owner_address?: InputMaybe<StringComparisonExp>;
    storage_refund_amount?: InputMaybe<NumericComparisonExp>;
    transaction_timestamp?: InputMaybe<TimestampComparisonExp>;
    transaction_version?: InputMaybe<BigintComparisonExp>;
};
export type CoinActivitiesMaxFields = {
    activity_type?: Maybe<Scalars["String"]["output"]>;
    amount?: Maybe<Scalars["numeric"]["output"]>;
    block_height?: Maybe<Scalars["bigint"]["output"]>;
    coin_type?: Maybe<Scalars["String"]["output"]>;
    entry_function_id_str?: Maybe<Scalars["String"]["output"]>;
    event_account_address?: Maybe<Scalars["String"]["output"]>;
    event_creation_number?: Maybe<Scalars["bigint"]["output"]>;
    event_index?: Maybe<Scalars["bigint"]["output"]>;
    event_sequence_number?: Maybe<Scalars["bigint"]["output"]>;
    owner_address?: Maybe<Scalars["String"]["output"]>;
    storage_refund_amount?: Maybe<Scalars["numeric"]["output"]>;
    transaction_timestamp?: Maybe<Scalars["timestamp"]["output"]>;
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
};
export type CoinActivitiesMaxOrderBy = {
    activity_type?: InputMaybe<OrderBy>;
    amount?: InputMaybe<OrderBy>;
    block_height?: InputMaybe<OrderBy>;
    coin_type?: InputMaybe<OrderBy>;
    entry_function_id_str?: InputMaybe<OrderBy>;
    event_account_address?: InputMaybe<OrderBy>;
    event_creation_number?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_sequence_number?: InputMaybe<OrderBy>;
    owner_address?: InputMaybe<OrderBy>;
    storage_refund_amount?: InputMaybe<OrderBy>;
    transaction_timestamp?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type CoinActivitiesMinFields = {
    activity_type?: Maybe<Scalars["String"]["output"]>;
    amount?: Maybe<Scalars["numeric"]["output"]>;
    block_height?: Maybe<Scalars["bigint"]["output"]>;
    coin_type?: Maybe<Scalars["String"]["output"]>;
    entry_function_id_str?: Maybe<Scalars["String"]["output"]>;
    event_account_address?: Maybe<Scalars["String"]["output"]>;
    event_creation_number?: Maybe<Scalars["bigint"]["output"]>;
    event_index?: Maybe<Scalars["bigint"]["output"]>;
    event_sequence_number?: Maybe<Scalars["bigint"]["output"]>;
    owner_address?: Maybe<Scalars["String"]["output"]>;
    storage_refund_amount?: Maybe<Scalars["numeric"]["output"]>;
    transaction_timestamp?: Maybe<Scalars["timestamp"]["output"]>;
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
};
export type CoinActivitiesMinOrderBy = {
    activity_type?: InputMaybe<OrderBy>;
    amount?: InputMaybe<OrderBy>;
    block_height?: InputMaybe<OrderBy>;
    coin_type?: InputMaybe<OrderBy>;
    entry_function_id_str?: InputMaybe<OrderBy>;
    event_account_address?: InputMaybe<OrderBy>;
    event_creation_number?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_sequence_number?: InputMaybe<OrderBy>;
    owner_address?: InputMaybe<OrderBy>;
    storage_refund_amount?: InputMaybe<OrderBy>;
    transaction_timestamp?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type CoinActivitiesOrderBy = {
    activity_type?: InputMaybe<OrderBy>;
    amount?: InputMaybe<OrderBy>;
    aptos_names_aggregate?: InputMaybe<CurrentAptosNamesAggregateOrderBy>;
    block_height?: InputMaybe<OrderBy>;
    coin_info?: InputMaybe<CoinInfosOrderBy>;
    coin_type?: InputMaybe<OrderBy>;
    entry_function_id_str?: InputMaybe<OrderBy>;
    event_account_address?: InputMaybe<OrderBy>;
    event_creation_number?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_sequence_number?: InputMaybe<OrderBy>;
    is_gas_fee?: InputMaybe<OrderBy>;
    is_transaction_success?: InputMaybe<OrderBy>;
    owner_address?: InputMaybe<OrderBy>;
    storage_refund_amount?: InputMaybe<OrderBy>;
    transaction_timestamp?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export declare enum CoinActivitiesSelectColumn {
    ActivityType = "activity_type",
    Amount = "amount",
    BlockHeight = "block_height",
    CoinType = "coin_type",
    EntryFunctionIdStr = "entry_function_id_str",
    EventAccountAddress = "event_account_address",
    EventCreationNumber = "event_creation_number",
    EventIndex = "event_index",
    EventSequenceNumber = "event_sequence_number",
    IsGasFee = "is_gas_fee",
    IsTransactionSuccess = "is_transaction_success",
    OwnerAddress = "owner_address",
    StorageRefundAmount = "storage_refund_amount",
    TransactionTimestamp = "transaction_timestamp",
    TransactionVersion = "transaction_version"
}
export type CoinActivitiesStddevFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    block_height?: Maybe<Scalars["Float"]["output"]>;
    event_creation_number?: Maybe<Scalars["Float"]["output"]>;
    event_index?: Maybe<Scalars["Float"]["output"]>;
    event_sequence_number?: Maybe<Scalars["Float"]["output"]>;
    storage_refund_amount?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CoinActivitiesStddevOrderBy = {
    amount?: InputMaybe<OrderBy>;
    block_height?: InputMaybe<OrderBy>;
    event_creation_number?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_sequence_number?: InputMaybe<OrderBy>;
    storage_refund_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type CoinActivitiesStddevPopFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    block_height?: Maybe<Scalars["Float"]["output"]>;
    event_creation_number?: Maybe<Scalars["Float"]["output"]>;
    event_index?: Maybe<Scalars["Float"]["output"]>;
    event_sequence_number?: Maybe<Scalars["Float"]["output"]>;
    storage_refund_amount?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CoinActivitiesStddevPopOrderBy = {
    amount?: InputMaybe<OrderBy>;
    block_height?: InputMaybe<OrderBy>;
    event_creation_number?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_sequence_number?: InputMaybe<OrderBy>;
    storage_refund_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type CoinActivitiesStddevSampFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    block_height?: Maybe<Scalars["Float"]["output"]>;
    event_creation_number?: Maybe<Scalars["Float"]["output"]>;
    event_index?: Maybe<Scalars["Float"]["output"]>;
    event_sequence_number?: Maybe<Scalars["Float"]["output"]>;
    storage_refund_amount?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CoinActivitiesStddevSampOrderBy = {
    amount?: InputMaybe<OrderBy>;
    block_height?: InputMaybe<OrderBy>;
    event_creation_number?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_sequence_number?: InputMaybe<OrderBy>;
    storage_refund_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type CoinActivitiesStreamCursorInput = {
    initial_value: CoinActivitiesStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CoinActivitiesStreamCursorValueInput = {
    activity_type?: InputMaybe<Scalars["String"]["input"]>;
    amount?: InputMaybe<Scalars["numeric"]["input"]>;
    block_height?: InputMaybe<Scalars["bigint"]["input"]>;
    coin_type?: InputMaybe<Scalars["String"]["input"]>;
    entry_function_id_str?: InputMaybe<Scalars["String"]["input"]>;
    event_account_address?: InputMaybe<Scalars["String"]["input"]>;
    event_creation_number?: InputMaybe<Scalars["bigint"]["input"]>;
    event_index?: InputMaybe<Scalars["bigint"]["input"]>;
    event_sequence_number?: InputMaybe<Scalars["bigint"]["input"]>;
    is_gas_fee?: InputMaybe<Scalars["Boolean"]["input"]>;
    is_transaction_success?: InputMaybe<Scalars["Boolean"]["input"]>;
    owner_address?: InputMaybe<Scalars["String"]["input"]>;
    storage_refund_amount?: InputMaybe<Scalars["numeric"]["input"]>;
    transaction_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
};
export type CoinActivitiesSumFields = {
    amount?: Maybe<Scalars["numeric"]["output"]>;
    block_height?: Maybe<Scalars["bigint"]["output"]>;
    event_creation_number?: Maybe<Scalars["bigint"]["output"]>;
    event_index?: Maybe<Scalars["bigint"]["output"]>;
    event_sequence_number?: Maybe<Scalars["bigint"]["output"]>;
    storage_refund_amount?: Maybe<Scalars["numeric"]["output"]>;
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
};
export type CoinActivitiesSumOrderBy = {
    amount?: InputMaybe<OrderBy>;
    block_height?: InputMaybe<OrderBy>;
    event_creation_number?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_sequence_number?: InputMaybe<OrderBy>;
    storage_refund_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type CoinActivitiesVarPopFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    block_height?: Maybe<Scalars["Float"]["output"]>;
    event_creation_number?: Maybe<Scalars["Float"]["output"]>;
    event_index?: Maybe<Scalars["Float"]["output"]>;
    event_sequence_number?: Maybe<Scalars["Float"]["output"]>;
    storage_refund_amount?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CoinActivitiesVarPopOrderBy = {
    amount?: InputMaybe<OrderBy>;
    block_height?: InputMaybe<OrderBy>;
    event_creation_number?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_sequence_number?: InputMaybe<OrderBy>;
    storage_refund_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type CoinActivitiesVarSampFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    block_height?: Maybe<Scalars["Float"]["output"]>;
    event_creation_number?: Maybe<Scalars["Float"]["output"]>;
    event_index?: Maybe<Scalars["Float"]["output"]>;
    event_sequence_number?: Maybe<Scalars["Float"]["output"]>;
    storage_refund_amount?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CoinActivitiesVarSampOrderBy = {
    amount?: InputMaybe<OrderBy>;
    block_height?: InputMaybe<OrderBy>;
    event_creation_number?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_sequence_number?: InputMaybe<OrderBy>;
    storage_refund_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type CoinActivitiesVarianceFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    block_height?: Maybe<Scalars["Float"]["output"]>;
    event_creation_number?: Maybe<Scalars["Float"]["output"]>;
    event_index?: Maybe<Scalars["Float"]["output"]>;
    event_sequence_number?: Maybe<Scalars["Float"]["output"]>;
    storage_refund_amount?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CoinActivitiesVarianceOrderBy = {
    amount?: InputMaybe<OrderBy>;
    block_height?: InputMaybe<OrderBy>;
    event_creation_number?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_sequence_number?: InputMaybe<OrderBy>;
    storage_refund_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type CoinBalances = {
    amount: Scalars["numeric"]["output"];
    coin_type: Scalars["String"]["output"];
    coin_type_hash: Scalars["String"]["output"];
    owner_address: Scalars["String"]["output"];
    transaction_timestamp: Scalars["timestamp"]["output"];
    transaction_version: Scalars["bigint"]["output"];
};
export type CoinBalancesBoolExp = {
    _and?: InputMaybe<Array<CoinBalancesBoolExp>>;
    _not?: InputMaybe<CoinBalancesBoolExp>;
    _or?: InputMaybe<Array<CoinBalancesBoolExp>>;
    amount?: InputMaybe<NumericComparisonExp>;
    coin_type?: InputMaybe<StringComparisonExp>;
    coin_type_hash?: InputMaybe<StringComparisonExp>;
    owner_address?: InputMaybe<StringComparisonExp>;
    transaction_timestamp?: InputMaybe<TimestampComparisonExp>;
    transaction_version?: InputMaybe<BigintComparisonExp>;
};
export type CoinBalancesOrderBy = {
    amount?: InputMaybe<OrderBy>;
    coin_type?: InputMaybe<OrderBy>;
    coin_type_hash?: InputMaybe<OrderBy>;
    owner_address?: InputMaybe<OrderBy>;
    transaction_timestamp?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export declare enum CoinBalancesSelectColumn {
    Amount = "amount",
    CoinType = "coin_type",
    CoinTypeHash = "coin_type_hash",
    OwnerAddress = "owner_address",
    TransactionTimestamp = "transaction_timestamp",
    TransactionVersion = "transaction_version"
}
export type CoinBalancesStreamCursorInput = {
    initial_value: CoinBalancesStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CoinBalancesStreamCursorValueInput = {
    amount?: InputMaybe<Scalars["numeric"]["input"]>;
    coin_type?: InputMaybe<Scalars["String"]["input"]>;
    coin_type_hash?: InputMaybe<Scalars["String"]["input"]>;
    owner_address?: InputMaybe<Scalars["String"]["input"]>;
    transaction_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
};
export type CoinInfos = {
    coin_type: Scalars["String"]["output"];
    coin_type_hash: Scalars["String"]["output"];
    creator_address: Scalars["String"]["output"];
    decimals: Scalars["Int"]["output"];
    name: Scalars["String"]["output"];
    supply_aggregator_table_handle?: Maybe<Scalars["String"]["output"]>;
    supply_aggregator_table_key?: Maybe<Scalars["String"]["output"]>;
    symbol: Scalars["String"]["output"];
    transaction_created_timestamp: Scalars["timestamp"]["output"];
    transaction_version_created: Scalars["bigint"]["output"];
};
export type CoinInfosBoolExp = {
    _and?: InputMaybe<Array<CoinInfosBoolExp>>;
    _not?: InputMaybe<CoinInfosBoolExp>;
    _or?: InputMaybe<Array<CoinInfosBoolExp>>;
    coin_type?: InputMaybe<StringComparisonExp>;
    coin_type_hash?: InputMaybe<StringComparisonExp>;
    creator_address?: InputMaybe<StringComparisonExp>;
    decimals?: InputMaybe<IntComparisonExp>;
    name?: InputMaybe<StringComparisonExp>;
    supply_aggregator_table_handle?: InputMaybe<StringComparisonExp>;
    supply_aggregator_table_key?: InputMaybe<StringComparisonExp>;
    symbol?: InputMaybe<StringComparisonExp>;
    transaction_created_timestamp?: InputMaybe<TimestampComparisonExp>;
    transaction_version_created?: InputMaybe<BigintComparisonExp>;
};
export type CoinInfosOrderBy = {
    coin_type?: InputMaybe<OrderBy>;
    coin_type_hash?: InputMaybe<OrderBy>;
    creator_address?: InputMaybe<OrderBy>;
    decimals?: InputMaybe<OrderBy>;
    name?: InputMaybe<OrderBy>;
    supply_aggregator_table_handle?: InputMaybe<OrderBy>;
    supply_aggregator_table_key?: InputMaybe<OrderBy>;
    symbol?: InputMaybe<OrderBy>;
    transaction_created_timestamp?: InputMaybe<OrderBy>;
    transaction_version_created?: InputMaybe<OrderBy>;
};
export declare enum CoinInfosSelectColumn {
    CoinType = "coin_type",
    CoinTypeHash = "coin_type_hash",
    CreatorAddress = "creator_address",
    Decimals = "decimals",
    Name = "name",
    SupplyAggregatorTableHandle = "supply_aggregator_table_handle",
    SupplyAggregatorTableKey = "supply_aggregator_table_key",
    Symbol = "symbol",
    TransactionCreatedTimestamp = "transaction_created_timestamp",
    TransactionVersionCreated = "transaction_version_created"
}
export type CoinInfosStreamCursorInput = {
    initial_value: CoinInfosStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CoinInfosStreamCursorValueInput = {
    coin_type?: InputMaybe<Scalars["String"]["input"]>;
    coin_type_hash?: InputMaybe<Scalars["String"]["input"]>;
    creator_address?: InputMaybe<Scalars["String"]["input"]>;
    decimals?: InputMaybe<Scalars["Int"]["input"]>;
    name?: InputMaybe<Scalars["String"]["input"]>;
    supply_aggregator_table_handle?: InputMaybe<Scalars["String"]["input"]>;
    supply_aggregator_table_key?: InputMaybe<Scalars["String"]["input"]>;
    symbol?: InputMaybe<Scalars["String"]["input"]>;
    transaction_created_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    transaction_version_created?: InputMaybe<Scalars["bigint"]["input"]>;
};
export type CoinSupply = {
    coin_type: Scalars["String"]["output"];
    coin_type_hash: Scalars["String"]["output"];
    supply: Scalars["numeric"]["output"];
    transaction_epoch: Scalars["bigint"]["output"];
    transaction_timestamp: Scalars["timestamp"]["output"];
    transaction_version: Scalars["bigint"]["output"];
};
export type CoinSupplyBoolExp = {
    _and?: InputMaybe<Array<CoinSupplyBoolExp>>;
    _not?: InputMaybe<CoinSupplyBoolExp>;
    _or?: InputMaybe<Array<CoinSupplyBoolExp>>;
    coin_type?: InputMaybe<StringComparisonExp>;
    coin_type_hash?: InputMaybe<StringComparisonExp>;
    supply?: InputMaybe<NumericComparisonExp>;
    transaction_epoch?: InputMaybe<BigintComparisonExp>;
    transaction_timestamp?: InputMaybe<TimestampComparisonExp>;
    transaction_version?: InputMaybe<BigintComparisonExp>;
};
export type CoinSupplyOrderBy = {
    coin_type?: InputMaybe<OrderBy>;
    coin_type_hash?: InputMaybe<OrderBy>;
    supply?: InputMaybe<OrderBy>;
    transaction_epoch?: InputMaybe<OrderBy>;
    transaction_timestamp?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export declare enum CoinSupplySelectColumn {
    CoinType = "coin_type",
    CoinTypeHash = "coin_type_hash",
    Supply = "supply",
    TransactionEpoch = "transaction_epoch",
    TransactionTimestamp = "transaction_timestamp",
    TransactionVersion = "transaction_version"
}
export type CoinSupplyStreamCursorInput = {
    initial_value: CoinSupplyStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CoinSupplyStreamCursorValueInput = {
    coin_type?: InputMaybe<Scalars["String"]["input"]>;
    coin_type_hash?: InputMaybe<Scalars["String"]["input"]>;
    supply?: InputMaybe<Scalars["numeric"]["input"]>;
    transaction_epoch?: InputMaybe<Scalars["bigint"]["input"]>;
    transaction_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
};
export type CollectionDatas = {
    collection_data_id_hash: Scalars["String"]["output"];
    collection_name: Scalars["String"]["output"];
    creator_address: Scalars["String"]["output"];
    description: Scalars["String"]["output"];
    description_mutable: Scalars["Boolean"]["output"];
    maximum: Scalars["numeric"]["output"];
    maximum_mutable: Scalars["Boolean"]["output"];
    metadata_uri: Scalars["String"]["output"];
    supply: Scalars["numeric"]["output"];
    table_handle: Scalars["String"]["output"];
    transaction_timestamp: Scalars["timestamp"]["output"];
    transaction_version: Scalars["bigint"]["output"];
    uri_mutable: Scalars["Boolean"]["output"];
};
export type CollectionDatasBoolExp = {
    _and?: InputMaybe<Array<CollectionDatasBoolExp>>;
    _not?: InputMaybe<CollectionDatasBoolExp>;
    _or?: InputMaybe<Array<CollectionDatasBoolExp>>;
    collection_data_id_hash?: InputMaybe<StringComparisonExp>;
    collection_name?: InputMaybe<StringComparisonExp>;
    creator_address?: InputMaybe<StringComparisonExp>;
    description?: InputMaybe<StringComparisonExp>;
    description_mutable?: InputMaybe<BooleanComparisonExp>;
    maximum?: InputMaybe<NumericComparisonExp>;
    maximum_mutable?: InputMaybe<BooleanComparisonExp>;
    metadata_uri?: InputMaybe<StringComparisonExp>;
    supply?: InputMaybe<NumericComparisonExp>;
    table_handle?: InputMaybe<StringComparisonExp>;
    transaction_timestamp?: InputMaybe<TimestampComparisonExp>;
    transaction_version?: InputMaybe<BigintComparisonExp>;
    uri_mutable?: InputMaybe<BooleanComparisonExp>;
};
export type CollectionDatasOrderBy = {
    collection_data_id_hash?: InputMaybe<OrderBy>;
    collection_name?: InputMaybe<OrderBy>;
    creator_address?: InputMaybe<OrderBy>;
    description?: InputMaybe<OrderBy>;
    description_mutable?: InputMaybe<OrderBy>;
    maximum?: InputMaybe<OrderBy>;
    maximum_mutable?: InputMaybe<OrderBy>;
    metadata_uri?: InputMaybe<OrderBy>;
    supply?: InputMaybe<OrderBy>;
    table_handle?: InputMaybe<OrderBy>;
    transaction_timestamp?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
    uri_mutable?: InputMaybe<OrderBy>;
};
export declare enum CollectionDatasSelectColumn {
    CollectionDataIdHash = "collection_data_id_hash",
    CollectionName = "collection_name",
    CreatorAddress = "creator_address",
    Description = "description",
    DescriptionMutable = "description_mutable",
    Maximum = "maximum",
    MaximumMutable = "maximum_mutable",
    MetadataUri = "metadata_uri",
    Supply = "supply",
    TableHandle = "table_handle",
    TransactionTimestamp = "transaction_timestamp",
    TransactionVersion = "transaction_version",
    UriMutable = "uri_mutable"
}
export type CollectionDatasStreamCursorInput = {
    initial_value: CollectionDatasStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CollectionDatasStreamCursorValueInput = {
    collection_data_id_hash?: InputMaybe<Scalars["String"]["input"]>;
    collection_name?: InputMaybe<Scalars["String"]["input"]>;
    creator_address?: InputMaybe<Scalars["String"]["input"]>;
    description?: InputMaybe<Scalars["String"]["input"]>;
    description_mutable?: InputMaybe<Scalars["Boolean"]["input"]>;
    maximum?: InputMaybe<Scalars["numeric"]["input"]>;
    maximum_mutable?: InputMaybe<Scalars["Boolean"]["input"]>;
    metadata_uri?: InputMaybe<Scalars["String"]["input"]>;
    supply?: InputMaybe<Scalars["numeric"]["input"]>;
    table_handle?: InputMaybe<Scalars["String"]["input"]>;
    transaction_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    uri_mutable?: InputMaybe<Scalars["Boolean"]["input"]>;
};
export type CurrentAnsLookup = {
    all_token_ownerships: Array<CurrentTokenOwnerships>;
    all_token_ownerships_aggregate: CurrentTokenOwnershipsAggregate;
    domain: Scalars["String"]["output"];
    expiration_timestamp: Scalars["timestamp"]["output"];
    is_deleted: Scalars["Boolean"]["output"];
    last_transaction_version: Scalars["bigint"]["output"];
    registered_address?: Maybe<Scalars["String"]["output"]>;
    subdomain: Scalars["String"]["output"];
    token_name: Scalars["String"]["output"];
};
export type CurrentAnsLookupAllTokenOwnershipsArgs = {
    distinct_on?: InputMaybe<Array<CurrentTokenOwnershipsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentTokenOwnershipsOrderBy>>;
    where?: InputMaybe<CurrentTokenOwnershipsBoolExp>;
};
export type CurrentAnsLookupAllTokenOwnershipsAggregateArgs = {
    distinct_on?: InputMaybe<Array<CurrentTokenOwnershipsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentTokenOwnershipsOrderBy>>;
    where?: InputMaybe<CurrentTokenOwnershipsBoolExp>;
};
export type CurrentAnsLookupBoolExp = {
    _and?: InputMaybe<Array<CurrentAnsLookupBoolExp>>;
    _not?: InputMaybe<CurrentAnsLookupBoolExp>;
    _or?: InputMaybe<Array<CurrentAnsLookupBoolExp>>;
    all_token_ownerships?: InputMaybe<CurrentTokenOwnershipsBoolExp>;
    domain?: InputMaybe<StringComparisonExp>;
    expiration_timestamp?: InputMaybe<TimestampComparisonExp>;
    is_deleted?: InputMaybe<BooleanComparisonExp>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    registered_address?: InputMaybe<StringComparisonExp>;
    subdomain?: InputMaybe<StringComparisonExp>;
    token_name?: InputMaybe<StringComparisonExp>;
};
export type CurrentAnsLookupOrderBy = {
    all_token_ownerships_aggregate?: InputMaybe<CurrentTokenOwnershipsAggregateOrderBy>;
    domain?: InputMaybe<OrderBy>;
    expiration_timestamp?: InputMaybe<OrderBy>;
    is_deleted?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    registered_address?: InputMaybe<OrderBy>;
    subdomain?: InputMaybe<OrderBy>;
    token_name?: InputMaybe<OrderBy>;
};
export declare enum CurrentAnsLookupSelectColumn {
    Domain = "domain",
    ExpirationTimestamp = "expiration_timestamp",
    IsDeleted = "is_deleted",
    LastTransactionVersion = "last_transaction_version",
    RegisteredAddress = "registered_address",
    Subdomain = "subdomain",
    TokenName = "token_name"
}
export type CurrentAnsLookupStreamCursorInput = {
    initial_value: CurrentAnsLookupStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CurrentAnsLookupStreamCursorValueInput = {
    domain?: InputMaybe<Scalars["String"]["input"]>;
    expiration_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    is_deleted?: InputMaybe<Scalars["Boolean"]["input"]>;
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    registered_address?: InputMaybe<Scalars["String"]["input"]>;
    subdomain?: InputMaybe<Scalars["String"]["input"]>;
    token_name?: InputMaybe<Scalars["String"]["input"]>;
};
export type CurrentAnsLookupV2 = {
    domain: Scalars["String"]["output"];
    expiration_timestamp: Scalars["timestamp"]["output"];
    is_deleted: Scalars["Boolean"]["output"];
    last_transaction_version: Scalars["bigint"]["output"];
    registered_address?: Maybe<Scalars["String"]["output"]>;
    subdomain: Scalars["String"]["output"];
    token_name?: Maybe<Scalars["String"]["output"]>;
    token_standard: Scalars["String"]["output"];
};
export type CurrentAnsLookupV2BoolExp = {
    _and?: InputMaybe<Array<CurrentAnsLookupV2BoolExp>>;
    _not?: InputMaybe<CurrentAnsLookupV2BoolExp>;
    _or?: InputMaybe<Array<CurrentAnsLookupV2BoolExp>>;
    domain?: InputMaybe<StringComparisonExp>;
    expiration_timestamp?: InputMaybe<TimestampComparisonExp>;
    is_deleted?: InputMaybe<BooleanComparisonExp>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    registered_address?: InputMaybe<StringComparisonExp>;
    subdomain?: InputMaybe<StringComparisonExp>;
    token_name?: InputMaybe<StringComparisonExp>;
    token_standard?: InputMaybe<StringComparisonExp>;
};
export type CurrentAnsLookupV2OrderBy = {
    domain?: InputMaybe<OrderBy>;
    expiration_timestamp?: InputMaybe<OrderBy>;
    is_deleted?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    registered_address?: InputMaybe<OrderBy>;
    subdomain?: InputMaybe<OrderBy>;
    token_name?: InputMaybe<OrderBy>;
    token_standard?: InputMaybe<OrderBy>;
};
export declare enum CurrentAnsLookupV2SelectColumn {
    Domain = "domain",
    ExpirationTimestamp = "expiration_timestamp",
    IsDeleted = "is_deleted",
    LastTransactionVersion = "last_transaction_version",
    RegisteredAddress = "registered_address",
    Subdomain = "subdomain",
    TokenName = "token_name",
    TokenStandard = "token_standard"
}
export type CurrentAnsLookupV2StreamCursorInput = {
    initial_value: CurrentAnsLookupV2StreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CurrentAnsLookupV2StreamCursorValueInput = {
    domain?: InputMaybe<Scalars["String"]["input"]>;
    expiration_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    is_deleted?: InputMaybe<Scalars["Boolean"]["input"]>;
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    registered_address?: InputMaybe<Scalars["String"]["input"]>;
    subdomain?: InputMaybe<Scalars["String"]["input"]>;
    token_name?: InputMaybe<Scalars["String"]["input"]>;
    token_standard?: InputMaybe<Scalars["String"]["input"]>;
};
export type CurrentAptosNames = {
    domain?: Maybe<Scalars["String"]["output"]>;
    domain_with_suffix?: Maybe<Scalars["String"]["output"]>;
    expiration_timestamp?: Maybe<Scalars["timestamp"]["output"]>;
    is_active?: Maybe<Scalars["Boolean"]["output"]>;
    is_domain_owner?: Maybe<CurrentAptosNames>;
    is_primary?: Maybe<Scalars["Boolean"]["output"]>;
    last_transaction_version?: Maybe<Scalars["bigint"]["output"]>;
    owner_address?: Maybe<Scalars["String"]["output"]>;
    registered_address?: Maybe<Scalars["String"]["output"]>;
    subdomain?: Maybe<Scalars["String"]["output"]>;
    token_name?: Maybe<Scalars["String"]["output"]>;
    token_standard?: Maybe<Scalars["String"]["output"]>;
};
export type CurrentAptosNamesAggregate = {
    aggregate?: Maybe<CurrentAptosNamesAggregateFields>;
    nodes: Array<CurrentAptosNames>;
};
export type CurrentAptosNamesAggregateFields = {
    avg?: Maybe<CurrentAptosNamesAvgFields>;
    count: Scalars["Int"]["output"];
    max?: Maybe<CurrentAptosNamesMaxFields>;
    min?: Maybe<CurrentAptosNamesMinFields>;
    stddev?: Maybe<CurrentAptosNamesStddevFields>;
    stddev_pop?: Maybe<CurrentAptosNamesStddevPopFields>;
    stddev_samp?: Maybe<CurrentAptosNamesStddevSampFields>;
    sum?: Maybe<CurrentAptosNamesSumFields>;
    var_pop?: Maybe<CurrentAptosNamesVarPopFields>;
    var_samp?: Maybe<CurrentAptosNamesVarSampFields>;
    variance?: Maybe<CurrentAptosNamesVarianceFields>;
};
export type CurrentAptosNamesAggregateFieldsCountArgs = {
    columns?: InputMaybe<Array<CurrentAptosNamesSelectColumn>>;
    distinct?: InputMaybe<Scalars["Boolean"]["input"]>;
};
export type CurrentAptosNamesAggregateOrderBy = {
    avg?: InputMaybe<CurrentAptosNamesAvgOrderBy>;
    count?: InputMaybe<OrderBy>;
    max?: InputMaybe<CurrentAptosNamesMaxOrderBy>;
    min?: InputMaybe<CurrentAptosNamesMinOrderBy>;
    stddev?: InputMaybe<CurrentAptosNamesStddevOrderBy>;
    stddev_pop?: InputMaybe<CurrentAptosNamesStddevPopOrderBy>;
    stddev_samp?: InputMaybe<CurrentAptosNamesStddevSampOrderBy>;
    sum?: InputMaybe<CurrentAptosNamesSumOrderBy>;
    var_pop?: InputMaybe<CurrentAptosNamesVarPopOrderBy>;
    var_samp?: InputMaybe<CurrentAptosNamesVarSampOrderBy>;
    variance?: InputMaybe<CurrentAptosNamesVarianceOrderBy>;
};
export type CurrentAptosNamesAvgFields = {
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentAptosNamesAvgOrderBy = {
    last_transaction_version?: InputMaybe<OrderBy>;
};
export type CurrentAptosNamesBoolExp = {
    _and?: InputMaybe<Array<CurrentAptosNamesBoolExp>>;
    _not?: InputMaybe<CurrentAptosNamesBoolExp>;
    _or?: InputMaybe<Array<CurrentAptosNamesBoolExp>>;
    domain?: InputMaybe<StringComparisonExp>;
    domain_with_suffix?: InputMaybe<StringComparisonExp>;
    expiration_timestamp?: InputMaybe<TimestampComparisonExp>;
    is_active?: InputMaybe<BooleanComparisonExp>;
    is_domain_owner?: InputMaybe<CurrentAptosNamesBoolExp>;
    is_primary?: InputMaybe<BooleanComparisonExp>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    owner_address?: InputMaybe<StringComparisonExp>;
    registered_address?: InputMaybe<StringComparisonExp>;
    subdomain?: InputMaybe<StringComparisonExp>;
    token_name?: InputMaybe<StringComparisonExp>;
    token_standard?: InputMaybe<StringComparisonExp>;
};
export type CurrentAptosNamesMaxFields = {
    domain?: Maybe<Scalars["String"]["output"]>;
    domain_with_suffix?: Maybe<Scalars["String"]["output"]>;
    expiration_timestamp?: Maybe<Scalars["timestamp"]["output"]>;
    last_transaction_version?: Maybe<Scalars["bigint"]["output"]>;
    owner_address?: Maybe<Scalars["String"]["output"]>;
    registered_address?: Maybe<Scalars["String"]["output"]>;
    subdomain?: Maybe<Scalars["String"]["output"]>;
    token_name?: Maybe<Scalars["String"]["output"]>;
    token_standard?: Maybe<Scalars["String"]["output"]>;
};
export type CurrentAptosNamesMaxOrderBy = {
    domain?: InputMaybe<OrderBy>;
    domain_with_suffix?: InputMaybe<OrderBy>;
    expiration_timestamp?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    owner_address?: InputMaybe<OrderBy>;
    registered_address?: InputMaybe<OrderBy>;
    subdomain?: InputMaybe<OrderBy>;
    token_name?: InputMaybe<OrderBy>;
    token_standard?: InputMaybe<OrderBy>;
};
export type CurrentAptosNamesMinFields = {
    domain?: Maybe<Scalars["String"]["output"]>;
    domain_with_suffix?: Maybe<Scalars["String"]["output"]>;
    expiration_timestamp?: Maybe<Scalars["timestamp"]["output"]>;
    last_transaction_version?: Maybe<Scalars["bigint"]["output"]>;
    owner_address?: Maybe<Scalars["String"]["output"]>;
    registered_address?: Maybe<Scalars["String"]["output"]>;
    subdomain?: Maybe<Scalars["String"]["output"]>;
    token_name?: Maybe<Scalars["String"]["output"]>;
    token_standard?: Maybe<Scalars["String"]["output"]>;
};
export type CurrentAptosNamesMinOrderBy = {
    domain?: InputMaybe<OrderBy>;
    domain_with_suffix?: InputMaybe<OrderBy>;
    expiration_timestamp?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    owner_address?: InputMaybe<OrderBy>;
    registered_address?: InputMaybe<OrderBy>;
    subdomain?: InputMaybe<OrderBy>;
    token_name?: InputMaybe<OrderBy>;
    token_standard?: InputMaybe<OrderBy>;
};
export type CurrentAptosNamesOrderBy = {
    domain?: InputMaybe<OrderBy>;
    domain_with_suffix?: InputMaybe<OrderBy>;
    expiration_timestamp?: InputMaybe<OrderBy>;
    is_active?: InputMaybe<OrderBy>;
    is_domain_owner?: InputMaybe<CurrentAptosNamesOrderBy>;
    is_primary?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    owner_address?: InputMaybe<OrderBy>;
    registered_address?: InputMaybe<OrderBy>;
    subdomain?: InputMaybe<OrderBy>;
    token_name?: InputMaybe<OrderBy>;
    token_standard?: InputMaybe<OrderBy>;
};
export declare enum CurrentAptosNamesSelectColumn {
    Domain = "domain",
    DomainWithSuffix = "domain_with_suffix",
    ExpirationTimestamp = "expiration_timestamp",
    IsActive = "is_active",
    IsPrimary = "is_primary",
    LastTransactionVersion = "last_transaction_version",
    OwnerAddress = "owner_address",
    RegisteredAddress = "registered_address",
    Subdomain = "subdomain",
    TokenName = "token_name",
    TokenStandard = "token_standard"
}
export type CurrentAptosNamesStddevFields = {
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentAptosNamesStddevOrderBy = {
    last_transaction_version?: InputMaybe<OrderBy>;
};
export type CurrentAptosNamesStddevPopFields = {
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentAptosNamesStddevPopOrderBy = {
    last_transaction_version?: InputMaybe<OrderBy>;
};
export type CurrentAptosNamesStddevSampFields = {
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentAptosNamesStddevSampOrderBy = {
    last_transaction_version?: InputMaybe<OrderBy>;
};
export type CurrentAptosNamesStreamCursorInput = {
    initial_value: CurrentAptosNamesStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CurrentAptosNamesStreamCursorValueInput = {
    domain?: InputMaybe<Scalars["String"]["input"]>;
    domain_with_suffix?: InputMaybe<Scalars["String"]["input"]>;
    expiration_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    is_active?: InputMaybe<Scalars["Boolean"]["input"]>;
    is_primary?: InputMaybe<Scalars["Boolean"]["input"]>;
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    owner_address?: InputMaybe<Scalars["String"]["input"]>;
    registered_address?: InputMaybe<Scalars["String"]["input"]>;
    subdomain?: InputMaybe<Scalars["String"]["input"]>;
    token_name?: InputMaybe<Scalars["String"]["input"]>;
    token_standard?: InputMaybe<Scalars["String"]["input"]>;
};
export type CurrentAptosNamesSumFields = {
    last_transaction_version?: Maybe<Scalars["bigint"]["output"]>;
};
export type CurrentAptosNamesSumOrderBy = {
    last_transaction_version?: InputMaybe<OrderBy>;
};
export type CurrentAptosNamesVarPopFields = {
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentAptosNamesVarPopOrderBy = {
    last_transaction_version?: InputMaybe<OrderBy>;
};
export type CurrentAptosNamesVarSampFields = {
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentAptosNamesVarSampOrderBy = {
    last_transaction_version?: InputMaybe<OrderBy>;
};
export type CurrentAptosNamesVarianceFields = {
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentAptosNamesVarianceOrderBy = {
    last_transaction_version?: InputMaybe<OrderBy>;
};
export type CurrentCoinBalances = {
    amount: Scalars["numeric"]["output"];
    coin_info?: Maybe<CoinInfos>;
    coin_type: Scalars["String"]["output"];
    coin_type_hash: Scalars["String"]["output"];
    last_transaction_timestamp: Scalars["timestamp"]["output"];
    last_transaction_version: Scalars["bigint"]["output"];
    owner_address: Scalars["String"]["output"];
};
export type CurrentCoinBalancesBoolExp = {
    _and?: InputMaybe<Array<CurrentCoinBalancesBoolExp>>;
    _not?: InputMaybe<CurrentCoinBalancesBoolExp>;
    _or?: InputMaybe<Array<CurrentCoinBalancesBoolExp>>;
    amount?: InputMaybe<NumericComparisonExp>;
    coin_info?: InputMaybe<CoinInfosBoolExp>;
    coin_type?: InputMaybe<StringComparisonExp>;
    coin_type_hash?: InputMaybe<StringComparisonExp>;
    last_transaction_timestamp?: InputMaybe<TimestampComparisonExp>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    owner_address?: InputMaybe<StringComparisonExp>;
};
export type CurrentCoinBalancesOrderBy = {
    amount?: InputMaybe<OrderBy>;
    coin_info?: InputMaybe<CoinInfosOrderBy>;
    coin_type?: InputMaybe<OrderBy>;
    coin_type_hash?: InputMaybe<OrderBy>;
    last_transaction_timestamp?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    owner_address?: InputMaybe<OrderBy>;
};
export declare enum CurrentCoinBalancesSelectColumn {
    Amount = "amount",
    CoinType = "coin_type",
    CoinTypeHash = "coin_type_hash",
    LastTransactionTimestamp = "last_transaction_timestamp",
    LastTransactionVersion = "last_transaction_version",
    OwnerAddress = "owner_address"
}
export type CurrentCoinBalancesStreamCursorInput = {
    initial_value: CurrentCoinBalancesStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CurrentCoinBalancesStreamCursorValueInput = {
    amount?: InputMaybe<Scalars["numeric"]["input"]>;
    coin_type?: InputMaybe<Scalars["String"]["input"]>;
    coin_type_hash?: InputMaybe<Scalars["String"]["input"]>;
    last_transaction_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    owner_address?: InputMaybe<Scalars["String"]["input"]>;
};
export type CurrentCollectionDatas = {
    collection_data_id_hash: Scalars["String"]["output"];
    collection_name: Scalars["String"]["output"];
    creator_address: Scalars["String"]["output"];
    description: Scalars["String"]["output"];
    description_mutable: Scalars["Boolean"]["output"];
    last_transaction_timestamp: Scalars["timestamp"]["output"];
    last_transaction_version: Scalars["bigint"]["output"];
    maximum: Scalars["numeric"]["output"];
    maximum_mutable: Scalars["Boolean"]["output"];
    metadata_uri: Scalars["String"]["output"];
    supply: Scalars["numeric"]["output"];
    table_handle: Scalars["String"]["output"];
    uri_mutable: Scalars["Boolean"]["output"];
};
export type CurrentCollectionDatasBoolExp = {
    _and?: InputMaybe<Array<CurrentCollectionDatasBoolExp>>;
    _not?: InputMaybe<CurrentCollectionDatasBoolExp>;
    _or?: InputMaybe<Array<CurrentCollectionDatasBoolExp>>;
    collection_data_id_hash?: InputMaybe<StringComparisonExp>;
    collection_name?: InputMaybe<StringComparisonExp>;
    creator_address?: InputMaybe<StringComparisonExp>;
    description?: InputMaybe<StringComparisonExp>;
    description_mutable?: InputMaybe<BooleanComparisonExp>;
    last_transaction_timestamp?: InputMaybe<TimestampComparisonExp>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    maximum?: InputMaybe<NumericComparisonExp>;
    maximum_mutable?: InputMaybe<BooleanComparisonExp>;
    metadata_uri?: InputMaybe<StringComparisonExp>;
    supply?: InputMaybe<NumericComparisonExp>;
    table_handle?: InputMaybe<StringComparisonExp>;
    uri_mutable?: InputMaybe<BooleanComparisonExp>;
};
export type CurrentCollectionDatasOrderBy = {
    collection_data_id_hash?: InputMaybe<OrderBy>;
    collection_name?: InputMaybe<OrderBy>;
    creator_address?: InputMaybe<OrderBy>;
    description?: InputMaybe<OrderBy>;
    description_mutable?: InputMaybe<OrderBy>;
    last_transaction_timestamp?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    maximum?: InputMaybe<OrderBy>;
    maximum_mutable?: InputMaybe<OrderBy>;
    metadata_uri?: InputMaybe<OrderBy>;
    supply?: InputMaybe<OrderBy>;
    table_handle?: InputMaybe<OrderBy>;
    uri_mutable?: InputMaybe<OrderBy>;
};
export declare enum CurrentCollectionDatasSelectColumn {
    CollectionDataIdHash = "collection_data_id_hash",
    CollectionName = "collection_name",
    CreatorAddress = "creator_address",
    Description = "description",
    DescriptionMutable = "description_mutable",
    LastTransactionTimestamp = "last_transaction_timestamp",
    LastTransactionVersion = "last_transaction_version",
    Maximum = "maximum",
    MaximumMutable = "maximum_mutable",
    MetadataUri = "metadata_uri",
    Supply = "supply",
    TableHandle = "table_handle",
    UriMutable = "uri_mutable"
}
export type CurrentCollectionDatasStreamCursorInput = {
    initial_value: CurrentCollectionDatasStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CurrentCollectionDatasStreamCursorValueInput = {
    collection_data_id_hash?: InputMaybe<Scalars["String"]["input"]>;
    collection_name?: InputMaybe<Scalars["String"]["input"]>;
    creator_address?: InputMaybe<Scalars["String"]["input"]>;
    description?: InputMaybe<Scalars["String"]["input"]>;
    description_mutable?: InputMaybe<Scalars["Boolean"]["input"]>;
    last_transaction_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    maximum?: InputMaybe<Scalars["numeric"]["input"]>;
    maximum_mutable?: InputMaybe<Scalars["Boolean"]["input"]>;
    metadata_uri?: InputMaybe<Scalars["String"]["input"]>;
    supply?: InputMaybe<Scalars["numeric"]["input"]>;
    table_handle?: InputMaybe<Scalars["String"]["input"]>;
    uri_mutable?: InputMaybe<Scalars["Boolean"]["input"]>;
};
export type CurrentCollectionOwnershipV2View = {
    collection_id?: Maybe<Scalars["String"]["output"]>;
    collection_name?: Maybe<Scalars["String"]["output"]>;
    collection_uri?: Maybe<Scalars["String"]["output"]>;
    creator_address?: Maybe<Scalars["String"]["output"]>;
    current_collection?: Maybe<CurrentCollectionsV2>;
    distinct_tokens?: Maybe<Scalars["bigint"]["output"]>;
    last_transaction_version?: Maybe<Scalars["bigint"]["output"]>;
    owner_address?: Maybe<Scalars["String"]["output"]>;
    single_token_uri?: Maybe<Scalars["String"]["output"]>;
};
export type CurrentCollectionOwnershipV2ViewAggregate = {
    aggregate?: Maybe<CurrentCollectionOwnershipV2ViewAggregateFields>;
    nodes: Array<CurrentCollectionOwnershipV2View>;
};
export type CurrentCollectionOwnershipV2ViewAggregateFields = {
    avg?: Maybe<CurrentCollectionOwnershipV2ViewAvgFields>;
    count: Scalars["Int"]["output"];
    max?: Maybe<CurrentCollectionOwnershipV2ViewMaxFields>;
    min?: Maybe<CurrentCollectionOwnershipV2ViewMinFields>;
    stddev?: Maybe<CurrentCollectionOwnershipV2ViewStddevFields>;
    stddev_pop?: Maybe<CurrentCollectionOwnershipV2ViewStddevPopFields>;
    stddev_samp?: Maybe<CurrentCollectionOwnershipV2ViewStddevSampFields>;
    sum?: Maybe<CurrentCollectionOwnershipV2ViewSumFields>;
    var_pop?: Maybe<CurrentCollectionOwnershipV2ViewVarPopFields>;
    var_samp?: Maybe<CurrentCollectionOwnershipV2ViewVarSampFields>;
    variance?: Maybe<CurrentCollectionOwnershipV2ViewVarianceFields>;
};
export type CurrentCollectionOwnershipV2ViewAggregateFieldsCountArgs = {
    columns?: InputMaybe<Array<CurrentCollectionOwnershipV2ViewSelectColumn>>;
    distinct?: InputMaybe<Scalars["Boolean"]["input"]>;
};
export type CurrentCollectionOwnershipV2ViewAvgFields = {
    distinct_tokens?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentCollectionOwnershipV2ViewBoolExp = {
    _and?: InputMaybe<Array<CurrentCollectionOwnershipV2ViewBoolExp>>;
    _not?: InputMaybe<CurrentCollectionOwnershipV2ViewBoolExp>;
    _or?: InputMaybe<Array<CurrentCollectionOwnershipV2ViewBoolExp>>;
    collection_id?: InputMaybe<StringComparisonExp>;
    collection_name?: InputMaybe<StringComparisonExp>;
    collection_uri?: InputMaybe<StringComparisonExp>;
    creator_address?: InputMaybe<StringComparisonExp>;
    current_collection?: InputMaybe<CurrentCollectionsV2BoolExp>;
    distinct_tokens?: InputMaybe<BigintComparisonExp>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    owner_address?: InputMaybe<StringComparisonExp>;
    single_token_uri?: InputMaybe<StringComparisonExp>;
};
export type CurrentCollectionOwnershipV2ViewMaxFields = {
    collection_id?: Maybe<Scalars["String"]["output"]>;
    collection_name?: Maybe<Scalars["String"]["output"]>;
    collection_uri?: Maybe<Scalars["String"]["output"]>;
    creator_address?: Maybe<Scalars["String"]["output"]>;
    distinct_tokens?: Maybe<Scalars["bigint"]["output"]>;
    last_transaction_version?: Maybe<Scalars["bigint"]["output"]>;
    owner_address?: Maybe<Scalars["String"]["output"]>;
    single_token_uri?: Maybe<Scalars["String"]["output"]>;
};
export type CurrentCollectionOwnershipV2ViewMinFields = {
    collection_id?: Maybe<Scalars["String"]["output"]>;
    collection_name?: Maybe<Scalars["String"]["output"]>;
    collection_uri?: Maybe<Scalars["String"]["output"]>;
    creator_address?: Maybe<Scalars["String"]["output"]>;
    distinct_tokens?: Maybe<Scalars["bigint"]["output"]>;
    last_transaction_version?: Maybe<Scalars["bigint"]["output"]>;
    owner_address?: Maybe<Scalars["String"]["output"]>;
    single_token_uri?: Maybe<Scalars["String"]["output"]>;
};
export type CurrentCollectionOwnershipV2ViewOrderBy = {
    collection_id?: InputMaybe<OrderBy>;
    collection_name?: InputMaybe<OrderBy>;
    collection_uri?: InputMaybe<OrderBy>;
    creator_address?: InputMaybe<OrderBy>;
    current_collection?: InputMaybe<CurrentCollectionsV2OrderBy>;
    distinct_tokens?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    owner_address?: InputMaybe<OrderBy>;
    single_token_uri?: InputMaybe<OrderBy>;
};
export declare enum CurrentCollectionOwnershipV2ViewSelectColumn {
    CollectionId = "collection_id",
    CollectionName = "collection_name",
    CollectionUri = "collection_uri",
    CreatorAddress = "creator_address",
    DistinctTokens = "distinct_tokens",
    LastTransactionVersion = "last_transaction_version",
    OwnerAddress = "owner_address",
    SingleTokenUri = "single_token_uri"
}
export type CurrentCollectionOwnershipV2ViewStddevFields = {
    distinct_tokens?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentCollectionOwnershipV2ViewStddevPopFields = {
    distinct_tokens?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentCollectionOwnershipV2ViewStddevSampFields = {
    distinct_tokens?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentCollectionOwnershipV2ViewStreamCursorInput = {
    initial_value: CurrentCollectionOwnershipV2ViewStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CurrentCollectionOwnershipV2ViewStreamCursorValueInput = {
    collection_id?: InputMaybe<Scalars["String"]["input"]>;
    collection_name?: InputMaybe<Scalars["String"]["input"]>;
    collection_uri?: InputMaybe<Scalars["String"]["input"]>;
    creator_address?: InputMaybe<Scalars["String"]["input"]>;
    distinct_tokens?: InputMaybe<Scalars["bigint"]["input"]>;
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    owner_address?: InputMaybe<Scalars["String"]["input"]>;
    single_token_uri?: InputMaybe<Scalars["String"]["input"]>;
};
export type CurrentCollectionOwnershipV2ViewSumFields = {
    distinct_tokens?: Maybe<Scalars["bigint"]["output"]>;
    last_transaction_version?: Maybe<Scalars["bigint"]["output"]>;
};
export type CurrentCollectionOwnershipV2ViewVarPopFields = {
    distinct_tokens?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentCollectionOwnershipV2ViewVarSampFields = {
    distinct_tokens?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentCollectionOwnershipV2ViewVarianceFields = {
    distinct_tokens?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentCollectionsV2 = {
    cdn_asset_uris?: Maybe<NftMetadataCrawlerParsedAssetUris>;
    collection_id: Scalars["String"]["output"];
    collection_name: Scalars["String"]["output"];
    creator_address: Scalars["String"]["output"];
    current_supply: Scalars["numeric"]["output"];
    description: Scalars["String"]["output"];
    last_transaction_timestamp: Scalars["timestamp"]["output"];
    last_transaction_version: Scalars["bigint"]["output"];
    max_supply?: Maybe<Scalars["numeric"]["output"]>;
    mutable_description?: Maybe<Scalars["Boolean"]["output"]>;
    mutable_uri?: Maybe<Scalars["Boolean"]["output"]>;
    table_handle_v1?: Maybe<Scalars["String"]["output"]>;
    token_standard: Scalars["String"]["output"];
    total_minted_v2?: Maybe<Scalars["numeric"]["output"]>;
    uri: Scalars["String"]["output"];
};
export type CurrentCollectionsV2BoolExp = {
    _and?: InputMaybe<Array<CurrentCollectionsV2BoolExp>>;
    _not?: InputMaybe<CurrentCollectionsV2BoolExp>;
    _or?: InputMaybe<Array<CurrentCollectionsV2BoolExp>>;
    cdn_asset_uris?: InputMaybe<NftMetadataCrawlerParsedAssetUrisBoolExp>;
    collection_id?: InputMaybe<StringComparisonExp>;
    collection_name?: InputMaybe<StringComparisonExp>;
    creator_address?: InputMaybe<StringComparisonExp>;
    current_supply?: InputMaybe<NumericComparisonExp>;
    description?: InputMaybe<StringComparisonExp>;
    last_transaction_timestamp?: InputMaybe<TimestampComparisonExp>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    max_supply?: InputMaybe<NumericComparisonExp>;
    mutable_description?: InputMaybe<BooleanComparisonExp>;
    mutable_uri?: InputMaybe<BooleanComparisonExp>;
    table_handle_v1?: InputMaybe<StringComparisonExp>;
    token_standard?: InputMaybe<StringComparisonExp>;
    total_minted_v2?: InputMaybe<NumericComparisonExp>;
    uri?: InputMaybe<StringComparisonExp>;
};
export type CurrentCollectionsV2OrderBy = {
    cdn_asset_uris?: InputMaybe<NftMetadataCrawlerParsedAssetUrisOrderBy>;
    collection_id?: InputMaybe<OrderBy>;
    collection_name?: InputMaybe<OrderBy>;
    creator_address?: InputMaybe<OrderBy>;
    current_supply?: InputMaybe<OrderBy>;
    description?: InputMaybe<OrderBy>;
    last_transaction_timestamp?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    max_supply?: InputMaybe<OrderBy>;
    mutable_description?: InputMaybe<OrderBy>;
    mutable_uri?: InputMaybe<OrderBy>;
    table_handle_v1?: InputMaybe<OrderBy>;
    token_standard?: InputMaybe<OrderBy>;
    total_minted_v2?: InputMaybe<OrderBy>;
    uri?: InputMaybe<OrderBy>;
};
export declare enum CurrentCollectionsV2SelectColumn {
    CollectionId = "collection_id",
    CollectionName = "collection_name",
    CreatorAddress = "creator_address",
    CurrentSupply = "current_supply",
    Description = "description",
    LastTransactionTimestamp = "last_transaction_timestamp",
    LastTransactionVersion = "last_transaction_version",
    MaxSupply = "max_supply",
    MutableDescription = "mutable_description",
    MutableUri = "mutable_uri",
    TableHandleV1 = "table_handle_v1",
    TokenStandard = "token_standard",
    TotalMintedV2 = "total_minted_v2",
    Uri = "uri"
}
export type CurrentCollectionsV2StreamCursorInput = {
    initial_value: CurrentCollectionsV2StreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CurrentCollectionsV2StreamCursorValueInput = {
    collection_id?: InputMaybe<Scalars["String"]["input"]>;
    collection_name?: InputMaybe<Scalars["String"]["input"]>;
    creator_address?: InputMaybe<Scalars["String"]["input"]>;
    current_supply?: InputMaybe<Scalars["numeric"]["input"]>;
    description?: InputMaybe<Scalars["String"]["input"]>;
    last_transaction_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    max_supply?: InputMaybe<Scalars["numeric"]["input"]>;
    mutable_description?: InputMaybe<Scalars["Boolean"]["input"]>;
    mutable_uri?: InputMaybe<Scalars["Boolean"]["input"]>;
    table_handle_v1?: InputMaybe<Scalars["String"]["input"]>;
    token_standard?: InputMaybe<Scalars["String"]["input"]>;
    total_minted_v2?: InputMaybe<Scalars["numeric"]["input"]>;
    uri?: InputMaybe<Scalars["String"]["input"]>;
};
export type CurrentDelegatedStakingPoolBalances = {
    active_table_handle: Scalars["String"]["output"];
    inactive_table_handle: Scalars["String"]["output"];
    last_transaction_version: Scalars["bigint"]["output"];
    operator_commission_percentage: Scalars["numeric"]["output"];
    staking_pool_address: Scalars["String"]["output"];
    total_coins: Scalars["numeric"]["output"];
    total_shares: Scalars["numeric"]["output"];
};
export type CurrentDelegatedStakingPoolBalancesBoolExp = {
    _and?: InputMaybe<Array<CurrentDelegatedStakingPoolBalancesBoolExp>>;
    _not?: InputMaybe<CurrentDelegatedStakingPoolBalancesBoolExp>;
    _or?: InputMaybe<Array<CurrentDelegatedStakingPoolBalancesBoolExp>>;
    active_table_handle?: InputMaybe<StringComparisonExp>;
    inactive_table_handle?: InputMaybe<StringComparisonExp>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    operator_commission_percentage?: InputMaybe<NumericComparisonExp>;
    staking_pool_address?: InputMaybe<StringComparisonExp>;
    total_coins?: InputMaybe<NumericComparisonExp>;
    total_shares?: InputMaybe<NumericComparisonExp>;
};
export type CurrentDelegatedStakingPoolBalancesOrderBy = {
    active_table_handle?: InputMaybe<OrderBy>;
    inactive_table_handle?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    operator_commission_percentage?: InputMaybe<OrderBy>;
    staking_pool_address?: InputMaybe<OrderBy>;
    total_coins?: InputMaybe<OrderBy>;
    total_shares?: InputMaybe<OrderBy>;
};
export declare enum CurrentDelegatedStakingPoolBalancesSelectColumn {
    ActiveTableHandle = "active_table_handle",
    InactiveTableHandle = "inactive_table_handle",
    LastTransactionVersion = "last_transaction_version",
    OperatorCommissionPercentage = "operator_commission_percentage",
    StakingPoolAddress = "staking_pool_address",
    TotalCoins = "total_coins",
    TotalShares = "total_shares"
}
export type CurrentDelegatedStakingPoolBalancesStreamCursorInput = {
    initial_value: CurrentDelegatedStakingPoolBalancesStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CurrentDelegatedStakingPoolBalancesStreamCursorValueInput = {
    active_table_handle?: InputMaybe<Scalars["String"]["input"]>;
    inactive_table_handle?: InputMaybe<Scalars["String"]["input"]>;
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    operator_commission_percentage?: InputMaybe<Scalars["numeric"]["input"]>;
    staking_pool_address?: InputMaybe<Scalars["String"]["input"]>;
    total_coins?: InputMaybe<Scalars["numeric"]["input"]>;
    total_shares?: InputMaybe<Scalars["numeric"]["input"]>;
};
export type CurrentDelegatedVoter = {
    delegation_pool_address: Scalars["String"]["output"];
    delegator_address: Scalars["String"]["output"];
    last_transaction_timestamp: Scalars["timestamp"]["output"];
    last_transaction_version: Scalars["bigint"]["output"];
    pending_voter?: Maybe<Scalars["String"]["output"]>;
    table_handle?: Maybe<Scalars["String"]["output"]>;
    voter?: Maybe<Scalars["String"]["output"]>;
};
export type CurrentDelegatedVoterBoolExp = {
    _and?: InputMaybe<Array<CurrentDelegatedVoterBoolExp>>;
    _not?: InputMaybe<CurrentDelegatedVoterBoolExp>;
    _or?: InputMaybe<Array<CurrentDelegatedVoterBoolExp>>;
    delegation_pool_address?: InputMaybe<StringComparisonExp>;
    delegator_address?: InputMaybe<StringComparisonExp>;
    last_transaction_timestamp?: InputMaybe<TimestampComparisonExp>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    pending_voter?: InputMaybe<StringComparisonExp>;
    table_handle?: InputMaybe<StringComparisonExp>;
    voter?: InputMaybe<StringComparisonExp>;
};
export type CurrentDelegatedVoterOrderBy = {
    delegation_pool_address?: InputMaybe<OrderBy>;
    delegator_address?: InputMaybe<OrderBy>;
    last_transaction_timestamp?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    pending_voter?: InputMaybe<OrderBy>;
    table_handle?: InputMaybe<OrderBy>;
    voter?: InputMaybe<OrderBy>;
};
export declare enum CurrentDelegatedVoterSelectColumn {
    DelegationPoolAddress = "delegation_pool_address",
    DelegatorAddress = "delegator_address",
    LastTransactionTimestamp = "last_transaction_timestamp",
    LastTransactionVersion = "last_transaction_version",
    PendingVoter = "pending_voter",
    TableHandle = "table_handle",
    Voter = "voter"
}
export type CurrentDelegatedVoterStreamCursorInput = {
    initial_value: CurrentDelegatedVoterStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CurrentDelegatedVoterStreamCursorValueInput = {
    delegation_pool_address?: InputMaybe<Scalars["String"]["input"]>;
    delegator_address?: InputMaybe<Scalars["String"]["input"]>;
    last_transaction_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    pending_voter?: InputMaybe<Scalars["String"]["input"]>;
    table_handle?: InputMaybe<Scalars["String"]["input"]>;
    voter?: InputMaybe<Scalars["String"]["input"]>;
};
export type CurrentDelegatorBalances = {
    current_pool_balance?: Maybe<CurrentDelegatedStakingPoolBalances>;
    delegator_address: Scalars["String"]["output"];
    last_transaction_version: Scalars["bigint"]["output"];
    parent_table_handle: Scalars["String"]["output"];
    pool_address: Scalars["String"]["output"];
    pool_type: Scalars["String"]["output"];
    shares: Scalars["numeric"]["output"];
    staking_pool_metadata?: Maybe<CurrentStakingPoolVoter>;
    table_handle: Scalars["String"]["output"];
};
export type CurrentDelegatorBalancesBoolExp = {
    _and?: InputMaybe<Array<CurrentDelegatorBalancesBoolExp>>;
    _not?: InputMaybe<CurrentDelegatorBalancesBoolExp>;
    _or?: InputMaybe<Array<CurrentDelegatorBalancesBoolExp>>;
    current_pool_balance?: InputMaybe<CurrentDelegatedStakingPoolBalancesBoolExp>;
    delegator_address?: InputMaybe<StringComparisonExp>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    parent_table_handle?: InputMaybe<StringComparisonExp>;
    pool_address?: InputMaybe<StringComparisonExp>;
    pool_type?: InputMaybe<StringComparisonExp>;
    shares?: InputMaybe<NumericComparisonExp>;
    staking_pool_metadata?: InputMaybe<CurrentStakingPoolVoterBoolExp>;
    table_handle?: InputMaybe<StringComparisonExp>;
};
export type CurrentDelegatorBalancesOrderBy = {
    current_pool_balance?: InputMaybe<CurrentDelegatedStakingPoolBalancesOrderBy>;
    delegator_address?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    parent_table_handle?: InputMaybe<OrderBy>;
    pool_address?: InputMaybe<OrderBy>;
    pool_type?: InputMaybe<OrderBy>;
    shares?: InputMaybe<OrderBy>;
    staking_pool_metadata?: InputMaybe<CurrentStakingPoolVoterOrderBy>;
    table_handle?: InputMaybe<OrderBy>;
};
export declare enum CurrentDelegatorBalancesSelectColumn {
    DelegatorAddress = "delegator_address",
    LastTransactionVersion = "last_transaction_version",
    ParentTableHandle = "parent_table_handle",
    PoolAddress = "pool_address",
    PoolType = "pool_type",
    Shares = "shares",
    TableHandle = "table_handle"
}
export type CurrentDelegatorBalancesStreamCursorInput = {
    initial_value: CurrentDelegatorBalancesStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CurrentDelegatorBalancesStreamCursorValueInput = {
    delegator_address?: InputMaybe<Scalars["String"]["input"]>;
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    parent_table_handle?: InputMaybe<Scalars["String"]["input"]>;
    pool_address?: InputMaybe<Scalars["String"]["input"]>;
    pool_type?: InputMaybe<Scalars["String"]["input"]>;
    shares?: InputMaybe<Scalars["numeric"]["input"]>;
    table_handle?: InputMaybe<Scalars["String"]["input"]>;
};
export type CurrentFungibleAssetBalances = {
    amount: Scalars["numeric"]["output"];
    asset_type: Scalars["String"]["output"];
    is_frozen: Scalars["Boolean"]["output"];
    is_primary: Scalars["Boolean"]["output"];
    last_transaction_timestamp: Scalars["timestamp"]["output"];
    last_transaction_version: Scalars["bigint"]["output"];
    metadata?: Maybe<FungibleAssetMetadata>;
    owner_address: Scalars["String"]["output"];
    storage_id: Scalars["String"]["output"];
    token_standard: Scalars["String"]["output"];
};
export type CurrentFungibleAssetBalancesAggregate = {
    aggregate?: Maybe<CurrentFungibleAssetBalancesAggregateFields>;
    nodes: Array<CurrentFungibleAssetBalances>;
};
export type CurrentFungibleAssetBalancesAggregateFields = {
    avg?: Maybe<CurrentFungibleAssetBalancesAvgFields>;
    count: Scalars["Int"]["output"];
    max?: Maybe<CurrentFungibleAssetBalancesMaxFields>;
    min?: Maybe<CurrentFungibleAssetBalancesMinFields>;
    stddev?: Maybe<CurrentFungibleAssetBalancesStddevFields>;
    stddev_pop?: Maybe<CurrentFungibleAssetBalancesStddevPopFields>;
    stddev_samp?: Maybe<CurrentFungibleAssetBalancesStddevSampFields>;
    sum?: Maybe<CurrentFungibleAssetBalancesSumFields>;
    var_pop?: Maybe<CurrentFungibleAssetBalancesVarPopFields>;
    var_samp?: Maybe<CurrentFungibleAssetBalancesVarSampFields>;
    variance?: Maybe<CurrentFungibleAssetBalancesVarianceFields>;
};
export type CurrentFungibleAssetBalancesAggregateFieldsCountArgs = {
    columns?: InputMaybe<Array<CurrentFungibleAssetBalancesSelectColumn>>;
    distinct?: InputMaybe<Scalars["Boolean"]["input"]>;
};
export type CurrentFungibleAssetBalancesAvgFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentFungibleAssetBalancesBoolExp = {
    _and?: InputMaybe<Array<CurrentFungibleAssetBalancesBoolExp>>;
    _not?: InputMaybe<CurrentFungibleAssetBalancesBoolExp>;
    _or?: InputMaybe<Array<CurrentFungibleAssetBalancesBoolExp>>;
    amount?: InputMaybe<NumericComparisonExp>;
    asset_type?: InputMaybe<StringComparisonExp>;
    is_frozen?: InputMaybe<BooleanComparisonExp>;
    is_primary?: InputMaybe<BooleanComparisonExp>;
    last_transaction_timestamp?: InputMaybe<TimestampComparisonExp>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    metadata?: InputMaybe<FungibleAssetMetadataBoolExp>;
    owner_address?: InputMaybe<StringComparisonExp>;
    storage_id?: InputMaybe<StringComparisonExp>;
    token_standard?: InputMaybe<StringComparisonExp>;
};
export type CurrentFungibleAssetBalancesMaxFields = {
    amount?: Maybe<Scalars["numeric"]["output"]>;
    asset_type?: Maybe<Scalars["String"]["output"]>;
    last_transaction_timestamp?: Maybe<Scalars["timestamp"]["output"]>;
    last_transaction_version?: Maybe<Scalars["bigint"]["output"]>;
    owner_address?: Maybe<Scalars["String"]["output"]>;
    storage_id?: Maybe<Scalars["String"]["output"]>;
    token_standard?: Maybe<Scalars["String"]["output"]>;
};
export type CurrentFungibleAssetBalancesMinFields = {
    amount?: Maybe<Scalars["numeric"]["output"]>;
    asset_type?: Maybe<Scalars["String"]["output"]>;
    last_transaction_timestamp?: Maybe<Scalars["timestamp"]["output"]>;
    last_transaction_version?: Maybe<Scalars["bigint"]["output"]>;
    owner_address?: Maybe<Scalars["String"]["output"]>;
    storage_id?: Maybe<Scalars["String"]["output"]>;
    token_standard?: Maybe<Scalars["String"]["output"]>;
};
export type CurrentFungibleAssetBalancesOrderBy = {
    amount?: InputMaybe<OrderBy>;
    asset_type?: InputMaybe<OrderBy>;
    is_frozen?: InputMaybe<OrderBy>;
    is_primary?: InputMaybe<OrderBy>;
    last_transaction_timestamp?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    metadata?: InputMaybe<FungibleAssetMetadataOrderBy>;
    owner_address?: InputMaybe<OrderBy>;
    storage_id?: InputMaybe<OrderBy>;
    token_standard?: InputMaybe<OrderBy>;
};
export declare enum CurrentFungibleAssetBalancesSelectColumn {
    Amount = "amount",
    AssetType = "asset_type",
    IsFrozen = "is_frozen",
    IsPrimary = "is_primary",
    LastTransactionTimestamp = "last_transaction_timestamp",
    LastTransactionVersion = "last_transaction_version",
    OwnerAddress = "owner_address",
    StorageId = "storage_id",
    TokenStandard = "token_standard"
}
export type CurrentFungibleAssetBalancesStddevFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentFungibleAssetBalancesStddevPopFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentFungibleAssetBalancesStddevSampFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentFungibleAssetBalancesStreamCursorInput = {
    initial_value: CurrentFungibleAssetBalancesStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CurrentFungibleAssetBalancesStreamCursorValueInput = {
    amount?: InputMaybe<Scalars["numeric"]["input"]>;
    asset_type?: InputMaybe<Scalars["String"]["input"]>;
    is_frozen?: InputMaybe<Scalars["Boolean"]["input"]>;
    is_primary?: InputMaybe<Scalars["Boolean"]["input"]>;
    last_transaction_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    owner_address?: InputMaybe<Scalars["String"]["input"]>;
    storage_id?: InputMaybe<Scalars["String"]["input"]>;
    token_standard?: InputMaybe<Scalars["String"]["input"]>;
};
export type CurrentFungibleAssetBalancesSumFields = {
    amount?: Maybe<Scalars["numeric"]["output"]>;
    last_transaction_version?: Maybe<Scalars["bigint"]["output"]>;
};
export type CurrentFungibleAssetBalancesVarPopFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentFungibleAssetBalancesVarSampFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentFungibleAssetBalancesVarianceFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentObjects = {
    allow_ungated_transfer: Scalars["Boolean"]["output"];
    is_deleted: Scalars["Boolean"]["output"];
    last_guid_creation_num: Scalars["numeric"]["output"];
    last_transaction_version: Scalars["bigint"]["output"];
    object_address: Scalars["String"]["output"];
    owner_address: Scalars["String"]["output"];
    state_key_hash: Scalars["String"]["output"];
};
export type CurrentObjectsBoolExp = {
    _and?: InputMaybe<Array<CurrentObjectsBoolExp>>;
    _not?: InputMaybe<CurrentObjectsBoolExp>;
    _or?: InputMaybe<Array<CurrentObjectsBoolExp>>;
    allow_ungated_transfer?: InputMaybe<BooleanComparisonExp>;
    is_deleted?: InputMaybe<BooleanComparisonExp>;
    last_guid_creation_num?: InputMaybe<NumericComparisonExp>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    object_address?: InputMaybe<StringComparisonExp>;
    owner_address?: InputMaybe<StringComparisonExp>;
    state_key_hash?: InputMaybe<StringComparisonExp>;
};
export type CurrentObjectsOrderBy = {
    allow_ungated_transfer?: InputMaybe<OrderBy>;
    is_deleted?: InputMaybe<OrderBy>;
    last_guid_creation_num?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    object_address?: InputMaybe<OrderBy>;
    owner_address?: InputMaybe<OrderBy>;
    state_key_hash?: InputMaybe<OrderBy>;
};
export declare enum CurrentObjectsSelectColumn {
    AllowUngatedTransfer = "allow_ungated_transfer",
    IsDeleted = "is_deleted",
    LastGuidCreationNum = "last_guid_creation_num",
    LastTransactionVersion = "last_transaction_version",
    ObjectAddress = "object_address",
    OwnerAddress = "owner_address",
    StateKeyHash = "state_key_hash"
}
export type CurrentObjectsStreamCursorInput = {
    initial_value: CurrentObjectsStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CurrentObjectsStreamCursorValueInput = {
    allow_ungated_transfer?: InputMaybe<Scalars["Boolean"]["input"]>;
    is_deleted?: InputMaybe<Scalars["Boolean"]["input"]>;
    last_guid_creation_num?: InputMaybe<Scalars["numeric"]["input"]>;
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    object_address?: InputMaybe<Scalars["String"]["input"]>;
    owner_address?: InputMaybe<Scalars["String"]["input"]>;
    state_key_hash?: InputMaybe<Scalars["String"]["input"]>;
};
export type CurrentStakingPoolVoter = {
    last_transaction_version: Scalars["bigint"]["output"];
    operator_address: Scalars["String"]["output"];
    operator_aptos_name: Array<CurrentAptosNames>;
    operator_aptos_name_aggregate: CurrentAptosNamesAggregate;
    staking_pool_address: Scalars["String"]["output"];
    voter_address: Scalars["String"]["output"];
};
export type CurrentStakingPoolVoterOperatorAptosNameArgs = {
    distinct_on?: InputMaybe<Array<CurrentAptosNamesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentAptosNamesOrderBy>>;
    where?: InputMaybe<CurrentAptosNamesBoolExp>;
};
export type CurrentStakingPoolVoterOperatorAptosNameAggregateArgs = {
    distinct_on?: InputMaybe<Array<CurrentAptosNamesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentAptosNamesOrderBy>>;
    where?: InputMaybe<CurrentAptosNamesBoolExp>;
};
export type CurrentStakingPoolVoterBoolExp = {
    _and?: InputMaybe<Array<CurrentStakingPoolVoterBoolExp>>;
    _not?: InputMaybe<CurrentStakingPoolVoterBoolExp>;
    _or?: InputMaybe<Array<CurrentStakingPoolVoterBoolExp>>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    operator_address?: InputMaybe<StringComparisonExp>;
    operator_aptos_name?: InputMaybe<CurrentAptosNamesBoolExp>;
    staking_pool_address?: InputMaybe<StringComparisonExp>;
    voter_address?: InputMaybe<StringComparisonExp>;
};
export type CurrentStakingPoolVoterOrderBy = {
    last_transaction_version?: InputMaybe<OrderBy>;
    operator_address?: InputMaybe<OrderBy>;
    operator_aptos_name_aggregate?: InputMaybe<CurrentAptosNamesAggregateOrderBy>;
    staking_pool_address?: InputMaybe<OrderBy>;
    voter_address?: InputMaybe<OrderBy>;
};
export declare enum CurrentStakingPoolVoterSelectColumn {
    LastTransactionVersion = "last_transaction_version",
    OperatorAddress = "operator_address",
    StakingPoolAddress = "staking_pool_address",
    VoterAddress = "voter_address"
}
export type CurrentStakingPoolVoterStreamCursorInput = {
    initial_value: CurrentStakingPoolVoterStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CurrentStakingPoolVoterStreamCursorValueInput = {
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    operator_address?: InputMaybe<Scalars["String"]["input"]>;
    staking_pool_address?: InputMaybe<Scalars["String"]["input"]>;
    voter_address?: InputMaybe<Scalars["String"]["input"]>;
};
export type CurrentTableItems = {
    decoded_key: Scalars["jsonb"]["output"];
    decoded_value?: Maybe<Scalars["jsonb"]["output"]>;
    is_deleted: Scalars["Boolean"]["output"];
    key: Scalars["String"]["output"];
    key_hash: Scalars["String"]["output"];
    last_transaction_version: Scalars["bigint"]["output"];
    table_handle: Scalars["String"]["output"];
};
export type CurrentTableItemsDecodedKeyArgs = {
    path?: InputMaybe<Scalars["String"]["input"]>;
};
export type CurrentTableItemsDecodedValueArgs = {
    path?: InputMaybe<Scalars["String"]["input"]>;
};
export type CurrentTableItemsBoolExp = {
    _and?: InputMaybe<Array<CurrentTableItemsBoolExp>>;
    _not?: InputMaybe<CurrentTableItemsBoolExp>;
    _or?: InputMaybe<Array<CurrentTableItemsBoolExp>>;
    decoded_key?: InputMaybe<JsonbComparisonExp>;
    decoded_value?: InputMaybe<JsonbComparisonExp>;
    is_deleted?: InputMaybe<BooleanComparisonExp>;
    key?: InputMaybe<StringComparisonExp>;
    key_hash?: InputMaybe<StringComparisonExp>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    table_handle?: InputMaybe<StringComparisonExp>;
};
export type CurrentTableItemsOrderBy = {
    decoded_key?: InputMaybe<OrderBy>;
    decoded_value?: InputMaybe<OrderBy>;
    is_deleted?: InputMaybe<OrderBy>;
    key?: InputMaybe<OrderBy>;
    key_hash?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    table_handle?: InputMaybe<OrderBy>;
};
export declare enum CurrentTableItemsSelectColumn {
    DecodedKey = "decoded_key",
    DecodedValue = "decoded_value",
    IsDeleted = "is_deleted",
    Key = "key",
    KeyHash = "key_hash",
    LastTransactionVersion = "last_transaction_version",
    TableHandle = "table_handle"
}
export type CurrentTableItemsStreamCursorInput = {
    initial_value: CurrentTableItemsStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CurrentTableItemsStreamCursorValueInput = {
    decoded_key?: InputMaybe<Scalars["jsonb"]["input"]>;
    decoded_value?: InputMaybe<Scalars["jsonb"]["input"]>;
    is_deleted?: InputMaybe<Scalars["Boolean"]["input"]>;
    key?: InputMaybe<Scalars["String"]["input"]>;
    key_hash?: InputMaybe<Scalars["String"]["input"]>;
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    table_handle?: InputMaybe<Scalars["String"]["input"]>;
};
export type CurrentTokenDatas = {
    collection_data_id_hash: Scalars["String"]["output"];
    collection_name: Scalars["String"]["output"];
    creator_address: Scalars["String"]["output"];
    current_collection_data?: Maybe<CurrentCollectionDatas>;
    default_properties: Scalars["jsonb"]["output"];
    description: Scalars["String"]["output"];
    description_mutable: Scalars["Boolean"]["output"];
    largest_property_version: Scalars["numeric"]["output"];
    last_transaction_timestamp: Scalars["timestamp"]["output"];
    last_transaction_version: Scalars["bigint"]["output"];
    maximum: Scalars["numeric"]["output"];
    maximum_mutable: Scalars["Boolean"]["output"];
    metadata_uri: Scalars["String"]["output"];
    name: Scalars["String"]["output"];
    payee_address: Scalars["String"]["output"];
    properties_mutable: Scalars["Boolean"]["output"];
    royalty_mutable: Scalars["Boolean"]["output"];
    royalty_points_denominator: Scalars["numeric"]["output"];
    royalty_points_numerator: Scalars["numeric"]["output"];
    supply: Scalars["numeric"]["output"];
    token_data_id_hash: Scalars["String"]["output"];
    uri_mutable: Scalars["Boolean"]["output"];
};
export type CurrentTokenDatasDefaultPropertiesArgs = {
    path?: InputMaybe<Scalars["String"]["input"]>;
};
export type CurrentTokenDatasBoolExp = {
    _and?: InputMaybe<Array<CurrentTokenDatasBoolExp>>;
    _not?: InputMaybe<CurrentTokenDatasBoolExp>;
    _or?: InputMaybe<Array<CurrentTokenDatasBoolExp>>;
    collection_data_id_hash?: InputMaybe<StringComparisonExp>;
    collection_name?: InputMaybe<StringComparisonExp>;
    creator_address?: InputMaybe<StringComparisonExp>;
    current_collection_data?: InputMaybe<CurrentCollectionDatasBoolExp>;
    default_properties?: InputMaybe<JsonbComparisonExp>;
    description?: InputMaybe<StringComparisonExp>;
    description_mutable?: InputMaybe<BooleanComparisonExp>;
    largest_property_version?: InputMaybe<NumericComparisonExp>;
    last_transaction_timestamp?: InputMaybe<TimestampComparisonExp>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    maximum?: InputMaybe<NumericComparisonExp>;
    maximum_mutable?: InputMaybe<BooleanComparisonExp>;
    metadata_uri?: InputMaybe<StringComparisonExp>;
    name?: InputMaybe<StringComparisonExp>;
    payee_address?: InputMaybe<StringComparisonExp>;
    properties_mutable?: InputMaybe<BooleanComparisonExp>;
    royalty_mutable?: InputMaybe<BooleanComparisonExp>;
    royalty_points_denominator?: InputMaybe<NumericComparisonExp>;
    royalty_points_numerator?: InputMaybe<NumericComparisonExp>;
    supply?: InputMaybe<NumericComparisonExp>;
    token_data_id_hash?: InputMaybe<StringComparisonExp>;
    uri_mutable?: InputMaybe<BooleanComparisonExp>;
};
export type CurrentTokenDatasOrderBy = {
    collection_data_id_hash?: InputMaybe<OrderBy>;
    collection_name?: InputMaybe<OrderBy>;
    creator_address?: InputMaybe<OrderBy>;
    current_collection_data?: InputMaybe<CurrentCollectionDatasOrderBy>;
    default_properties?: InputMaybe<OrderBy>;
    description?: InputMaybe<OrderBy>;
    description_mutable?: InputMaybe<OrderBy>;
    largest_property_version?: InputMaybe<OrderBy>;
    last_transaction_timestamp?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    maximum?: InputMaybe<OrderBy>;
    maximum_mutable?: InputMaybe<OrderBy>;
    metadata_uri?: InputMaybe<OrderBy>;
    name?: InputMaybe<OrderBy>;
    payee_address?: InputMaybe<OrderBy>;
    properties_mutable?: InputMaybe<OrderBy>;
    royalty_mutable?: InputMaybe<OrderBy>;
    royalty_points_denominator?: InputMaybe<OrderBy>;
    royalty_points_numerator?: InputMaybe<OrderBy>;
    supply?: InputMaybe<OrderBy>;
    token_data_id_hash?: InputMaybe<OrderBy>;
    uri_mutable?: InputMaybe<OrderBy>;
};
export declare enum CurrentTokenDatasSelectColumn {
    CollectionDataIdHash = "collection_data_id_hash",
    CollectionName = "collection_name",
    CreatorAddress = "creator_address",
    DefaultProperties = "default_properties",
    Description = "description",
    DescriptionMutable = "description_mutable",
    LargestPropertyVersion = "largest_property_version",
    LastTransactionTimestamp = "last_transaction_timestamp",
    LastTransactionVersion = "last_transaction_version",
    Maximum = "maximum",
    MaximumMutable = "maximum_mutable",
    MetadataUri = "metadata_uri",
    Name = "name",
    PayeeAddress = "payee_address",
    PropertiesMutable = "properties_mutable",
    RoyaltyMutable = "royalty_mutable",
    RoyaltyPointsDenominator = "royalty_points_denominator",
    RoyaltyPointsNumerator = "royalty_points_numerator",
    Supply = "supply",
    TokenDataIdHash = "token_data_id_hash",
    UriMutable = "uri_mutable"
}
export type CurrentTokenDatasStreamCursorInput = {
    initial_value: CurrentTokenDatasStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CurrentTokenDatasStreamCursorValueInput = {
    collection_data_id_hash?: InputMaybe<Scalars["String"]["input"]>;
    collection_name?: InputMaybe<Scalars["String"]["input"]>;
    creator_address?: InputMaybe<Scalars["String"]["input"]>;
    default_properties?: InputMaybe<Scalars["jsonb"]["input"]>;
    description?: InputMaybe<Scalars["String"]["input"]>;
    description_mutable?: InputMaybe<Scalars["Boolean"]["input"]>;
    largest_property_version?: InputMaybe<Scalars["numeric"]["input"]>;
    last_transaction_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    maximum?: InputMaybe<Scalars["numeric"]["input"]>;
    maximum_mutable?: InputMaybe<Scalars["Boolean"]["input"]>;
    metadata_uri?: InputMaybe<Scalars["String"]["input"]>;
    name?: InputMaybe<Scalars["String"]["input"]>;
    payee_address?: InputMaybe<Scalars["String"]["input"]>;
    properties_mutable?: InputMaybe<Scalars["Boolean"]["input"]>;
    royalty_mutable?: InputMaybe<Scalars["Boolean"]["input"]>;
    royalty_points_denominator?: InputMaybe<Scalars["numeric"]["input"]>;
    royalty_points_numerator?: InputMaybe<Scalars["numeric"]["input"]>;
    supply?: InputMaybe<Scalars["numeric"]["input"]>;
    token_data_id_hash?: InputMaybe<Scalars["String"]["input"]>;
    uri_mutable?: InputMaybe<Scalars["Boolean"]["input"]>;
};
export type CurrentTokenDatasV2 = {
    aptos_name?: Maybe<CurrentAptosNames>;
    cdn_asset_uris?: Maybe<NftMetadataCrawlerParsedAssetUris>;
    collection_id: Scalars["String"]["output"];
    current_collection?: Maybe<CurrentCollectionsV2>;
    current_token_ownership?: Maybe<CurrentTokenOwnershipsV2>;
    description: Scalars["String"]["output"];
    is_fungible_v2?: Maybe<Scalars["Boolean"]["output"]>;
    largest_property_version_v1?: Maybe<Scalars["numeric"]["output"]>;
    last_transaction_timestamp: Scalars["timestamp"]["output"];
    last_transaction_version: Scalars["bigint"]["output"];
    maximum?: Maybe<Scalars["numeric"]["output"]>;
    supply: Scalars["numeric"]["output"];
    token_data_id: Scalars["String"]["output"];
    token_name: Scalars["String"]["output"];
    token_properties: Scalars["jsonb"]["output"];
    token_standard: Scalars["String"]["output"];
    token_uri: Scalars["String"]["output"];
};
export type CurrentTokenDatasV2TokenPropertiesArgs = {
    path?: InputMaybe<Scalars["String"]["input"]>;
};
export type CurrentTokenDatasV2BoolExp = {
    _and?: InputMaybe<Array<CurrentTokenDatasV2BoolExp>>;
    _not?: InputMaybe<CurrentTokenDatasV2BoolExp>;
    _or?: InputMaybe<Array<CurrentTokenDatasV2BoolExp>>;
    aptos_name?: InputMaybe<CurrentAptosNamesBoolExp>;
    cdn_asset_uris?: InputMaybe<NftMetadataCrawlerParsedAssetUrisBoolExp>;
    collection_id?: InputMaybe<StringComparisonExp>;
    current_collection?: InputMaybe<CurrentCollectionsV2BoolExp>;
    current_token_ownership?: InputMaybe<CurrentTokenOwnershipsV2BoolExp>;
    description?: InputMaybe<StringComparisonExp>;
    is_fungible_v2?: InputMaybe<BooleanComparisonExp>;
    largest_property_version_v1?: InputMaybe<NumericComparisonExp>;
    last_transaction_timestamp?: InputMaybe<TimestampComparisonExp>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    maximum?: InputMaybe<NumericComparisonExp>;
    supply?: InputMaybe<NumericComparisonExp>;
    token_data_id?: InputMaybe<StringComparisonExp>;
    token_name?: InputMaybe<StringComparisonExp>;
    token_properties?: InputMaybe<JsonbComparisonExp>;
    token_standard?: InputMaybe<StringComparisonExp>;
    token_uri?: InputMaybe<StringComparisonExp>;
};
export type CurrentTokenDatasV2OrderBy = {
    aptos_name?: InputMaybe<CurrentAptosNamesOrderBy>;
    cdn_asset_uris?: InputMaybe<NftMetadataCrawlerParsedAssetUrisOrderBy>;
    collection_id?: InputMaybe<OrderBy>;
    current_collection?: InputMaybe<CurrentCollectionsV2OrderBy>;
    current_token_ownership?: InputMaybe<CurrentTokenOwnershipsV2OrderBy>;
    description?: InputMaybe<OrderBy>;
    is_fungible_v2?: InputMaybe<OrderBy>;
    largest_property_version_v1?: InputMaybe<OrderBy>;
    last_transaction_timestamp?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    maximum?: InputMaybe<OrderBy>;
    supply?: InputMaybe<OrderBy>;
    token_data_id?: InputMaybe<OrderBy>;
    token_name?: InputMaybe<OrderBy>;
    token_properties?: InputMaybe<OrderBy>;
    token_standard?: InputMaybe<OrderBy>;
    token_uri?: InputMaybe<OrderBy>;
};
export declare enum CurrentTokenDatasV2SelectColumn {
    CollectionId = "collection_id",
    Description = "description",
    IsFungibleV2 = "is_fungible_v2",
    LargestPropertyVersionV1 = "largest_property_version_v1",
    LastTransactionTimestamp = "last_transaction_timestamp",
    LastTransactionVersion = "last_transaction_version",
    Maximum = "maximum",
    Supply = "supply",
    TokenDataId = "token_data_id",
    TokenName = "token_name",
    TokenProperties = "token_properties",
    TokenStandard = "token_standard",
    TokenUri = "token_uri"
}
export type CurrentTokenDatasV2StreamCursorInput = {
    initial_value: CurrentTokenDatasV2StreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CurrentTokenDatasV2StreamCursorValueInput = {
    collection_id?: InputMaybe<Scalars["String"]["input"]>;
    description?: InputMaybe<Scalars["String"]["input"]>;
    is_fungible_v2?: InputMaybe<Scalars["Boolean"]["input"]>;
    largest_property_version_v1?: InputMaybe<Scalars["numeric"]["input"]>;
    last_transaction_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    maximum?: InputMaybe<Scalars["numeric"]["input"]>;
    supply?: InputMaybe<Scalars["numeric"]["input"]>;
    token_data_id?: InputMaybe<Scalars["String"]["input"]>;
    token_name?: InputMaybe<Scalars["String"]["input"]>;
    token_properties?: InputMaybe<Scalars["jsonb"]["input"]>;
    token_standard?: InputMaybe<Scalars["String"]["input"]>;
    token_uri?: InputMaybe<Scalars["String"]["input"]>;
};
export type CurrentTokenOwnerships = {
    amount: Scalars["numeric"]["output"];
    aptos_name?: Maybe<CurrentAptosNames>;
    collection_data_id_hash: Scalars["String"]["output"];
    collection_name: Scalars["String"]["output"];
    creator_address: Scalars["String"]["output"];
    current_collection_data?: Maybe<CurrentCollectionDatas>;
    current_token_data?: Maybe<CurrentTokenDatas>;
    last_transaction_timestamp: Scalars["timestamp"]["output"];
    last_transaction_version: Scalars["bigint"]["output"];
    name: Scalars["String"]["output"];
    owner_address: Scalars["String"]["output"];
    property_version: Scalars["numeric"]["output"];
    table_type: Scalars["String"]["output"];
    token_data_id_hash: Scalars["String"]["output"];
    token_properties: Scalars["jsonb"]["output"];
};
export type CurrentTokenOwnershipsTokenPropertiesArgs = {
    path?: InputMaybe<Scalars["String"]["input"]>;
};
export type CurrentTokenOwnershipsAggregate = {
    aggregate?: Maybe<CurrentTokenOwnershipsAggregateFields>;
    nodes: Array<CurrentTokenOwnerships>;
};
export type CurrentTokenOwnershipsAggregateFields = {
    avg?: Maybe<CurrentTokenOwnershipsAvgFields>;
    count: Scalars["Int"]["output"];
    max?: Maybe<CurrentTokenOwnershipsMaxFields>;
    min?: Maybe<CurrentTokenOwnershipsMinFields>;
    stddev?: Maybe<CurrentTokenOwnershipsStddevFields>;
    stddev_pop?: Maybe<CurrentTokenOwnershipsStddevPopFields>;
    stddev_samp?: Maybe<CurrentTokenOwnershipsStddevSampFields>;
    sum?: Maybe<CurrentTokenOwnershipsSumFields>;
    var_pop?: Maybe<CurrentTokenOwnershipsVarPopFields>;
    var_samp?: Maybe<CurrentTokenOwnershipsVarSampFields>;
    variance?: Maybe<CurrentTokenOwnershipsVarianceFields>;
};
export type CurrentTokenOwnershipsAggregateFieldsCountArgs = {
    columns?: InputMaybe<Array<CurrentTokenOwnershipsSelectColumn>>;
    distinct?: InputMaybe<Scalars["Boolean"]["input"]>;
};
export type CurrentTokenOwnershipsAggregateOrderBy = {
    avg?: InputMaybe<CurrentTokenOwnershipsAvgOrderBy>;
    count?: InputMaybe<OrderBy>;
    max?: InputMaybe<CurrentTokenOwnershipsMaxOrderBy>;
    min?: InputMaybe<CurrentTokenOwnershipsMinOrderBy>;
    stddev?: InputMaybe<CurrentTokenOwnershipsStddevOrderBy>;
    stddev_pop?: InputMaybe<CurrentTokenOwnershipsStddevPopOrderBy>;
    stddev_samp?: InputMaybe<CurrentTokenOwnershipsStddevSampOrderBy>;
    sum?: InputMaybe<CurrentTokenOwnershipsSumOrderBy>;
    var_pop?: InputMaybe<CurrentTokenOwnershipsVarPopOrderBy>;
    var_samp?: InputMaybe<CurrentTokenOwnershipsVarSampOrderBy>;
    variance?: InputMaybe<CurrentTokenOwnershipsVarianceOrderBy>;
};
export type CurrentTokenOwnershipsAvgFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
    property_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentTokenOwnershipsAvgOrderBy = {
    amount?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
};
export type CurrentTokenOwnershipsBoolExp = {
    _and?: InputMaybe<Array<CurrentTokenOwnershipsBoolExp>>;
    _not?: InputMaybe<CurrentTokenOwnershipsBoolExp>;
    _or?: InputMaybe<Array<CurrentTokenOwnershipsBoolExp>>;
    amount?: InputMaybe<NumericComparisonExp>;
    aptos_name?: InputMaybe<CurrentAptosNamesBoolExp>;
    collection_data_id_hash?: InputMaybe<StringComparisonExp>;
    collection_name?: InputMaybe<StringComparisonExp>;
    creator_address?: InputMaybe<StringComparisonExp>;
    current_collection_data?: InputMaybe<CurrentCollectionDatasBoolExp>;
    current_token_data?: InputMaybe<CurrentTokenDatasBoolExp>;
    last_transaction_timestamp?: InputMaybe<TimestampComparisonExp>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    name?: InputMaybe<StringComparisonExp>;
    owner_address?: InputMaybe<StringComparisonExp>;
    property_version?: InputMaybe<NumericComparisonExp>;
    table_type?: InputMaybe<StringComparisonExp>;
    token_data_id_hash?: InputMaybe<StringComparisonExp>;
    token_properties?: InputMaybe<JsonbComparisonExp>;
};
export type CurrentTokenOwnershipsMaxFields = {
    amount?: Maybe<Scalars["numeric"]["output"]>;
    collection_data_id_hash?: Maybe<Scalars["String"]["output"]>;
    collection_name?: Maybe<Scalars["String"]["output"]>;
    creator_address?: Maybe<Scalars["String"]["output"]>;
    last_transaction_timestamp?: Maybe<Scalars["timestamp"]["output"]>;
    last_transaction_version?: Maybe<Scalars["bigint"]["output"]>;
    name?: Maybe<Scalars["String"]["output"]>;
    owner_address?: Maybe<Scalars["String"]["output"]>;
    property_version?: Maybe<Scalars["numeric"]["output"]>;
    table_type?: Maybe<Scalars["String"]["output"]>;
    token_data_id_hash?: Maybe<Scalars["String"]["output"]>;
};
export type CurrentTokenOwnershipsMaxOrderBy = {
    amount?: InputMaybe<OrderBy>;
    collection_data_id_hash?: InputMaybe<OrderBy>;
    collection_name?: InputMaybe<OrderBy>;
    creator_address?: InputMaybe<OrderBy>;
    last_transaction_timestamp?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    name?: InputMaybe<OrderBy>;
    owner_address?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
    table_type?: InputMaybe<OrderBy>;
    token_data_id_hash?: InputMaybe<OrderBy>;
};
export type CurrentTokenOwnershipsMinFields = {
    amount?: Maybe<Scalars["numeric"]["output"]>;
    collection_data_id_hash?: Maybe<Scalars["String"]["output"]>;
    collection_name?: Maybe<Scalars["String"]["output"]>;
    creator_address?: Maybe<Scalars["String"]["output"]>;
    last_transaction_timestamp?: Maybe<Scalars["timestamp"]["output"]>;
    last_transaction_version?: Maybe<Scalars["bigint"]["output"]>;
    name?: Maybe<Scalars["String"]["output"]>;
    owner_address?: Maybe<Scalars["String"]["output"]>;
    property_version?: Maybe<Scalars["numeric"]["output"]>;
    table_type?: Maybe<Scalars["String"]["output"]>;
    token_data_id_hash?: Maybe<Scalars["String"]["output"]>;
};
export type CurrentTokenOwnershipsMinOrderBy = {
    amount?: InputMaybe<OrderBy>;
    collection_data_id_hash?: InputMaybe<OrderBy>;
    collection_name?: InputMaybe<OrderBy>;
    creator_address?: InputMaybe<OrderBy>;
    last_transaction_timestamp?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    name?: InputMaybe<OrderBy>;
    owner_address?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
    table_type?: InputMaybe<OrderBy>;
    token_data_id_hash?: InputMaybe<OrderBy>;
};
export type CurrentTokenOwnershipsOrderBy = {
    amount?: InputMaybe<OrderBy>;
    aptos_name?: InputMaybe<CurrentAptosNamesOrderBy>;
    collection_data_id_hash?: InputMaybe<OrderBy>;
    collection_name?: InputMaybe<OrderBy>;
    creator_address?: InputMaybe<OrderBy>;
    current_collection_data?: InputMaybe<CurrentCollectionDatasOrderBy>;
    current_token_data?: InputMaybe<CurrentTokenDatasOrderBy>;
    last_transaction_timestamp?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    name?: InputMaybe<OrderBy>;
    owner_address?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
    table_type?: InputMaybe<OrderBy>;
    token_data_id_hash?: InputMaybe<OrderBy>;
    token_properties?: InputMaybe<OrderBy>;
};
export declare enum CurrentTokenOwnershipsSelectColumn {
    Amount = "amount",
    CollectionDataIdHash = "collection_data_id_hash",
    CollectionName = "collection_name",
    CreatorAddress = "creator_address",
    LastTransactionTimestamp = "last_transaction_timestamp",
    LastTransactionVersion = "last_transaction_version",
    Name = "name",
    OwnerAddress = "owner_address",
    PropertyVersion = "property_version",
    TableType = "table_type",
    TokenDataIdHash = "token_data_id_hash",
    TokenProperties = "token_properties"
}
export type CurrentTokenOwnershipsStddevFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
    property_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentTokenOwnershipsStddevOrderBy = {
    amount?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
};
export type CurrentTokenOwnershipsStddevPopFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
    property_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentTokenOwnershipsStddevPopOrderBy = {
    amount?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
};
export type CurrentTokenOwnershipsStddevSampFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
    property_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentTokenOwnershipsStddevSampOrderBy = {
    amount?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
};
export type CurrentTokenOwnershipsStreamCursorInput = {
    initial_value: CurrentTokenOwnershipsStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CurrentTokenOwnershipsStreamCursorValueInput = {
    amount?: InputMaybe<Scalars["numeric"]["input"]>;
    collection_data_id_hash?: InputMaybe<Scalars["String"]["input"]>;
    collection_name?: InputMaybe<Scalars["String"]["input"]>;
    creator_address?: InputMaybe<Scalars["String"]["input"]>;
    last_transaction_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    name?: InputMaybe<Scalars["String"]["input"]>;
    owner_address?: InputMaybe<Scalars["String"]["input"]>;
    property_version?: InputMaybe<Scalars["numeric"]["input"]>;
    table_type?: InputMaybe<Scalars["String"]["input"]>;
    token_data_id_hash?: InputMaybe<Scalars["String"]["input"]>;
    token_properties?: InputMaybe<Scalars["jsonb"]["input"]>;
};
export type CurrentTokenOwnershipsSumFields = {
    amount?: Maybe<Scalars["numeric"]["output"]>;
    last_transaction_version?: Maybe<Scalars["bigint"]["output"]>;
    property_version?: Maybe<Scalars["numeric"]["output"]>;
};
export type CurrentTokenOwnershipsSumOrderBy = {
    amount?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
};
export type CurrentTokenOwnershipsV2 = {
    amount: Scalars["numeric"]["output"];
    composed_nfts: Array<CurrentTokenOwnershipsV2>;
    composed_nfts_aggregate: CurrentTokenOwnershipsV2Aggregate;
    current_token_data?: Maybe<CurrentTokenDatasV2>;
    is_fungible_v2?: Maybe<Scalars["Boolean"]["output"]>;
    is_soulbound_v2?: Maybe<Scalars["Boolean"]["output"]>;
    last_transaction_timestamp: Scalars["timestamp"]["output"];
    last_transaction_version: Scalars["bigint"]["output"];
    owner_address: Scalars["String"]["output"];
    property_version_v1: Scalars["numeric"]["output"];
    storage_id: Scalars["String"]["output"];
    table_type_v1?: Maybe<Scalars["String"]["output"]>;
    token_data_id: Scalars["String"]["output"];
    token_properties_mutated_v1?: Maybe<Scalars["jsonb"]["output"]>;
    token_standard: Scalars["String"]["output"];
};
export type CurrentTokenOwnershipsV2ComposedNftsArgs = {
    distinct_on?: InputMaybe<Array<CurrentTokenOwnershipsV2SelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentTokenOwnershipsV2OrderBy>>;
    where?: InputMaybe<CurrentTokenOwnershipsV2BoolExp>;
};
export type CurrentTokenOwnershipsV2ComposedNftsAggregateArgs = {
    distinct_on?: InputMaybe<Array<CurrentTokenOwnershipsV2SelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentTokenOwnershipsV2OrderBy>>;
    where?: InputMaybe<CurrentTokenOwnershipsV2BoolExp>;
};
export type CurrentTokenOwnershipsV2TokenPropertiesMutatedV1Args = {
    path?: InputMaybe<Scalars["String"]["input"]>;
};
export type CurrentTokenOwnershipsV2Aggregate = {
    aggregate?: Maybe<CurrentTokenOwnershipsV2AggregateFields>;
    nodes: Array<CurrentTokenOwnershipsV2>;
};
export type CurrentTokenOwnershipsV2AggregateFields = {
    avg?: Maybe<CurrentTokenOwnershipsV2AvgFields>;
    count: Scalars["Int"]["output"];
    max?: Maybe<CurrentTokenOwnershipsV2MaxFields>;
    min?: Maybe<CurrentTokenOwnershipsV2MinFields>;
    stddev?: Maybe<CurrentTokenOwnershipsV2StddevFields>;
    stddev_pop?: Maybe<CurrentTokenOwnershipsV2StddevPopFields>;
    stddev_samp?: Maybe<CurrentTokenOwnershipsV2StddevSampFields>;
    sum?: Maybe<CurrentTokenOwnershipsV2SumFields>;
    var_pop?: Maybe<CurrentTokenOwnershipsV2VarPopFields>;
    var_samp?: Maybe<CurrentTokenOwnershipsV2VarSampFields>;
    variance?: Maybe<CurrentTokenOwnershipsV2VarianceFields>;
};
export type CurrentTokenOwnershipsV2AggregateFieldsCountArgs = {
    columns?: InputMaybe<Array<CurrentTokenOwnershipsV2SelectColumn>>;
    distinct?: InputMaybe<Scalars["Boolean"]["input"]>;
};
export type CurrentTokenOwnershipsV2AggregateOrderBy = {
    avg?: InputMaybe<CurrentTokenOwnershipsV2AvgOrderBy>;
    count?: InputMaybe<OrderBy>;
    max?: InputMaybe<CurrentTokenOwnershipsV2MaxOrderBy>;
    min?: InputMaybe<CurrentTokenOwnershipsV2MinOrderBy>;
    stddev?: InputMaybe<CurrentTokenOwnershipsV2StddevOrderBy>;
    stddev_pop?: InputMaybe<CurrentTokenOwnershipsV2StddevPopOrderBy>;
    stddev_samp?: InputMaybe<CurrentTokenOwnershipsV2StddevSampOrderBy>;
    sum?: InputMaybe<CurrentTokenOwnershipsV2SumOrderBy>;
    var_pop?: InputMaybe<CurrentTokenOwnershipsV2VarPopOrderBy>;
    var_samp?: InputMaybe<CurrentTokenOwnershipsV2VarSampOrderBy>;
    variance?: InputMaybe<CurrentTokenOwnershipsV2VarianceOrderBy>;
};
export type CurrentTokenOwnershipsV2AvgFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
    property_version_v1?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentTokenOwnershipsV2AvgOrderBy = {
    amount?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    property_version_v1?: InputMaybe<OrderBy>;
};
export type CurrentTokenOwnershipsV2BoolExp = {
    _and?: InputMaybe<Array<CurrentTokenOwnershipsV2BoolExp>>;
    _not?: InputMaybe<CurrentTokenOwnershipsV2BoolExp>;
    _or?: InputMaybe<Array<CurrentTokenOwnershipsV2BoolExp>>;
    amount?: InputMaybe<NumericComparisonExp>;
    composed_nfts?: InputMaybe<CurrentTokenOwnershipsV2BoolExp>;
    current_token_data?: InputMaybe<CurrentTokenDatasV2BoolExp>;
    is_fungible_v2?: InputMaybe<BooleanComparisonExp>;
    is_soulbound_v2?: InputMaybe<BooleanComparisonExp>;
    last_transaction_timestamp?: InputMaybe<TimestampComparisonExp>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    owner_address?: InputMaybe<StringComparisonExp>;
    property_version_v1?: InputMaybe<NumericComparisonExp>;
    storage_id?: InputMaybe<StringComparisonExp>;
    table_type_v1?: InputMaybe<StringComparisonExp>;
    token_data_id?: InputMaybe<StringComparisonExp>;
    token_properties_mutated_v1?: InputMaybe<JsonbComparisonExp>;
    token_standard?: InputMaybe<StringComparisonExp>;
};
export type CurrentTokenOwnershipsV2MaxFields = {
    amount?: Maybe<Scalars["numeric"]["output"]>;
    last_transaction_timestamp?: Maybe<Scalars["timestamp"]["output"]>;
    last_transaction_version?: Maybe<Scalars["bigint"]["output"]>;
    owner_address?: Maybe<Scalars["String"]["output"]>;
    property_version_v1?: Maybe<Scalars["numeric"]["output"]>;
    storage_id?: Maybe<Scalars["String"]["output"]>;
    table_type_v1?: Maybe<Scalars["String"]["output"]>;
    token_data_id?: Maybe<Scalars["String"]["output"]>;
    token_standard?: Maybe<Scalars["String"]["output"]>;
};
export type CurrentTokenOwnershipsV2MaxOrderBy = {
    amount?: InputMaybe<OrderBy>;
    last_transaction_timestamp?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    owner_address?: InputMaybe<OrderBy>;
    property_version_v1?: InputMaybe<OrderBy>;
    storage_id?: InputMaybe<OrderBy>;
    table_type_v1?: InputMaybe<OrderBy>;
    token_data_id?: InputMaybe<OrderBy>;
    token_standard?: InputMaybe<OrderBy>;
};
export type CurrentTokenOwnershipsV2MinFields = {
    amount?: Maybe<Scalars["numeric"]["output"]>;
    last_transaction_timestamp?: Maybe<Scalars["timestamp"]["output"]>;
    last_transaction_version?: Maybe<Scalars["bigint"]["output"]>;
    owner_address?: Maybe<Scalars["String"]["output"]>;
    property_version_v1?: Maybe<Scalars["numeric"]["output"]>;
    storage_id?: Maybe<Scalars["String"]["output"]>;
    table_type_v1?: Maybe<Scalars["String"]["output"]>;
    token_data_id?: Maybe<Scalars["String"]["output"]>;
    token_standard?: Maybe<Scalars["String"]["output"]>;
};
export type CurrentTokenOwnershipsV2MinOrderBy = {
    amount?: InputMaybe<OrderBy>;
    last_transaction_timestamp?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    owner_address?: InputMaybe<OrderBy>;
    property_version_v1?: InputMaybe<OrderBy>;
    storage_id?: InputMaybe<OrderBy>;
    table_type_v1?: InputMaybe<OrderBy>;
    token_data_id?: InputMaybe<OrderBy>;
    token_standard?: InputMaybe<OrderBy>;
};
export type CurrentTokenOwnershipsV2OrderBy = {
    amount?: InputMaybe<OrderBy>;
    composed_nfts_aggregate?: InputMaybe<CurrentTokenOwnershipsV2AggregateOrderBy>;
    current_token_data?: InputMaybe<CurrentTokenDatasV2OrderBy>;
    is_fungible_v2?: InputMaybe<OrderBy>;
    is_soulbound_v2?: InputMaybe<OrderBy>;
    last_transaction_timestamp?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    owner_address?: InputMaybe<OrderBy>;
    property_version_v1?: InputMaybe<OrderBy>;
    storage_id?: InputMaybe<OrderBy>;
    table_type_v1?: InputMaybe<OrderBy>;
    token_data_id?: InputMaybe<OrderBy>;
    token_properties_mutated_v1?: InputMaybe<OrderBy>;
    token_standard?: InputMaybe<OrderBy>;
};
export declare enum CurrentTokenOwnershipsV2SelectColumn {
    Amount = "amount",
    IsFungibleV2 = "is_fungible_v2",
    IsSoulboundV2 = "is_soulbound_v2",
    LastTransactionTimestamp = "last_transaction_timestamp",
    LastTransactionVersion = "last_transaction_version",
    OwnerAddress = "owner_address",
    PropertyVersionV1 = "property_version_v1",
    StorageId = "storage_id",
    TableTypeV1 = "table_type_v1",
    TokenDataId = "token_data_id",
    TokenPropertiesMutatedV1 = "token_properties_mutated_v1",
    TokenStandard = "token_standard"
}
export type CurrentTokenOwnershipsV2StddevFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
    property_version_v1?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentTokenOwnershipsV2StddevOrderBy = {
    amount?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    property_version_v1?: InputMaybe<OrderBy>;
};
export type CurrentTokenOwnershipsV2StddevPopFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
    property_version_v1?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentTokenOwnershipsV2StddevPopOrderBy = {
    amount?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    property_version_v1?: InputMaybe<OrderBy>;
};
export type CurrentTokenOwnershipsV2StddevSampFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
    property_version_v1?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentTokenOwnershipsV2StddevSampOrderBy = {
    amount?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    property_version_v1?: InputMaybe<OrderBy>;
};
export type CurrentTokenOwnershipsV2StreamCursorInput = {
    initial_value: CurrentTokenOwnershipsV2StreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CurrentTokenOwnershipsV2StreamCursorValueInput = {
    amount?: InputMaybe<Scalars["numeric"]["input"]>;
    is_fungible_v2?: InputMaybe<Scalars["Boolean"]["input"]>;
    is_soulbound_v2?: InputMaybe<Scalars["Boolean"]["input"]>;
    last_transaction_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    owner_address?: InputMaybe<Scalars["String"]["input"]>;
    property_version_v1?: InputMaybe<Scalars["numeric"]["input"]>;
    storage_id?: InputMaybe<Scalars["String"]["input"]>;
    table_type_v1?: InputMaybe<Scalars["String"]["input"]>;
    token_data_id?: InputMaybe<Scalars["String"]["input"]>;
    token_properties_mutated_v1?: InputMaybe<Scalars["jsonb"]["input"]>;
    token_standard?: InputMaybe<Scalars["String"]["input"]>;
};
export type CurrentTokenOwnershipsV2SumFields = {
    amount?: Maybe<Scalars["numeric"]["output"]>;
    last_transaction_version?: Maybe<Scalars["bigint"]["output"]>;
    property_version_v1?: Maybe<Scalars["numeric"]["output"]>;
};
export type CurrentTokenOwnershipsV2SumOrderBy = {
    amount?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    property_version_v1?: InputMaybe<OrderBy>;
};
export type CurrentTokenOwnershipsV2VarPopFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
    property_version_v1?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentTokenOwnershipsV2VarPopOrderBy = {
    amount?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    property_version_v1?: InputMaybe<OrderBy>;
};
export type CurrentTokenOwnershipsV2VarSampFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
    property_version_v1?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentTokenOwnershipsV2VarSampOrderBy = {
    amount?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    property_version_v1?: InputMaybe<OrderBy>;
};
export type CurrentTokenOwnershipsV2VarianceFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
    property_version_v1?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentTokenOwnershipsV2VarianceOrderBy = {
    amount?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    property_version_v1?: InputMaybe<OrderBy>;
};
export type CurrentTokenOwnershipsVarPopFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
    property_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentTokenOwnershipsVarPopOrderBy = {
    amount?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
};
export type CurrentTokenOwnershipsVarSampFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
    property_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentTokenOwnershipsVarSampOrderBy = {
    amount?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
};
export type CurrentTokenOwnershipsVarianceFields = {
    amount?: Maybe<Scalars["Float"]["output"]>;
    last_transaction_version?: Maybe<Scalars["Float"]["output"]>;
    property_version?: Maybe<Scalars["Float"]["output"]>;
};
export type CurrentTokenOwnershipsVarianceOrderBy = {
    amount?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
};
export type CurrentTokenPendingClaims = {
    amount: Scalars["numeric"]["output"];
    collection_data_id_hash: Scalars["String"]["output"];
    collection_id: Scalars["String"]["output"];
    collection_name: Scalars["String"]["output"];
    creator_address: Scalars["String"]["output"];
    current_collection_data?: Maybe<CurrentCollectionDatas>;
    current_collection_v2?: Maybe<CurrentCollectionsV2>;
    current_token_data?: Maybe<CurrentTokenDatas>;
    current_token_data_v2?: Maybe<CurrentTokenDatasV2>;
    from_address: Scalars["String"]["output"];
    last_transaction_timestamp: Scalars["timestamp"]["output"];
    last_transaction_version: Scalars["bigint"]["output"];
    name: Scalars["String"]["output"];
    property_version: Scalars["numeric"]["output"];
    table_handle: Scalars["String"]["output"];
    to_address: Scalars["String"]["output"];
    token?: Maybe<Tokens>;
    token_data_id: Scalars["String"]["output"];
    token_data_id_hash: Scalars["String"]["output"];
};
export type CurrentTokenPendingClaimsBoolExp = {
    _and?: InputMaybe<Array<CurrentTokenPendingClaimsBoolExp>>;
    _not?: InputMaybe<CurrentTokenPendingClaimsBoolExp>;
    _or?: InputMaybe<Array<CurrentTokenPendingClaimsBoolExp>>;
    amount?: InputMaybe<NumericComparisonExp>;
    collection_data_id_hash?: InputMaybe<StringComparisonExp>;
    collection_id?: InputMaybe<StringComparisonExp>;
    collection_name?: InputMaybe<StringComparisonExp>;
    creator_address?: InputMaybe<StringComparisonExp>;
    current_collection_data?: InputMaybe<CurrentCollectionDatasBoolExp>;
    current_collection_v2?: InputMaybe<CurrentCollectionsV2BoolExp>;
    current_token_data?: InputMaybe<CurrentTokenDatasBoolExp>;
    current_token_data_v2?: InputMaybe<CurrentTokenDatasV2BoolExp>;
    from_address?: InputMaybe<StringComparisonExp>;
    last_transaction_timestamp?: InputMaybe<TimestampComparisonExp>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    name?: InputMaybe<StringComparisonExp>;
    property_version?: InputMaybe<NumericComparisonExp>;
    table_handle?: InputMaybe<StringComparisonExp>;
    to_address?: InputMaybe<StringComparisonExp>;
    token?: InputMaybe<TokensBoolExp>;
    token_data_id?: InputMaybe<StringComparisonExp>;
    token_data_id_hash?: InputMaybe<StringComparisonExp>;
};
export type CurrentTokenPendingClaimsOrderBy = {
    amount?: InputMaybe<OrderBy>;
    collection_data_id_hash?: InputMaybe<OrderBy>;
    collection_id?: InputMaybe<OrderBy>;
    collection_name?: InputMaybe<OrderBy>;
    creator_address?: InputMaybe<OrderBy>;
    current_collection_data?: InputMaybe<CurrentCollectionDatasOrderBy>;
    current_collection_v2?: InputMaybe<CurrentCollectionsV2OrderBy>;
    current_token_data?: InputMaybe<CurrentTokenDatasOrderBy>;
    current_token_data_v2?: InputMaybe<CurrentTokenDatasV2OrderBy>;
    from_address?: InputMaybe<OrderBy>;
    last_transaction_timestamp?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    name?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
    table_handle?: InputMaybe<OrderBy>;
    to_address?: InputMaybe<OrderBy>;
    token?: InputMaybe<TokensOrderBy>;
    token_data_id?: InputMaybe<OrderBy>;
    token_data_id_hash?: InputMaybe<OrderBy>;
};
export declare enum CurrentTokenPendingClaimsSelectColumn {
    Amount = "amount",
    CollectionDataIdHash = "collection_data_id_hash",
    CollectionId = "collection_id",
    CollectionName = "collection_name",
    CreatorAddress = "creator_address",
    FromAddress = "from_address",
    LastTransactionTimestamp = "last_transaction_timestamp",
    LastTransactionVersion = "last_transaction_version",
    Name = "name",
    PropertyVersion = "property_version",
    TableHandle = "table_handle",
    ToAddress = "to_address",
    TokenDataId = "token_data_id",
    TokenDataIdHash = "token_data_id_hash"
}
export type CurrentTokenPendingClaimsStreamCursorInput = {
    initial_value: CurrentTokenPendingClaimsStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type CurrentTokenPendingClaimsStreamCursorValueInput = {
    amount?: InputMaybe<Scalars["numeric"]["input"]>;
    collection_data_id_hash?: InputMaybe<Scalars["String"]["input"]>;
    collection_id?: InputMaybe<Scalars["String"]["input"]>;
    collection_name?: InputMaybe<Scalars["String"]["input"]>;
    creator_address?: InputMaybe<Scalars["String"]["input"]>;
    from_address?: InputMaybe<Scalars["String"]["input"]>;
    last_transaction_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    name?: InputMaybe<Scalars["String"]["input"]>;
    property_version?: InputMaybe<Scalars["numeric"]["input"]>;
    table_handle?: InputMaybe<Scalars["String"]["input"]>;
    to_address?: InputMaybe<Scalars["String"]["input"]>;
    token_data_id?: InputMaybe<Scalars["String"]["input"]>;
    token_data_id_hash?: InputMaybe<Scalars["String"]["input"]>;
};
export declare enum CursorOrdering {
    Asc = "ASC",
    Desc = "DESC"
}
export type DelegatedStakingActivities = {
    amount: Scalars["numeric"]["output"];
    delegator_address: Scalars["String"]["output"];
    event_index: Scalars["bigint"]["output"];
    event_type: Scalars["String"]["output"];
    pool_address: Scalars["String"]["output"];
    transaction_version: Scalars["bigint"]["output"];
};
export type DelegatedStakingActivitiesAggregateOrderBy = {
    avg?: InputMaybe<DelegatedStakingActivitiesAvgOrderBy>;
    count?: InputMaybe<OrderBy>;
    max?: InputMaybe<DelegatedStakingActivitiesMaxOrderBy>;
    min?: InputMaybe<DelegatedStakingActivitiesMinOrderBy>;
    stddev?: InputMaybe<DelegatedStakingActivitiesStddevOrderBy>;
    stddev_pop?: InputMaybe<DelegatedStakingActivitiesStddevPopOrderBy>;
    stddev_samp?: InputMaybe<DelegatedStakingActivitiesStddevSampOrderBy>;
    sum?: InputMaybe<DelegatedStakingActivitiesSumOrderBy>;
    var_pop?: InputMaybe<DelegatedStakingActivitiesVarPopOrderBy>;
    var_samp?: InputMaybe<DelegatedStakingActivitiesVarSampOrderBy>;
    variance?: InputMaybe<DelegatedStakingActivitiesVarianceOrderBy>;
};
export type DelegatedStakingActivitiesAvgOrderBy = {
    amount?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type DelegatedStakingActivitiesBoolExp = {
    _and?: InputMaybe<Array<DelegatedStakingActivitiesBoolExp>>;
    _not?: InputMaybe<DelegatedStakingActivitiesBoolExp>;
    _or?: InputMaybe<Array<DelegatedStakingActivitiesBoolExp>>;
    amount?: InputMaybe<NumericComparisonExp>;
    delegator_address?: InputMaybe<StringComparisonExp>;
    event_index?: InputMaybe<BigintComparisonExp>;
    event_type?: InputMaybe<StringComparisonExp>;
    pool_address?: InputMaybe<StringComparisonExp>;
    transaction_version?: InputMaybe<BigintComparisonExp>;
};
export type DelegatedStakingActivitiesMaxOrderBy = {
    amount?: InputMaybe<OrderBy>;
    delegator_address?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_type?: InputMaybe<OrderBy>;
    pool_address?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type DelegatedStakingActivitiesMinOrderBy = {
    amount?: InputMaybe<OrderBy>;
    delegator_address?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_type?: InputMaybe<OrderBy>;
    pool_address?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type DelegatedStakingActivitiesOrderBy = {
    amount?: InputMaybe<OrderBy>;
    delegator_address?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_type?: InputMaybe<OrderBy>;
    pool_address?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export declare enum DelegatedStakingActivitiesSelectColumn {
    Amount = "amount",
    DelegatorAddress = "delegator_address",
    EventIndex = "event_index",
    EventType = "event_type",
    PoolAddress = "pool_address",
    TransactionVersion = "transaction_version"
}
export type DelegatedStakingActivitiesStddevOrderBy = {
    amount?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type DelegatedStakingActivitiesStddevPopOrderBy = {
    amount?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type DelegatedStakingActivitiesStddevSampOrderBy = {
    amount?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type DelegatedStakingActivitiesStreamCursorInput = {
    initial_value: DelegatedStakingActivitiesStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type DelegatedStakingActivitiesStreamCursorValueInput = {
    amount?: InputMaybe<Scalars["numeric"]["input"]>;
    delegator_address?: InputMaybe<Scalars["String"]["input"]>;
    event_index?: InputMaybe<Scalars["bigint"]["input"]>;
    event_type?: InputMaybe<Scalars["String"]["input"]>;
    pool_address?: InputMaybe<Scalars["String"]["input"]>;
    transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
};
export type DelegatedStakingActivitiesSumOrderBy = {
    amount?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type DelegatedStakingActivitiesVarPopOrderBy = {
    amount?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type DelegatedStakingActivitiesVarSampOrderBy = {
    amount?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type DelegatedStakingActivitiesVarianceOrderBy = {
    amount?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type DelegatedStakingPools = {
    current_staking_pool?: Maybe<CurrentStakingPoolVoter>;
    first_transaction_version: Scalars["bigint"]["output"];
    staking_pool_address: Scalars["String"]["output"];
};
export type DelegatedStakingPoolsBoolExp = {
    _and?: InputMaybe<Array<DelegatedStakingPoolsBoolExp>>;
    _not?: InputMaybe<DelegatedStakingPoolsBoolExp>;
    _or?: InputMaybe<Array<DelegatedStakingPoolsBoolExp>>;
    current_staking_pool?: InputMaybe<CurrentStakingPoolVoterBoolExp>;
    first_transaction_version?: InputMaybe<BigintComparisonExp>;
    staking_pool_address?: InputMaybe<StringComparisonExp>;
};
export type DelegatedStakingPoolsOrderBy = {
    current_staking_pool?: InputMaybe<CurrentStakingPoolVoterOrderBy>;
    first_transaction_version?: InputMaybe<OrderBy>;
    staking_pool_address?: InputMaybe<OrderBy>;
};
export declare enum DelegatedStakingPoolsSelectColumn {
    FirstTransactionVersion = "first_transaction_version",
    StakingPoolAddress = "staking_pool_address"
}
export type DelegatedStakingPoolsStreamCursorInput = {
    initial_value: DelegatedStakingPoolsStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type DelegatedStakingPoolsStreamCursorValueInput = {
    first_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    staking_pool_address?: InputMaybe<Scalars["String"]["input"]>;
};
export type DelegatorDistinctPool = {
    current_pool_balance?: Maybe<CurrentDelegatedStakingPoolBalances>;
    delegator_address?: Maybe<Scalars["String"]["output"]>;
    pool_address?: Maybe<Scalars["String"]["output"]>;
    staking_pool_metadata?: Maybe<CurrentStakingPoolVoter>;
};
export type DelegatorDistinctPoolAggregate = {
    aggregate?: Maybe<DelegatorDistinctPoolAggregateFields>;
    nodes: Array<DelegatorDistinctPool>;
};
export type DelegatorDistinctPoolAggregateFields = {
    count: Scalars["Int"]["output"];
    max?: Maybe<DelegatorDistinctPoolMaxFields>;
    min?: Maybe<DelegatorDistinctPoolMinFields>;
};
export type DelegatorDistinctPoolAggregateFieldsCountArgs = {
    columns?: InputMaybe<Array<DelegatorDistinctPoolSelectColumn>>;
    distinct?: InputMaybe<Scalars["Boolean"]["input"]>;
};
export type DelegatorDistinctPoolBoolExp = {
    _and?: InputMaybe<Array<DelegatorDistinctPoolBoolExp>>;
    _not?: InputMaybe<DelegatorDistinctPoolBoolExp>;
    _or?: InputMaybe<Array<DelegatorDistinctPoolBoolExp>>;
    current_pool_balance?: InputMaybe<CurrentDelegatedStakingPoolBalancesBoolExp>;
    delegator_address?: InputMaybe<StringComparisonExp>;
    pool_address?: InputMaybe<StringComparisonExp>;
    staking_pool_metadata?: InputMaybe<CurrentStakingPoolVoterBoolExp>;
};
export type DelegatorDistinctPoolMaxFields = {
    delegator_address?: Maybe<Scalars["String"]["output"]>;
    pool_address?: Maybe<Scalars["String"]["output"]>;
};
export type DelegatorDistinctPoolMinFields = {
    delegator_address?: Maybe<Scalars["String"]["output"]>;
    pool_address?: Maybe<Scalars["String"]["output"]>;
};
export type DelegatorDistinctPoolOrderBy = {
    current_pool_balance?: InputMaybe<CurrentDelegatedStakingPoolBalancesOrderBy>;
    delegator_address?: InputMaybe<OrderBy>;
    pool_address?: InputMaybe<OrderBy>;
    staking_pool_metadata?: InputMaybe<CurrentStakingPoolVoterOrderBy>;
};
export declare enum DelegatorDistinctPoolSelectColumn {
    DelegatorAddress = "delegator_address",
    PoolAddress = "pool_address"
}
export type DelegatorDistinctPoolStreamCursorInput = {
    initial_value: DelegatorDistinctPoolStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type DelegatorDistinctPoolStreamCursorValueInput = {
    delegator_address?: InputMaybe<Scalars["String"]["input"]>;
    pool_address?: InputMaybe<Scalars["String"]["input"]>;
};
export type Events = {
    account_address: Scalars["String"]["output"];
    creation_number: Scalars["bigint"]["output"];
    data: Scalars["jsonb"]["output"];
    event_index: Scalars["bigint"]["output"];
    indexed_type: Scalars["String"]["output"];
    sequence_number: Scalars["bigint"]["output"];
    transaction_block_height: Scalars["bigint"]["output"];
    transaction_version: Scalars["bigint"]["output"];
    type: Scalars["String"]["output"];
};
export type EventsDataArgs = {
    path?: InputMaybe<Scalars["String"]["input"]>;
};
export type EventsBoolExp = {
    _and?: InputMaybe<Array<EventsBoolExp>>;
    _not?: InputMaybe<EventsBoolExp>;
    _or?: InputMaybe<Array<EventsBoolExp>>;
    account_address?: InputMaybe<StringComparisonExp>;
    creation_number?: InputMaybe<BigintComparisonExp>;
    data?: InputMaybe<JsonbComparisonExp>;
    event_index?: InputMaybe<BigintComparisonExp>;
    indexed_type?: InputMaybe<StringComparisonExp>;
    sequence_number?: InputMaybe<BigintComparisonExp>;
    transaction_block_height?: InputMaybe<BigintComparisonExp>;
    transaction_version?: InputMaybe<BigintComparisonExp>;
    type?: InputMaybe<StringComparisonExp>;
};
export type EventsOrderBy = {
    account_address?: InputMaybe<OrderBy>;
    creation_number?: InputMaybe<OrderBy>;
    data?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    indexed_type?: InputMaybe<OrderBy>;
    sequence_number?: InputMaybe<OrderBy>;
    transaction_block_height?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
    type?: InputMaybe<OrderBy>;
};
export declare enum EventsSelectColumn {
    AccountAddress = "account_address",
    CreationNumber = "creation_number",
    Data = "data",
    EventIndex = "event_index",
    IndexedType = "indexed_type",
    SequenceNumber = "sequence_number",
    TransactionBlockHeight = "transaction_block_height",
    TransactionVersion = "transaction_version",
    Type = "type"
}
export type EventsStreamCursorInput = {
    initial_value: EventsStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type EventsStreamCursorValueInput = {
    account_address?: InputMaybe<Scalars["String"]["input"]>;
    creation_number?: InputMaybe<Scalars["bigint"]["input"]>;
    data?: InputMaybe<Scalars["jsonb"]["input"]>;
    event_index?: InputMaybe<Scalars["bigint"]["input"]>;
    indexed_type?: InputMaybe<Scalars["String"]["input"]>;
    sequence_number?: InputMaybe<Scalars["bigint"]["input"]>;
    transaction_block_height?: InputMaybe<Scalars["bigint"]["input"]>;
    transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    type?: InputMaybe<Scalars["String"]["input"]>;
};
export type FungibleAssetActivities = {
    amount?: Maybe<Scalars["numeric"]["output"]>;
    asset_type: Scalars["String"]["output"];
    block_height: Scalars["bigint"]["output"];
    entry_function_id_str?: Maybe<Scalars["String"]["output"]>;
    event_index: Scalars["bigint"]["output"];
    gas_fee_payer_address?: Maybe<Scalars["String"]["output"]>;
    is_frozen?: Maybe<Scalars["Boolean"]["output"]>;
    is_gas_fee: Scalars["Boolean"]["output"];
    is_transaction_success: Scalars["Boolean"]["output"];
    metadata?: Maybe<FungibleAssetMetadata>;
    owner_address: Scalars["String"]["output"];
    owner_aptos_names: Array<CurrentAptosNames>;
    owner_aptos_names_aggregate: CurrentAptosNamesAggregate;
    storage_id: Scalars["String"]["output"];
    storage_refund_amount: Scalars["numeric"]["output"];
    token_standard: Scalars["String"]["output"];
    transaction_timestamp: Scalars["timestamp"]["output"];
    transaction_version: Scalars["bigint"]["output"];
    type: Scalars["String"]["output"];
};
export type FungibleAssetActivitiesOwnerAptosNamesArgs = {
    distinct_on?: InputMaybe<Array<CurrentAptosNamesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentAptosNamesOrderBy>>;
    where?: InputMaybe<CurrentAptosNamesBoolExp>;
};
export type FungibleAssetActivitiesOwnerAptosNamesAggregateArgs = {
    distinct_on?: InputMaybe<Array<CurrentAptosNamesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentAptosNamesOrderBy>>;
    where?: InputMaybe<CurrentAptosNamesBoolExp>;
};
export type FungibleAssetActivitiesAggregateOrderBy = {
    avg?: InputMaybe<FungibleAssetActivitiesAvgOrderBy>;
    count?: InputMaybe<OrderBy>;
    max?: InputMaybe<FungibleAssetActivitiesMaxOrderBy>;
    min?: InputMaybe<FungibleAssetActivitiesMinOrderBy>;
    stddev?: InputMaybe<FungibleAssetActivitiesStddevOrderBy>;
    stddev_pop?: InputMaybe<FungibleAssetActivitiesStddevPopOrderBy>;
    stddev_samp?: InputMaybe<FungibleAssetActivitiesStddevSampOrderBy>;
    sum?: InputMaybe<FungibleAssetActivitiesSumOrderBy>;
    var_pop?: InputMaybe<FungibleAssetActivitiesVarPopOrderBy>;
    var_samp?: InputMaybe<FungibleAssetActivitiesVarSampOrderBy>;
    variance?: InputMaybe<FungibleAssetActivitiesVarianceOrderBy>;
};
export type FungibleAssetActivitiesAvgOrderBy = {
    amount?: InputMaybe<OrderBy>;
    block_height?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    storage_refund_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type FungibleAssetActivitiesBoolExp = {
    _and?: InputMaybe<Array<FungibleAssetActivitiesBoolExp>>;
    _not?: InputMaybe<FungibleAssetActivitiesBoolExp>;
    _or?: InputMaybe<Array<FungibleAssetActivitiesBoolExp>>;
    amount?: InputMaybe<NumericComparisonExp>;
    asset_type?: InputMaybe<StringComparisonExp>;
    block_height?: InputMaybe<BigintComparisonExp>;
    entry_function_id_str?: InputMaybe<StringComparisonExp>;
    event_index?: InputMaybe<BigintComparisonExp>;
    gas_fee_payer_address?: InputMaybe<StringComparisonExp>;
    is_frozen?: InputMaybe<BooleanComparisonExp>;
    is_gas_fee?: InputMaybe<BooleanComparisonExp>;
    is_transaction_success?: InputMaybe<BooleanComparisonExp>;
    metadata?: InputMaybe<FungibleAssetMetadataBoolExp>;
    owner_address?: InputMaybe<StringComparisonExp>;
    owner_aptos_names?: InputMaybe<CurrentAptosNamesBoolExp>;
    storage_id?: InputMaybe<StringComparisonExp>;
    storage_refund_amount?: InputMaybe<NumericComparisonExp>;
    token_standard?: InputMaybe<StringComparisonExp>;
    transaction_timestamp?: InputMaybe<TimestampComparisonExp>;
    transaction_version?: InputMaybe<BigintComparisonExp>;
    type?: InputMaybe<StringComparisonExp>;
};
export type FungibleAssetActivitiesMaxOrderBy = {
    amount?: InputMaybe<OrderBy>;
    asset_type?: InputMaybe<OrderBy>;
    block_height?: InputMaybe<OrderBy>;
    entry_function_id_str?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    gas_fee_payer_address?: InputMaybe<OrderBy>;
    owner_address?: InputMaybe<OrderBy>;
    storage_id?: InputMaybe<OrderBy>;
    storage_refund_amount?: InputMaybe<OrderBy>;
    token_standard?: InputMaybe<OrderBy>;
    transaction_timestamp?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
    type?: InputMaybe<OrderBy>;
};
export type FungibleAssetActivitiesMinOrderBy = {
    amount?: InputMaybe<OrderBy>;
    asset_type?: InputMaybe<OrderBy>;
    block_height?: InputMaybe<OrderBy>;
    entry_function_id_str?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    gas_fee_payer_address?: InputMaybe<OrderBy>;
    owner_address?: InputMaybe<OrderBy>;
    storage_id?: InputMaybe<OrderBy>;
    storage_refund_amount?: InputMaybe<OrderBy>;
    token_standard?: InputMaybe<OrderBy>;
    transaction_timestamp?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
    type?: InputMaybe<OrderBy>;
};
export type FungibleAssetActivitiesOrderBy = {
    amount?: InputMaybe<OrderBy>;
    asset_type?: InputMaybe<OrderBy>;
    block_height?: InputMaybe<OrderBy>;
    entry_function_id_str?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    gas_fee_payer_address?: InputMaybe<OrderBy>;
    is_frozen?: InputMaybe<OrderBy>;
    is_gas_fee?: InputMaybe<OrderBy>;
    is_transaction_success?: InputMaybe<OrderBy>;
    metadata?: InputMaybe<FungibleAssetMetadataOrderBy>;
    owner_address?: InputMaybe<OrderBy>;
    owner_aptos_names_aggregate?: InputMaybe<CurrentAptosNamesAggregateOrderBy>;
    storage_id?: InputMaybe<OrderBy>;
    storage_refund_amount?: InputMaybe<OrderBy>;
    token_standard?: InputMaybe<OrderBy>;
    transaction_timestamp?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
    type?: InputMaybe<OrderBy>;
};
export declare enum FungibleAssetActivitiesSelectColumn {
    Amount = "amount",
    AssetType = "asset_type",
    BlockHeight = "block_height",
    EntryFunctionIdStr = "entry_function_id_str",
    EventIndex = "event_index",
    GasFeePayerAddress = "gas_fee_payer_address",
    IsFrozen = "is_frozen",
    IsGasFee = "is_gas_fee",
    IsTransactionSuccess = "is_transaction_success",
    OwnerAddress = "owner_address",
    StorageId = "storage_id",
    StorageRefundAmount = "storage_refund_amount",
    TokenStandard = "token_standard",
    TransactionTimestamp = "transaction_timestamp",
    TransactionVersion = "transaction_version",
    Type = "type"
}
export type FungibleAssetActivitiesStddevOrderBy = {
    amount?: InputMaybe<OrderBy>;
    block_height?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    storage_refund_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type FungibleAssetActivitiesStddevPopOrderBy = {
    amount?: InputMaybe<OrderBy>;
    block_height?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    storage_refund_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type FungibleAssetActivitiesStddevSampOrderBy = {
    amount?: InputMaybe<OrderBy>;
    block_height?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    storage_refund_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type FungibleAssetActivitiesStreamCursorInput = {
    initial_value: FungibleAssetActivitiesStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type FungibleAssetActivitiesStreamCursorValueInput = {
    amount?: InputMaybe<Scalars["numeric"]["input"]>;
    asset_type?: InputMaybe<Scalars["String"]["input"]>;
    block_height?: InputMaybe<Scalars["bigint"]["input"]>;
    entry_function_id_str?: InputMaybe<Scalars["String"]["input"]>;
    event_index?: InputMaybe<Scalars["bigint"]["input"]>;
    gas_fee_payer_address?: InputMaybe<Scalars["String"]["input"]>;
    is_frozen?: InputMaybe<Scalars["Boolean"]["input"]>;
    is_gas_fee?: InputMaybe<Scalars["Boolean"]["input"]>;
    is_transaction_success?: InputMaybe<Scalars["Boolean"]["input"]>;
    owner_address?: InputMaybe<Scalars["String"]["input"]>;
    storage_id?: InputMaybe<Scalars["String"]["input"]>;
    storage_refund_amount?: InputMaybe<Scalars["numeric"]["input"]>;
    token_standard?: InputMaybe<Scalars["String"]["input"]>;
    transaction_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    type?: InputMaybe<Scalars["String"]["input"]>;
};
export type FungibleAssetActivitiesSumOrderBy = {
    amount?: InputMaybe<OrderBy>;
    block_height?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    storage_refund_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type FungibleAssetActivitiesVarPopOrderBy = {
    amount?: InputMaybe<OrderBy>;
    block_height?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    storage_refund_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type FungibleAssetActivitiesVarSampOrderBy = {
    amount?: InputMaybe<OrderBy>;
    block_height?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    storage_refund_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type FungibleAssetActivitiesVarianceOrderBy = {
    amount?: InputMaybe<OrderBy>;
    block_height?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    storage_refund_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type FungibleAssetMetadata = {
    asset_type: Scalars["String"]["output"];
    creator_address: Scalars["String"]["output"];
    decimals: Scalars["Int"]["output"];
    icon_uri?: Maybe<Scalars["String"]["output"]>;
    last_transaction_timestamp: Scalars["timestamp"]["output"];
    last_transaction_version: Scalars["bigint"]["output"];
    name: Scalars["String"]["output"];
    project_uri?: Maybe<Scalars["String"]["output"]>;
    supply_aggregator_table_handle_v1?: Maybe<Scalars["String"]["output"]>;
    supply_aggregator_table_key_v1?: Maybe<Scalars["String"]["output"]>;
    symbol: Scalars["String"]["output"];
    token_standard: Scalars["String"]["output"];
};
export type FungibleAssetMetadataBoolExp = {
    _and?: InputMaybe<Array<FungibleAssetMetadataBoolExp>>;
    _not?: InputMaybe<FungibleAssetMetadataBoolExp>;
    _or?: InputMaybe<Array<FungibleAssetMetadataBoolExp>>;
    asset_type?: InputMaybe<StringComparisonExp>;
    creator_address?: InputMaybe<StringComparisonExp>;
    decimals?: InputMaybe<IntComparisonExp>;
    icon_uri?: InputMaybe<StringComparisonExp>;
    last_transaction_timestamp?: InputMaybe<TimestampComparisonExp>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    name?: InputMaybe<StringComparisonExp>;
    project_uri?: InputMaybe<StringComparisonExp>;
    supply_aggregator_table_handle_v1?: InputMaybe<StringComparisonExp>;
    supply_aggregator_table_key_v1?: InputMaybe<StringComparisonExp>;
    symbol?: InputMaybe<StringComparisonExp>;
    token_standard?: InputMaybe<StringComparisonExp>;
};
export type FungibleAssetMetadataOrderBy = {
    asset_type?: InputMaybe<OrderBy>;
    creator_address?: InputMaybe<OrderBy>;
    decimals?: InputMaybe<OrderBy>;
    icon_uri?: InputMaybe<OrderBy>;
    last_transaction_timestamp?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    name?: InputMaybe<OrderBy>;
    project_uri?: InputMaybe<OrderBy>;
    supply_aggregator_table_handle_v1?: InputMaybe<OrderBy>;
    supply_aggregator_table_key_v1?: InputMaybe<OrderBy>;
    symbol?: InputMaybe<OrderBy>;
    token_standard?: InputMaybe<OrderBy>;
};
export declare enum FungibleAssetMetadataSelectColumn {
    AssetType = "asset_type",
    CreatorAddress = "creator_address",
    Decimals = "decimals",
    IconUri = "icon_uri",
    LastTransactionTimestamp = "last_transaction_timestamp",
    LastTransactionVersion = "last_transaction_version",
    Name = "name",
    ProjectUri = "project_uri",
    SupplyAggregatorTableHandleV1 = "supply_aggregator_table_handle_v1",
    SupplyAggregatorTableKeyV1 = "supply_aggregator_table_key_v1",
    Symbol = "symbol",
    TokenStandard = "token_standard"
}
export type FungibleAssetMetadataStreamCursorInput = {
    initial_value: FungibleAssetMetadataStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type FungibleAssetMetadataStreamCursorValueInput = {
    asset_type?: InputMaybe<Scalars["String"]["input"]>;
    creator_address?: InputMaybe<Scalars["String"]["input"]>;
    decimals?: InputMaybe<Scalars["Int"]["input"]>;
    icon_uri?: InputMaybe<Scalars["String"]["input"]>;
    last_transaction_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    name?: InputMaybe<Scalars["String"]["input"]>;
    project_uri?: InputMaybe<Scalars["String"]["input"]>;
    supply_aggregator_table_handle_v1?: InputMaybe<Scalars["String"]["input"]>;
    supply_aggregator_table_key_v1?: InputMaybe<Scalars["String"]["input"]>;
    symbol?: InputMaybe<Scalars["String"]["input"]>;
    token_standard?: InputMaybe<Scalars["String"]["input"]>;
};
export type IndexerStatus = {
    db: Scalars["String"]["output"];
    is_indexer_up: Scalars["Boolean"]["output"];
};
export type IndexerStatusBoolExp = {
    _and?: InputMaybe<Array<IndexerStatusBoolExp>>;
    _not?: InputMaybe<IndexerStatusBoolExp>;
    _or?: InputMaybe<Array<IndexerStatusBoolExp>>;
    db?: InputMaybe<StringComparisonExp>;
    is_indexer_up?: InputMaybe<BooleanComparisonExp>;
};
export type IndexerStatusOrderBy = {
    db?: InputMaybe<OrderBy>;
    is_indexer_up?: InputMaybe<OrderBy>;
};
export declare enum IndexerStatusSelectColumn {
    Db = "db",
    IsIndexerUp = "is_indexer_up"
}
export type IndexerStatusStreamCursorInput = {
    initial_value: IndexerStatusStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type IndexerStatusStreamCursorValueInput = {
    db?: InputMaybe<Scalars["String"]["input"]>;
    is_indexer_up?: InputMaybe<Scalars["Boolean"]["input"]>;
};
export type JsonbCastExp = {
    String?: InputMaybe<StringComparisonExp>;
};
export type JsonbComparisonExp = {
    _cast?: InputMaybe<JsonbCastExp>;
    _contained_in?: InputMaybe<Scalars["jsonb"]["input"]>;
    _contains?: InputMaybe<Scalars["jsonb"]["input"]>;
    _eq?: InputMaybe<Scalars["jsonb"]["input"]>;
    _gt?: InputMaybe<Scalars["jsonb"]["input"]>;
    _gte?: InputMaybe<Scalars["jsonb"]["input"]>;
    _has_key?: InputMaybe<Scalars["String"]["input"]>;
    _has_keys_all?: InputMaybe<Array<Scalars["String"]["input"]>>;
    _has_keys_any?: InputMaybe<Array<Scalars["String"]["input"]>>;
    _in?: InputMaybe<Array<Scalars["jsonb"]["input"]>>;
    _is_null?: InputMaybe<Scalars["Boolean"]["input"]>;
    _lt?: InputMaybe<Scalars["jsonb"]["input"]>;
    _lte?: InputMaybe<Scalars["jsonb"]["input"]>;
    _neq?: InputMaybe<Scalars["jsonb"]["input"]>;
    _nin?: InputMaybe<Array<Scalars["jsonb"]["input"]>>;
};
export type LedgerInfos = {
    chain_id: Scalars["bigint"]["output"];
};
export type LedgerInfosBoolExp = {
    _and?: InputMaybe<Array<LedgerInfosBoolExp>>;
    _not?: InputMaybe<LedgerInfosBoolExp>;
    _or?: InputMaybe<Array<LedgerInfosBoolExp>>;
    chain_id?: InputMaybe<BigintComparisonExp>;
};
export type LedgerInfosOrderBy = {
    chain_id?: InputMaybe<OrderBy>;
};
export declare enum LedgerInfosSelectColumn {
    ChainId = "chain_id"
}
export type LedgerInfosStreamCursorInput = {
    initial_value: LedgerInfosStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type LedgerInfosStreamCursorValueInput = {
    chain_id?: InputMaybe<Scalars["bigint"]["input"]>;
};
export type MoveResources = {
    address: Scalars["String"]["output"];
    transaction_version: Scalars["bigint"]["output"];
};
export type MoveResourcesAggregate = {
    aggregate?: Maybe<MoveResourcesAggregateFields>;
    nodes: Array<MoveResources>;
};
export type MoveResourcesAggregateFields = {
    avg?: Maybe<MoveResourcesAvgFields>;
    count: Scalars["Int"]["output"];
    max?: Maybe<MoveResourcesMaxFields>;
    min?: Maybe<MoveResourcesMinFields>;
    stddev?: Maybe<MoveResourcesStddevFields>;
    stddev_pop?: Maybe<MoveResourcesStddevPopFields>;
    stddev_samp?: Maybe<MoveResourcesStddevSampFields>;
    sum?: Maybe<MoveResourcesSumFields>;
    var_pop?: Maybe<MoveResourcesVarPopFields>;
    var_samp?: Maybe<MoveResourcesVarSampFields>;
    variance?: Maybe<MoveResourcesVarianceFields>;
};
export type MoveResourcesAggregateFieldsCountArgs = {
    columns?: InputMaybe<Array<MoveResourcesSelectColumn>>;
    distinct?: InputMaybe<Scalars["Boolean"]["input"]>;
};
export type MoveResourcesAvgFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type MoveResourcesBoolExp = {
    _and?: InputMaybe<Array<MoveResourcesBoolExp>>;
    _not?: InputMaybe<MoveResourcesBoolExp>;
    _or?: InputMaybe<Array<MoveResourcesBoolExp>>;
    address?: InputMaybe<StringComparisonExp>;
    transaction_version?: InputMaybe<BigintComparisonExp>;
};
export type MoveResourcesMaxFields = {
    address?: Maybe<Scalars["String"]["output"]>;
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
};
export type MoveResourcesMinFields = {
    address?: Maybe<Scalars["String"]["output"]>;
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
};
export type MoveResourcesOrderBy = {
    address?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export declare enum MoveResourcesSelectColumn {
    Address = "address",
    TransactionVersion = "transaction_version"
}
export type MoveResourcesStddevFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type MoveResourcesStddevPopFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type MoveResourcesStddevSampFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type MoveResourcesStreamCursorInput = {
    initial_value: MoveResourcesStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type MoveResourcesStreamCursorValueInput = {
    address?: InputMaybe<Scalars["String"]["input"]>;
    transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
};
export type MoveResourcesSumFields = {
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
};
export type MoveResourcesVarPopFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type MoveResourcesVarSampFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type MoveResourcesVarianceFields = {
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type NftMarketplaceV2CurrentNftMarketplaceAuctions = {
    buy_it_now_price?: Maybe<Scalars["numeric"]["output"]>;
    coin_type?: Maybe<Scalars["String"]["output"]>;
    collection_id: Scalars["String"]["output"];
    contract_address: Scalars["String"]["output"];
    current_bid_price?: Maybe<Scalars["numeric"]["output"]>;
    current_bidder?: Maybe<Scalars["String"]["output"]>;
    current_token_data?: Maybe<CurrentTokenDatasV2>;
    entry_function_id_str: Scalars["String"]["output"];
    expiration_time: Scalars["numeric"]["output"];
    fee_schedule_id: Scalars["String"]["output"];
    is_deleted: Scalars["Boolean"]["output"];
    last_transaction_timestamp: Scalars["timestamptz"]["output"];
    last_transaction_version: Scalars["bigint"]["output"];
    listing_id: Scalars["String"]["output"];
    marketplace: Scalars["String"]["output"];
    seller: Scalars["String"]["output"];
    starting_bid_price: Scalars["numeric"]["output"];
    token_amount: Scalars["numeric"]["output"];
    token_data_id: Scalars["String"]["output"];
    token_standard: Scalars["String"]["output"];
};
export type NftMarketplaceV2CurrentNftMarketplaceAuctionsBoolExp = {
    _and?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceAuctionsBoolExp>>;
    _not?: InputMaybe<NftMarketplaceV2CurrentNftMarketplaceAuctionsBoolExp>;
    _or?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceAuctionsBoolExp>>;
    buy_it_now_price?: InputMaybe<NumericComparisonExp>;
    coin_type?: InputMaybe<StringComparisonExp>;
    collection_id?: InputMaybe<StringComparisonExp>;
    contract_address?: InputMaybe<StringComparisonExp>;
    current_bid_price?: InputMaybe<NumericComparisonExp>;
    current_bidder?: InputMaybe<StringComparisonExp>;
    current_token_data?: InputMaybe<CurrentTokenDatasV2BoolExp>;
    entry_function_id_str?: InputMaybe<StringComparisonExp>;
    expiration_time?: InputMaybe<NumericComparisonExp>;
    fee_schedule_id?: InputMaybe<StringComparisonExp>;
    is_deleted?: InputMaybe<BooleanComparisonExp>;
    last_transaction_timestamp?: InputMaybe<TimestamptzComparisonExp>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    listing_id?: InputMaybe<StringComparisonExp>;
    marketplace?: InputMaybe<StringComparisonExp>;
    seller?: InputMaybe<StringComparisonExp>;
    starting_bid_price?: InputMaybe<NumericComparisonExp>;
    token_amount?: InputMaybe<NumericComparisonExp>;
    token_data_id?: InputMaybe<StringComparisonExp>;
    token_standard?: InputMaybe<StringComparisonExp>;
};
export type NftMarketplaceV2CurrentNftMarketplaceAuctionsOrderBy = {
    buy_it_now_price?: InputMaybe<OrderBy>;
    coin_type?: InputMaybe<OrderBy>;
    collection_id?: InputMaybe<OrderBy>;
    contract_address?: InputMaybe<OrderBy>;
    current_bid_price?: InputMaybe<OrderBy>;
    current_bidder?: InputMaybe<OrderBy>;
    current_token_data?: InputMaybe<CurrentTokenDatasV2OrderBy>;
    entry_function_id_str?: InputMaybe<OrderBy>;
    expiration_time?: InputMaybe<OrderBy>;
    fee_schedule_id?: InputMaybe<OrderBy>;
    is_deleted?: InputMaybe<OrderBy>;
    last_transaction_timestamp?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    listing_id?: InputMaybe<OrderBy>;
    marketplace?: InputMaybe<OrderBy>;
    seller?: InputMaybe<OrderBy>;
    starting_bid_price?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    token_data_id?: InputMaybe<OrderBy>;
    token_standard?: InputMaybe<OrderBy>;
};
export declare enum NftMarketplaceV2CurrentNftMarketplaceAuctionsSelectColumn {
    BuyItNowPrice = "buy_it_now_price",
    CoinType = "coin_type",
    CollectionId = "collection_id",
    ContractAddress = "contract_address",
    CurrentBidPrice = "current_bid_price",
    CurrentBidder = "current_bidder",
    EntryFunctionIdStr = "entry_function_id_str",
    ExpirationTime = "expiration_time",
    FeeScheduleId = "fee_schedule_id",
    IsDeleted = "is_deleted",
    LastTransactionTimestamp = "last_transaction_timestamp",
    LastTransactionVersion = "last_transaction_version",
    ListingId = "listing_id",
    Marketplace = "marketplace",
    Seller = "seller",
    StartingBidPrice = "starting_bid_price",
    TokenAmount = "token_amount",
    TokenDataId = "token_data_id",
    TokenStandard = "token_standard"
}
export type NftMarketplaceV2CurrentNftMarketplaceAuctionsStreamCursorInput = {
    initial_value: NftMarketplaceV2CurrentNftMarketplaceAuctionsStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type NftMarketplaceV2CurrentNftMarketplaceAuctionsStreamCursorValueInput = {
    buy_it_now_price?: InputMaybe<Scalars["numeric"]["input"]>;
    coin_type?: InputMaybe<Scalars["String"]["input"]>;
    collection_id?: InputMaybe<Scalars["String"]["input"]>;
    contract_address?: InputMaybe<Scalars["String"]["input"]>;
    current_bid_price?: InputMaybe<Scalars["numeric"]["input"]>;
    current_bidder?: InputMaybe<Scalars["String"]["input"]>;
    entry_function_id_str?: InputMaybe<Scalars["String"]["input"]>;
    expiration_time?: InputMaybe<Scalars["numeric"]["input"]>;
    fee_schedule_id?: InputMaybe<Scalars["String"]["input"]>;
    is_deleted?: InputMaybe<Scalars["Boolean"]["input"]>;
    last_transaction_timestamp?: InputMaybe<Scalars["timestamptz"]["input"]>;
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    listing_id?: InputMaybe<Scalars["String"]["input"]>;
    marketplace?: InputMaybe<Scalars["String"]["input"]>;
    seller?: InputMaybe<Scalars["String"]["input"]>;
    starting_bid_price?: InputMaybe<Scalars["numeric"]["input"]>;
    token_amount?: InputMaybe<Scalars["numeric"]["input"]>;
    token_data_id?: InputMaybe<Scalars["String"]["input"]>;
    token_standard?: InputMaybe<Scalars["String"]["input"]>;
};
export type NftMarketplaceV2CurrentNftMarketplaceCollectionOffers = {
    buyer: Scalars["String"]["output"];
    coin_type?: Maybe<Scalars["String"]["output"]>;
    collection_id: Scalars["String"]["output"];
    collection_offer_id: Scalars["String"]["output"];
    contract_address: Scalars["String"]["output"];
    current_collection_v2?: Maybe<CurrentCollectionsV2>;
    entry_function_id_str: Scalars["String"]["output"];
    expiration_time: Scalars["numeric"]["output"];
    fee_schedule_id: Scalars["String"]["output"];
    is_deleted: Scalars["Boolean"]["output"];
    item_price: Scalars["numeric"]["output"];
    last_transaction_timestamp: Scalars["timestamptz"]["output"];
    last_transaction_version: Scalars["bigint"]["output"];
    marketplace: Scalars["String"]["output"];
    remaining_token_amount: Scalars["numeric"]["output"];
    token_standard: Scalars["String"]["output"];
};
export type NftMarketplaceV2CurrentNftMarketplaceCollectionOffersBoolExp = {
    _and?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceCollectionOffersBoolExp>>;
    _not?: InputMaybe<NftMarketplaceV2CurrentNftMarketplaceCollectionOffersBoolExp>;
    _or?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceCollectionOffersBoolExp>>;
    buyer?: InputMaybe<StringComparisonExp>;
    coin_type?: InputMaybe<StringComparisonExp>;
    collection_id?: InputMaybe<StringComparisonExp>;
    collection_offer_id?: InputMaybe<StringComparisonExp>;
    contract_address?: InputMaybe<StringComparisonExp>;
    current_collection_v2?: InputMaybe<CurrentCollectionsV2BoolExp>;
    entry_function_id_str?: InputMaybe<StringComparisonExp>;
    expiration_time?: InputMaybe<NumericComparisonExp>;
    fee_schedule_id?: InputMaybe<StringComparisonExp>;
    is_deleted?: InputMaybe<BooleanComparisonExp>;
    item_price?: InputMaybe<NumericComparisonExp>;
    last_transaction_timestamp?: InputMaybe<TimestamptzComparisonExp>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    marketplace?: InputMaybe<StringComparisonExp>;
    remaining_token_amount?: InputMaybe<NumericComparisonExp>;
    token_standard?: InputMaybe<StringComparisonExp>;
};
export type NftMarketplaceV2CurrentNftMarketplaceCollectionOffersOrderBy = {
    buyer?: InputMaybe<OrderBy>;
    coin_type?: InputMaybe<OrderBy>;
    collection_id?: InputMaybe<OrderBy>;
    collection_offer_id?: InputMaybe<OrderBy>;
    contract_address?: InputMaybe<OrderBy>;
    current_collection_v2?: InputMaybe<CurrentCollectionsV2OrderBy>;
    entry_function_id_str?: InputMaybe<OrderBy>;
    expiration_time?: InputMaybe<OrderBy>;
    fee_schedule_id?: InputMaybe<OrderBy>;
    is_deleted?: InputMaybe<OrderBy>;
    item_price?: InputMaybe<OrderBy>;
    last_transaction_timestamp?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    marketplace?: InputMaybe<OrderBy>;
    remaining_token_amount?: InputMaybe<OrderBy>;
    token_standard?: InputMaybe<OrderBy>;
};
export declare enum NftMarketplaceV2CurrentNftMarketplaceCollectionOffersSelectColumn {
    Buyer = "buyer",
    CoinType = "coin_type",
    CollectionId = "collection_id",
    CollectionOfferId = "collection_offer_id",
    ContractAddress = "contract_address",
    EntryFunctionIdStr = "entry_function_id_str",
    ExpirationTime = "expiration_time",
    FeeScheduleId = "fee_schedule_id",
    IsDeleted = "is_deleted",
    ItemPrice = "item_price",
    LastTransactionTimestamp = "last_transaction_timestamp",
    LastTransactionVersion = "last_transaction_version",
    Marketplace = "marketplace",
    RemainingTokenAmount = "remaining_token_amount",
    TokenStandard = "token_standard"
}
export type NftMarketplaceV2CurrentNftMarketplaceCollectionOffersStreamCursorInput = {
    initial_value: NftMarketplaceV2CurrentNftMarketplaceCollectionOffersStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type NftMarketplaceV2CurrentNftMarketplaceCollectionOffersStreamCursorValueInput = {
    buyer?: InputMaybe<Scalars["String"]["input"]>;
    coin_type?: InputMaybe<Scalars["String"]["input"]>;
    collection_id?: InputMaybe<Scalars["String"]["input"]>;
    collection_offer_id?: InputMaybe<Scalars["String"]["input"]>;
    contract_address?: InputMaybe<Scalars["String"]["input"]>;
    entry_function_id_str?: InputMaybe<Scalars["String"]["input"]>;
    expiration_time?: InputMaybe<Scalars["numeric"]["input"]>;
    fee_schedule_id?: InputMaybe<Scalars["String"]["input"]>;
    is_deleted?: InputMaybe<Scalars["Boolean"]["input"]>;
    item_price?: InputMaybe<Scalars["numeric"]["input"]>;
    last_transaction_timestamp?: InputMaybe<Scalars["timestamptz"]["input"]>;
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    marketplace?: InputMaybe<Scalars["String"]["input"]>;
    remaining_token_amount?: InputMaybe<Scalars["numeric"]["input"]>;
    token_standard?: InputMaybe<Scalars["String"]["input"]>;
};
export type NftMarketplaceV2CurrentNftMarketplaceListings = {
    coin_type?: Maybe<Scalars["String"]["output"]>;
    collection_id: Scalars["String"]["output"];
    contract_address: Scalars["String"]["output"];
    current_token_data?: Maybe<CurrentTokenDatasV2>;
    entry_function_id_str: Scalars["String"]["output"];
    fee_schedule_id: Scalars["String"]["output"];
    is_deleted: Scalars["Boolean"]["output"];
    last_transaction_timestamp: Scalars["timestamptz"]["output"];
    last_transaction_version: Scalars["bigint"]["output"];
    listing_id: Scalars["String"]["output"];
    marketplace: Scalars["String"]["output"];
    price: Scalars["numeric"]["output"];
    seller: Scalars["String"]["output"];
    token_amount: Scalars["numeric"]["output"];
    token_data_id: Scalars["String"]["output"];
    token_standard: Scalars["String"]["output"];
};
export type NftMarketplaceV2CurrentNftMarketplaceListingsBoolExp = {
    _and?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceListingsBoolExp>>;
    _not?: InputMaybe<NftMarketplaceV2CurrentNftMarketplaceListingsBoolExp>;
    _or?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceListingsBoolExp>>;
    coin_type?: InputMaybe<StringComparisonExp>;
    collection_id?: InputMaybe<StringComparisonExp>;
    contract_address?: InputMaybe<StringComparisonExp>;
    current_token_data?: InputMaybe<CurrentTokenDatasV2BoolExp>;
    entry_function_id_str?: InputMaybe<StringComparisonExp>;
    fee_schedule_id?: InputMaybe<StringComparisonExp>;
    is_deleted?: InputMaybe<BooleanComparisonExp>;
    last_transaction_timestamp?: InputMaybe<TimestamptzComparisonExp>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    listing_id?: InputMaybe<StringComparisonExp>;
    marketplace?: InputMaybe<StringComparisonExp>;
    price?: InputMaybe<NumericComparisonExp>;
    seller?: InputMaybe<StringComparisonExp>;
    token_amount?: InputMaybe<NumericComparisonExp>;
    token_data_id?: InputMaybe<StringComparisonExp>;
    token_standard?: InputMaybe<StringComparisonExp>;
};
export type NftMarketplaceV2CurrentNftMarketplaceListingsOrderBy = {
    coin_type?: InputMaybe<OrderBy>;
    collection_id?: InputMaybe<OrderBy>;
    contract_address?: InputMaybe<OrderBy>;
    current_token_data?: InputMaybe<CurrentTokenDatasV2OrderBy>;
    entry_function_id_str?: InputMaybe<OrderBy>;
    fee_schedule_id?: InputMaybe<OrderBy>;
    is_deleted?: InputMaybe<OrderBy>;
    last_transaction_timestamp?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    listing_id?: InputMaybe<OrderBy>;
    marketplace?: InputMaybe<OrderBy>;
    price?: InputMaybe<OrderBy>;
    seller?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    token_data_id?: InputMaybe<OrderBy>;
    token_standard?: InputMaybe<OrderBy>;
};
export declare enum NftMarketplaceV2CurrentNftMarketplaceListingsSelectColumn {
    CoinType = "coin_type",
    CollectionId = "collection_id",
    ContractAddress = "contract_address",
    EntryFunctionIdStr = "entry_function_id_str",
    FeeScheduleId = "fee_schedule_id",
    IsDeleted = "is_deleted",
    LastTransactionTimestamp = "last_transaction_timestamp",
    LastTransactionVersion = "last_transaction_version",
    ListingId = "listing_id",
    Marketplace = "marketplace",
    Price = "price",
    Seller = "seller",
    TokenAmount = "token_amount",
    TokenDataId = "token_data_id",
    TokenStandard = "token_standard"
}
export type NftMarketplaceV2CurrentNftMarketplaceListingsStreamCursorInput = {
    initial_value: NftMarketplaceV2CurrentNftMarketplaceListingsStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type NftMarketplaceV2CurrentNftMarketplaceListingsStreamCursorValueInput = {
    coin_type?: InputMaybe<Scalars["String"]["input"]>;
    collection_id?: InputMaybe<Scalars["String"]["input"]>;
    contract_address?: InputMaybe<Scalars["String"]["input"]>;
    entry_function_id_str?: InputMaybe<Scalars["String"]["input"]>;
    fee_schedule_id?: InputMaybe<Scalars["String"]["input"]>;
    is_deleted?: InputMaybe<Scalars["Boolean"]["input"]>;
    last_transaction_timestamp?: InputMaybe<Scalars["timestamptz"]["input"]>;
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    listing_id?: InputMaybe<Scalars["String"]["input"]>;
    marketplace?: InputMaybe<Scalars["String"]["input"]>;
    price?: InputMaybe<Scalars["numeric"]["input"]>;
    seller?: InputMaybe<Scalars["String"]["input"]>;
    token_amount?: InputMaybe<Scalars["numeric"]["input"]>;
    token_data_id?: InputMaybe<Scalars["String"]["input"]>;
    token_standard?: InputMaybe<Scalars["String"]["input"]>;
};
export type NftMarketplaceV2CurrentNftMarketplaceTokenOffers = {
    buyer: Scalars["String"]["output"];
    coin_type?: Maybe<Scalars["String"]["output"]>;
    collection_id: Scalars["String"]["output"];
    contract_address: Scalars["String"]["output"];
    current_token_data?: Maybe<CurrentTokenDatasV2>;
    entry_function_id_str: Scalars["String"]["output"];
    expiration_time: Scalars["numeric"]["output"];
    fee_schedule_id: Scalars["String"]["output"];
    is_deleted: Scalars["Boolean"]["output"];
    last_transaction_timestamp: Scalars["timestamptz"]["output"];
    last_transaction_version: Scalars["bigint"]["output"];
    marketplace: Scalars["String"]["output"];
    offer_id: Scalars["String"]["output"];
    price: Scalars["numeric"]["output"];
    token_amount: Scalars["numeric"]["output"];
    token_data_id: Scalars["String"]["output"];
    token_standard: Scalars["String"]["output"];
};
export type NftMarketplaceV2CurrentNftMarketplaceTokenOffersBoolExp = {
    _and?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceTokenOffersBoolExp>>;
    _not?: InputMaybe<NftMarketplaceV2CurrentNftMarketplaceTokenOffersBoolExp>;
    _or?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceTokenOffersBoolExp>>;
    buyer?: InputMaybe<StringComparisonExp>;
    coin_type?: InputMaybe<StringComparisonExp>;
    collection_id?: InputMaybe<StringComparisonExp>;
    contract_address?: InputMaybe<StringComparisonExp>;
    current_token_data?: InputMaybe<CurrentTokenDatasV2BoolExp>;
    entry_function_id_str?: InputMaybe<StringComparisonExp>;
    expiration_time?: InputMaybe<NumericComparisonExp>;
    fee_schedule_id?: InputMaybe<StringComparisonExp>;
    is_deleted?: InputMaybe<BooleanComparisonExp>;
    last_transaction_timestamp?: InputMaybe<TimestamptzComparisonExp>;
    last_transaction_version?: InputMaybe<BigintComparisonExp>;
    marketplace?: InputMaybe<StringComparisonExp>;
    offer_id?: InputMaybe<StringComparisonExp>;
    price?: InputMaybe<NumericComparisonExp>;
    token_amount?: InputMaybe<NumericComparisonExp>;
    token_data_id?: InputMaybe<StringComparisonExp>;
    token_standard?: InputMaybe<StringComparisonExp>;
};
export type NftMarketplaceV2CurrentNftMarketplaceTokenOffersOrderBy = {
    buyer?: InputMaybe<OrderBy>;
    coin_type?: InputMaybe<OrderBy>;
    collection_id?: InputMaybe<OrderBy>;
    contract_address?: InputMaybe<OrderBy>;
    current_token_data?: InputMaybe<CurrentTokenDatasV2OrderBy>;
    entry_function_id_str?: InputMaybe<OrderBy>;
    expiration_time?: InputMaybe<OrderBy>;
    fee_schedule_id?: InputMaybe<OrderBy>;
    is_deleted?: InputMaybe<OrderBy>;
    last_transaction_timestamp?: InputMaybe<OrderBy>;
    last_transaction_version?: InputMaybe<OrderBy>;
    marketplace?: InputMaybe<OrderBy>;
    offer_id?: InputMaybe<OrderBy>;
    price?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    token_data_id?: InputMaybe<OrderBy>;
    token_standard?: InputMaybe<OrderBy>;
};
export declare enum NftMarketplaceV2CurrentNftMarketplaceTokenOffersSelectColumn {
    Buyer = "buyer",
    CoinType = "coin_type",
    CollectionId = "collection_id",
    ContractAddress = "contract_address",
    EntryFunctionIdStr = "entry_function_id_str",
    ExpirationTime = "expiration_time",
    FeeScheduleId = "fee_schedule_id",
    IsDeleted = "is_deleted",
    LastTransactionTimestamp = "last_transaction_timestamp",
    LastTransactionVersion = "last_transaction_version",
    Marketplace = "marketplace",
    OfferId = "offer_id",
    Price = "price",
    TokenAmount = "token_amount",
    TokenDataId = "token_data_id",
    TokenStandard = "token_standard"
}
export type NftMarketplaceV2CurrentNftMarketplaceTokenOffersStreamCursorInput = {
    initial_value: NftMarketplaceV2CurrentNftMarketplaceTokenOffersStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type NftMarketplaceV2CurrentNftMarketplaceTokenOffersStreamCursorValueInput = {
    buyer?: InputMaybe<Scalars["String"]["input"]>;
    coin_type?: InputMaybe<Scalars["String"]["input"]>;
    collection_id?: InputMaybe<Scalars["String"]["input"]>;
    contract_address?: InputMaybe<Scalars["String"]["input"]>;
    entry_function_id_str?: InputMaybe<Scalars["String"]["input"]>;
    expiration_time?: InputMaybe<Scalars["numeric"]["input"]>;
    fee_schedule_id?: InputMaybe<Scalars["String"]["input"]>;
    is_deleted?: InputMaybe<Scalars["Boolean"]["input"]>;
    last_transaction_timestamp?: InputMaybe<Scalars["timestamptz"]["input"]>;
    last_transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    marketplace?: InputMaybe<Scalars["String"]["input"]>;
    offer_id?: InputMaybe<Scalars["String"]["input"]>;
    price?: InputMaybe<Scalars["numeric"]["input"]>;
    token_amount?: InputMaybe<Scalars["numeric"]["input"]>;
    token_data_id?: InputMaybe<Scalars["String"]["input"]>;
    token_standard?: InputMaybe<Scalars["String"]["input"]>;
};
export type NftMarketplaceV2NftMarketplaceActivities = {
    buyer?: Maybe<Scalars["String"]["output"]>;
    coin_type?: Maybe<Scalars["String"]["output"]>;
    collection_id: Scalars["String"]["output"];
    collection_name: Scalars["String"]["output"];
    contract_address: Scalars["String"]["output"];
    creator_address: Scalars["String"]["output"];
    current_token_data?: Maybe<CurrentTokenDatasV2>;
    entry_function_id_str: Scalars["String"]["output"];
    event_index: Scalars["bigint"]["output"];
    event_type: Scalars["String"]["output"];
    fee_schedule_id: Scalars["String"]["output"];
    marketplace: Scalars["String"]["output"];
    offer_or_listing_id: Scalars["String"]["output"];
    price: Scalars["numeric"]["output"];
    property_version?: Maybe<Scalars["String"]["output"]>;
    seller?: Maybe<Scalars["String"]["output"]>;
    token_amount: Scalars["numeric"]["output"];
    token_data_id?: Maybe<Scalars["String"]["output"]>;
    token_name?: Maybe<Scalars["String"]["output"]>;
    token_standard: Scalars["String"]["output"];
    transaction_timestamp: Scalars["timestamptz"]["output"];
    transaction_version: Scalars["bigint"]["output"];
};
export type NftMarketplaceV2NftMarketplaceActivitiesBoolExp = {
    _and?: InputMaybe<Array<NftMarketplaceV2NftMarketplaceActivitiesBoolExp>>;
    _not?: InputMaybe<NftMarketplaceV2NftMarketplaceActivitiesBoolExp>;
    _or?: InputMaybe<Array<NftMarketplaceV2NftMarketplaceActivitiesBoolExp>>;
    buyer?: InputMaybe<StringComparisonExp>;
    coin_type?: InputMaybe<StringComparisonExp>;
    collection_id?: InputMaybe<StringComparisonExp>;
    collection_name?: InputMaybe<StringComparisonExp>;
    contract_address?: InputMaybe<StringComparisonExp>;
    creator_address?: InputMaybe<StringComparisonExp>;
    current_token_data?: InputMaybe<CurrentTokenDatasV2BoolExp>;
    entry_function_id_str?: InputMaybe<StringComparisonExp>;
    event_index?: InputMaybe<BigintComparisonExp>;
    event_type?: InputMaybe<StringComparisonExp>;
    fee_schedule_id?: InputMaybe<StringComparisonExp>;
    marketplace?: InputMaybe<StringComparisonExp>;
    offer_or_listing_id?: InputMaybe<StringComparisonExp>;
    price?: InputMaybe<NumericComparisonExp>;
    property_version?: InputMaybe<StringComparisonExp>;
    seller?: InputMaybe<StringComparisonExp>;
    token_amount?: InputMaybe<NumericComparisonExp>;
    token_data_id?: InputMaybe<StringComparisonExp>;
    token_name?: InputMaybe<StringComparisonExp>;
    token_standard?: InputMaybe<StringComparisonExp>;
    transaction_timestamp?: InputMaybe<TimestamptzComparisonExp>;
    transaction_version?: InputMaybe<BigintComparisonExp>;
};
export type NftMarketplaceV2NftMarketplaceActivitiesOrderBy = {
    buyer?: InputMaybe<OrderBy>;
    coin_type?: InputMaybe<OrderBy>;
    collection_id?: InputMaybe<OrderBy>;
    collection_name?: InputMaybe<OrderBy>;
    contract_address?: InputMaybe<OrderBy>;
    creator_address?: InputMaybe<OrderBy>;
    current_token_data?: InputMaybe<CurrentTokenDatasV2OrderBy>;
    entry_function_id_str?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_type?: InputMaybe<OrderBy>;
    fee_schedule_id?: InputMaybe<OrderBy>;
    marketplace?: InputMaybe<OrderBy>;
    offer_or_listing_id?: InputMaybe<OrderBy>;
    price?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
    seller?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    token_data_id?: InputMaybe<OrderBy>;
    token_name?: InputMaybe<OrderBy>;
    token_standard?: InputMaybe<OrderBy>;
    transaction_timestamp?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export declare enum NftMarketplaceV2NftMarketplaceActivitiesSelectColumn {
    Buyer = "buyer",
    CoinType = "coin_type",
    CollectionId = "collection_id",
    CollectionName = "collection_name",
    ContractAddress = "contract_address",
    CreatorAddress = "creator_address",
    EntryFunctionIdStr = "entry_function_id_str",
    EventIndex = "event_index",
    EventType = "event_type",
    FeeScheduleId = "fee_schedule_id",
    Marketplace = "marketplace",
    OfferOrListingId = "offer_or_listing_id",
    Price = "price",
    PropertyVersion = "property_version",
    Seller = "seller",
    TokenAmount = "token_amount",
    TokenDataId = "token_data_id",
    TokenName = "token_name",
    TokenStandard = "token_standard",
    TransactionTimestamp = "transaction_timestamp",
    TransactionVersion = "transaction_version"
}
export type NftMarketplaceV2NftMarketplaceActivitiesStreamCursorInput = {
    initial_value: NftMarketplaceV2NftMarketplaceActivitiesStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type NftMarketplaceV2NftMarketplaceActivitiesStreamCursorValueInput = {
    buyer?: InputMaybe<Scalars["String"]["input"]>;
    coin_type?: InputMaybe<Scalars["String"]["input"]>;
    collection_id?: InputMaybe<Scalars["String"]["input"]>;
    collection_name?: InputMaybe<Scalars["String"]["input"]>;
    contract_address?: InputMaybe<Scalars["String"]["input"]>;
    creator_address?: InputMaybe<Scalars["String"]["input"]>;
    entry_function_id_str?: InputMaybe<Scalars["String"]["input"]>;
    event_index?: InputMaybe<Scalars["bigint"]["input"]>;
    event_type?: InputMaybe<Scalars["String"]["input"]>;
    fee_schedule_id?: InputMaybe<Scalars["String"]["input"]>;
    marketplace?: InputMaybe<Scalars["String"]["input"]>;
    offer_or_listing_id?: InputMaybe<Scalars["String"]["input"]>;
    price?: InputMaybe<Scalars["numeric"]["input"]>;
    property_version?: InputMaybe<Scalars["String"]["input"]>;
    seller?: InputMaybe<Scalars["String"]["input"]>;
    token_amount?: InputMaybe<Scalars["numeric"]["input"]>;
    token_data_id?: InputMaybe<Scalars["String"]["input"]>;
    token_name?: InputMaybe<Scalars["String"]["input"]>;
    token_standard?: InputMaybe<Scalars["String"]["input"]>;
    transaction_timestamp?: InputMaybe<Scalars["timestamptz"]["input"]>;
    transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
};
export type NftMetadataCrawlerParsedAssetUris = {
    animation_optimizer_retry_count: Scalars["Int"]["output"];
    asset_uri: Scalars["String"]["output"];
    cdn_animation_uri?: Maybe<Scalars["String"]["output"]>;
    cdn_image_uri?: Maybe<Scalars["String"]["output"]>;
    cdn_json_uri?: Maybe<Scalars["String"]["output"]>;
    image_optimizer_retry_count: Scalars["Int"]["output"];
    json_parser_retry_count: Scalars["Int"]["output"];
    raw_animation_uri?: Maybe<Scalars["String"]["output"]>;
    raw_image_uri?: Maybe<Scalars["String"]["output"]>;
};
export type NftMetadataCrawlerParsedAssetUrisBoolExp = {
    _and?: InputMaybe<Array<NftMetadataCrawlerParsedAssetUrisBoolExp>>;
    _not?: InputMaybe<NftMetadataCrawlerParsedAssetUrisBoolExp>;
    _or?: InputMaybe<Array<NftMetadataCrawlerParsedAssetUrisBoolExp>>;
    animation_optimizer_retry_count?: InputMaybe<IntComparisonExp>;
    asset_uri?: InputMaybe<StringComparisonExp>;
    cdn_animation_uri?: InputMaybe<StringComparisonExp>;
    cdn_image_uri?: InputMaybe<StringComparisonExp>;
    cdn_json_uri?: InputMaybe<StringComparisonExp>;
    image_optimizer_retry_count?: InputMaybe<IntComparisonExp>;
    json_parser_retry_count?: InputMaybe<IntComparisonExp>;
    raw_animation_uri?: InputMaybe<StringComparisonExp>;
    raw_image_uri?: InputMaybe<StringComparisonExp>;
};
export type NftMetadataCrawlerParsedAssetUrisOrderBy = {
    animation_optimizer_retry_count?: InputMaybe<OrderBy>;
    asset_uri?: InputMaybe<OrderBy>;
    cdn_animation_uri?: InputMaybe<OrderBy>;
    cdn_image_uri?: InputMaybe<OrderBy>;
    cdn_json_uri?: InputMaybe<OrderBy>;
    image_optimizer_retry_count?: InputMaybe<OrderBy>;
    json_parser_retry_count?: InputMaybe<OrderBy>;
    raw_animation_uri?: InputMaybe<OrderBy>;
    raw_image_uri?: InputMaybe<OrderBy>;
};
export declare enum NftMetadataCrawlerParsedAssetUrisSelectColumn {
    AnimationOptimizerRetryCount = "animation_optimizer_retry_count",
    AssetUri = "asset_uri",
    CdnAnimationUri = "cdn_animation_uri",
    CdnImageUri = "cdn_image_uri",
    CdnJsonUri = "cdn_json_uri",
    ImageOptimizerRetryCount = "image_optimizer_retry_count",
    JsonParserRetryCount = "json_parser_retry_count",
    RawAnimationUri = "raw_animation_uri",
    RawImageUri = "raw_image_uri"
}
export type NftMetadataCrawlerParsedAssetUrisStreamCursorInput = {
    initial_value: NftMetadataCrawlerParsedAssetUrisStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type NftMetadataCrawlerParsedAssetUrisStreamCursorValueInput = {
    animation_optimizer_retry_count?: InputMaybe<Scalars["Int"]["input"]>;
    asset_uri?: InputMaybe<Scalars["String"]["input"]>;
    cdn_animation_uri?: InputMaybe<Scalars["String"]["input"]>;
    cdn_image_uri?: InputMaybe<Scalars["String"]["input"]>;
    cdn_json_uri?: InputMaybe<Scalars["String"]["input"]>;
    image_optimizer_retry_count?: InputMaybe<Scalars["Int"]["input"]>;
    json_parser_retry_count?: InputMaybe<Scalars["Int"]["input"]>;
    raw_animation_uri?: InputMaybe<Scalars["String"]["input"]>;
    raw_image_uri?: InputMaybe<Scalars["String"]["input"]>;
};
export type NumActiveDelegatorPerPool = {
    num_active_delegator?: Maybe<Scalars["bigint"]["output"]>;
    pool_address?: Maybe<Scalars["String"]["output"]>;
};
export type NumActiveDelegatorPerPoolBoolExp = {
    _and?: InputMaybe<Array<NumActiveDelegatorPerPoolBoolExp>>;
    _not?: InputMaybe<NumActiveDelegatorPerPoolBoolExp>;
    _or?: InputMaybe<Array<NumActiveDelegatorPerPoolBoolExp>>;
    num_active_delegator?: InputMaybe<BigintComparisonExp>;
    pool_address?: InputMaybe<StringComparisonExp>;
};
export type NumActiveDelegatorPerPoolOrderBy = {
    num_active_delegator?: InputMaybe<OrderBy>;
    pool_address?: InputMaybe<OrderBy>;
};
export declare enum NumActiveDelegatorPerPoolSelectColumn {
    NumActiveDelegator = "num_active_delegator",
    PoolAddress = "pool_address"
}
export type NumActiveDelegatorPerPoolStreamCursorInput = {
    initial_value: NumActiveDelegatorPerPoolStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type NumActiveDelegatorPerPoolStreamCursorValueInput = {
    num_active_delegator?: InputMaybe<Scalars["bigint"]["input"]>;
    pool_address?: InputMaybe<Scalars["String"]["input"]>;
};
export type NumericComparisonExp = {
    _eq?: InputMaybe<Scalars["numeric"]["input"]>;
    _gt?: InputMaybe<Scalars["numeric"]["input"]>;
    _gte?: InputMaybe<Scalars["numeric"]["input"]>;
    _in?: InputMaybe<Array<Scalars["numeric"]["input"]>>;
    _is_null?: InputMaybe<Scalars["Boolean"]["input"]>;
    _lt?: InputMaybe<Scalars["numeric"]["input"]>;
    _lte?: InputMaybe<Scalars["numeric"]["input"]>;
    _neq?: InputMaybe<Scalars["numeric"]["input"]>;
    _nin?: InputMaybe<Array<Scalars["numeric"]["input"]>>;
};
export declare enum OrderBy {
    Asc = "asc",
    AscNullsFirst = "asc_nulls_first",
    AscNullsLast = "asc_nulls_last",
    Desc = "desc",
    DescNullsFirst = "desc_nulls_first",
    DescNullsLast = "desc_nulls_last"
}
export type ProcessorStatus = {
    last_success_version: Scalars["bigint"]["output"];
    last_updated: Scalars["timestamp"]["output"];
    processor: Scalars["String"]["output"];
};
export type ProcessorStatusBoolExp = {
    _and?: InputMaybe<Array<ProcessorStatusBoolExp>>;
    _not?: InputMaybe<ProcessorStatusBoolExp>;
    _or?: InputMaybe<Array<ProcessorStatusBoolExp>>;
    last_success_version?: InputMaybe<BigintComparisonExp>;
    last_updated?: InputMaybe<TimestampComparisonExp>;
    processor?: InputMaybe<StringComparisonExp>;
};
export type ProcessorStatusOrderBy = {
    last_success_version?: InputMaybe<OrderBy>;
    last_updated?: InputMaybe<OrderBy>;
    processor?: InputMaybe<OrderBy>;
};
export declare enum ProcessorStatusSelectColumn {
    LastSuccessVersion = "last_success_version",
    LastUpdated = "last_updated",
    Processor = "processor"
}
export type ProcessorStatusStreamCursorInput = {
    initial_value: ProcessorStatusStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type ProcessorStatusStreamCursorValueInput = {
    last_success_version?: InputMaybe<Scalars["bigint"]["input"]>;
    last_updated?: InputMaybe<Scalars["timestamp"]["input"]>;
    processor?: InputMaybe<Scalars["String"]["input"]>;
};
export type ProposalVotes = {
    num_votes: Scalars["numeric"]["output"];
    proposal_id: Scalars["bigint"]["output"];
    should_pass: Scalars["Boolean"]["output"];
    staking_pool_address: Scalars["String"]["output"];
    transaction_timestamp: Scalars["timestamp"]["output"];
    transaction_version: Scalars["bigint"]["output"];
    voter_address: Scalars["String"]["output"];
};
export type ProposalVotesAggregate = {
    aggregate?: Maybe<ProposalVotesAggregateFields>;
    nodes: Array<ProposalVotes>;
};
export type ProposalVotesAggregateFields = {
    avg?: Maybe<ProposalVotesAvgFields>;
    count: Scalars["Int"]["output"];
    max?: Maybe<ProposalVotesMaxFields>;
    min?: Maybe<ProposalVotesMinFields>;
    stddev?: Maybe<ProposalVotesStddevFields>;
    stddev_pop?: Maybe<ProposalVotesStddevPopFields>;
    stddev_samp?: Maybe<ProposalVotesStddevSampFields>;
    sum?: Maybe<ProposalVotesSumFields>;
    var_pop?: Maybe<ProposalVotesVarPopFields>;
    var_samp?: Maybe<ProposalVotesVarSampFields>;
    variance?: Maybe<ProposalVotesVarianceFields>;
};
export type ProposalVotesAggregateFieldsCountArgs = {
    columns?: InputMaybe<Array<ProposalVotesSelectColumn>>;
    distinct?: InputMaybe<Scalars["Boolean"]["input"]>;
};
export type ProposalVotesAvgFields = {
    num_votes?: Maybe<Scalars["Float"]["output"]>;
    proposal_id?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type ProposalVotesBoolExp = {
    _and?: InputMaybe<Array<ProposalVotesBoolExp>>;
    _not?: InputMaybe<ProposalVotesBoolExp>;
    _or?: InputMaybe<Array<ProposalVotesBoolExp>>;
    num_votes?: InputMaybe<NumericComparisonExp>;
    proposal_id?: InputMaybe<BigintComparisonExp>;
    should_pass?: InputMaybe<BooleanComparisonExp>;
    staking_pool_address?: InputMaybe<StringComparisonExp>;
    transaction_timestamp?: InputMaybe<TimestampComparisonExp>;
    transaction_version?: InputMaybe<BigintComparisonExp>;
    voter_address?: InputMaybe<StringComparisonExp>;
};
export type ProposalVotesMaxFields = {
    num_votes?: Maybe<Scalars["numeric"]["output"]>;
    proposal_id?: Maybe<Scalars["bigint"]["output"]>;
    staking_pool_address?: Maybe<Scalars["String"]["output"]>;
    transaction_timestamp?: Maybe<Scalars["timestamp"]["output"]>;
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
    voter_address?: Maybe<Scalars["String"]["output"]>;
};
export type ProposalVotesMinFields = {
    num_votes?: Maybe<Scalars["numeric"]["output"]>;
    proposal_id?: Maybe<Scalars["bigint"]["output"]>;
    staking_pool_address?: Maybe<Scalars["String"]["output"]>;
    transaction_timestamp?: Maybe<Scalars["timestamp"]["output"]>;
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
    voter_address?: Maybe<Scalars["String"]["output"]>;
};
export type ProposalVotesOrderBy = {
    num_votes?: InputMaybe<OrderBy>;
    proposal_id?: InputMaybe<OrderBy>;
    should_pass?: InputMaybe<OrderBy>;
    staking_pool_address?: InputMaybe<OrderBy>;
    transaction_timestamp?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
    voter_address?: InputMaybe<OrderBy>;
};
export declare enum ProposalVotesSelectColumn {
    NumVotes = "num_votes",
    ProposalId = "proposal_id",
    ShouldPass = "should_pass",
    StakingPoolAddress = "staking_pool_address",
    TransactionTimestamp = "transaction_timestamp",
    TransactionVersion = "transaction_version",
    VoterAddress = "voter_address"
}
export type ProposalVotesStddevFields = {
    num_votes?: Maybe<Scalars["Float"]["output"]>;
    proposal_id?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type ProposalVotesStddevPopFields = {
    num_votes?: Maybe<Scalars["Float"]["output"]>;
    proposal_id?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type ProposalVotesStddevSampFields = {
    num_votes?: Maybe<Scalars["Float"]["output"]>;
    proposal_id?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type ProposalVotesStreamCursorInput = {
    initial_value: ProposalVotesStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type ProposalVotesStreamCursorValueInput = {
    num_votes?: InputMaybe<Scalars["numeric"]["input"]>;
    proposal_id?: InputMaybe<Scalars["bigint"]["input"]>;
    should_pass?: InputMaybe<Scalars["Boolean"]["input"]>;
    staking_pool_address?: InputMaybe<Scalars["String"]["input"]>;
    transaction_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    voter_address?: InputMaybe<Scalars["String"]["input"]>;
};
export type ProposalVotesSumFields = {
    num_votes?: Maybe<Scalars["numeric"]["output"]>;
    proposal_id?: Maybe<Scalars["bigint"]["output"]>;
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
};
export type ProposalVotesVarPopFields = {
    num_votes?: Maybe<Scalars["Float"]["output"]>;
    proposal_id?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type ProposalVotesVarSampFields = {
    num_votes?: Maybe<Scalars["Float"]["output"]>;
    proposal_id?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type ProposalVotesVarianceFields = {
    num_votes?: Maybe<Scalars["Float"]["output"]>;
    proposal_id?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type QueryRoot = {
    account_transactions: Array<AccountTransactions>;
    account_transactions_aggregate: AccountTransactionsAggregate;
    account_transactions_by_pk?: Maybe<AccountTransactions>;
    address_events_summary: Array<AddressEventsSummary>;
    address_version_from_events: Array<AddressVersionFromEvents>;
    address_version_from_events_aggregate: AddressVersionFromEventsAggregate;
    address_version_from_move_resources: Array<AddressVersionFromMoveResources>;
    address_version_from_move_resources_aggregate: AddressVersionFromMoveResourcesAggregate;
    block_metadata_transactions: Array<BlockMetadataTransactions>;
    block_metadata_transactions_by_pk?: Maybe<BlockMetadataTransactions>;
    coin_activities: Array<CoinActivities>;
    coin_activities_aggregate: CoinActivitiesAggregate;
    coin_activities_by_pk?: Maybe<CoinActivities>;
    coin_balances: Array<CoinBalances>;
    coin_balances_by_pk?: Maybe<CoinBalances>;
    coin_infos: Array<CoinInfos>;
    coin_infos_by_pk?: Maybe<CoinInfos>;
    coin_supply: Array<CoinSupply>;
    coin_supply_by_pk?: Maybe<CoinSupply>;
    collection_datas: Array<CollectionDatas>;
    collection_datas_by_pk?: Maybe<CollectionDatas>;
    current_ans_lookup: Array<CurrentAnsLookup>;
    current_ans_lookup_by_pk?: Maybe<CurrentAnsLookup>;
    current_ans_lookup_v2: Array<CurrentAnsLookupV2>;
    current_ans_lookup_v2_by_pk?: Maybe<CurrentAnsLookupV2>;
    current_aptos_names: Array<CurrentAptosNames>;
    current_aptos_names_aggregate: CurrentAptosNamesAggregate;
    current_coin_balances: Array<CurrentCoinBalances>;
    current_coin_balances_by_pk?: Maybe<CurrentCoinBalances>;
    current_collection_datas: Array<CurrentCollectionDatas>;
    current_collection_datas_by_pk?: Maybe<CurrentCollectionDatas>;
    current_collection_ownership_v2_view: Array<CurrentCollectionOwnershipV2View>;
    current_collection_ownership_v2_view_aggregate: CurrentCollectionOwnershipV2ViewAggregate;
    current_collections_v2: Array<CurrentCollectionsV2>;
    current_collections_v2_by_pk?: Maybe<CurrentCollectionsV2>;
    current_delegated_staking_pool_balances: Array<CurrentDelegatedStakingPoolBalances>;
    current_delegated_staking_pool_balances_by_pk?: Maybe<CurrentDelegatedStakingPoolBalances>;
    current_delegated_voter: Array<CurrentDelegatedVoter>;
    current_delegated_voter_by_pk?: Maybe<CurrentDelegatedVoter>;
    current_delegator_balances: Array<CurrentDelegatorBalances>;
    current_delegator_balances_by_pk?: Maybe<CurrentDelegatorBalances>;
    current_fungible_asset_balances: Array<CurrentFungibleAssetBalances>;
    current_fungible_asset_balances_aggregate: CurrentFungibleAssetBalancesAggregate;
    current_fungible_asset_balances_by_pk?: Maybe<CurrentFungibleAssetBalances>;
    current_objects: Array<CurrentObjects>;
    current_objects_by_pk?: Maybe<CurrentObjects>;
    current_staking_pool_voter: Array<CurrentStakingPoolVoter>;
    current_staking_pool_voter_by_pk?: Maybe<CurrentStakingPoolVoter>;
    current_table_items: Array<CurrentTableItems>;
    current_table_items_by_pk?: Maybe<CurrentTableItems>;
    current_token_datas: Array<CurrentTokenDatas>;
    current_token_datas_by_pk?: Maybe<CurrentTokenDatas>;
    current_token_datas_v2: Array<CurrentTokenDatasV2>;
    current_token_datas_v2_by_pk?: Maybe<CurrentTokenDatasV2>;
    current_token_ownerships: Array<CurrentTokenOwnerships>;
    current_token_ownerships_aggregate: CurrentTokenOwnershipsAggregate;
    current_token_ownerships_by_pk?: Maybe<CurrentTokenOwnerships>;
    current_token_ownerships_v2: Array<CurrentTokenOwnershipsV2>;
    current_token_ownerships_v2_aggregate: CurrentTokenOwnershipsV2Aggregate;
    current_token_ownerships_v2_by_pk?: Maybe<CurrentTokenOwnershipsV2>;
    current_token_pending_claims: Array<CurrentTokenPendingClaims>;
    current_token_pending_claims_by_pk?: Maybe<CurrentTokenPendingClaims>;
    delegated_staking_activities: Array<DelegatedStakingActivities>;
    delegated_staking_activities_by_pk?: Maybe<DelegatedStakingActivities>;
    delegated_staking_pools: Array<DelegatedStakingPools>;
    delegated_staking_pools_by_pk?: Maybe<DelegatedStakingPools>;
    delegator_distinct_pool: Array<DelegatorDistinctPool>;
    delegator_distinct_pool_aggregate: DelegatorDistinctPoolAggregate;
    events: Array<Events>;
    events_by_pk?: Maybe<Events>;
    fungible_asset_activities: Array<FungibleAssetActivities>;
    fungible_asset_activities_by_pk?: Maybe<FungibleAssetActivities>;
    fungible_asset_metadata: Array<FungibleAssetMetadata>;
    fungible_asset_metadata_by_pk?: Maybe<FungibleAssetMetadata>;
    indexer_status: Array<IndexerStatus>;
    indexer_status_by_pk?: Maybe<IndexerStatus>;
    ledger_infos: Array<LedgerInfos>;
    ledger_infos_by_pk?: Maybe<LedgerInfos>;
    move_resources: Array<MoveResources>;
    move_resources_aggregate: MoveResourcesAggregate;
    nft_marketplace_v2_current_nft_marketplace_auctions: Array<NftMarketplaceV2CurrentNftMarketplaceAuctions>;
    nft_marketplace_v2_current_nft_marketplace_auctions_by_pk?: Maybe<NftMarketplaceV2CurrentNftMarketplaceAuctions>;
    nft_marketplace_v2_current_nft_marketplace_collection_offers: Array<NftMarketplaceV2CurrentNftMarketplaceCollectionOffers>;
    nft_marketplace_v2_current_nft_marketplace_collection_offers_by_pk?: Maybe<NftMarketplaceV2CurrentNftMarketplaceCollectionOffers>;
    nft_marketplace_v2_current_nft_marketplace_listings: Array<NftMarketplaceV2CurrentNftMarketplaceListings>;
    nft_marketplace_v2_current_nft_marketplace_listings_by_pk?: Maybe<NftMarketplaceV2CurrentNftMarketplaceListings>;
    nft_marketplace_v2_current_nft_marketplace_token_offers: Array<NftMarketplaceV2CurrentNftMarketplaceTokenOffers>;
    nft_marketplace_v2_current_nft_marketplace_token_offers_by_pk?: Maybe<NftMarketplaceV2CurrentNftMarketplaceTokenOffers>;
    nft_marketplace_v2_nft_marketplace_activities: Array<NftMarketplaceV2NftMarketplaceActivities>;
    nft_marketplace_v2_nft_marketplace_activities_by_pk?: Maybe<NftMarketplaceV2NftMarketplaceActivities>;
    nft_metadata_crawler_parsed_asset_uris: Array<NftMetadataCrawlerParsedAssetUris>;
    nft_metadata_crawler_parsed_asset_uris_by_pk?: Maybe<NftMetadataCrawlerParsedAssetUris>;
    num_active_delegator_per_pool: Array<NumActiveDelegatorPerPool>;
    processor_status: Array<ProcessorStatus>;
    processor_status_by_pk?: Maybe<ProcessorStatus>;
    proposal_votes: Array<ProposalVotes>;
    proposal_votes_aggregate: ProposalVotesAggregate;
    proposal_votes_by_pk?: Maybe<ProposalVotes>;
    table_items: Array<TableItems>;
    table_items_by_pk?: Maybe<TableItems>;
    table_metadatas: Array<TableMetadatas>;
    table_metadatas_by_pk?: Maybe<TableMetadatas>;
    token_activities: Array<TokenActivities>;
    token_activities_aggregate: TokenActivitiesAggregate;
    token_activities_by_pk?: Maybe<TokenActivities>;
    token_activities_v2: Array<TokenActivitiesV2>;
    token_activities_v2_aggregate: TokenActivitiesV2Aggregate;
    token_activities_v2_by_pk?: Maybe<TokenActivitiesV2>;
    token_datas: Array<TokenDatas>;
    token_datas_by_pk?: Maybe<TokenDatas>;
    token_ownerships: Array<TokenOwnerships>;
    token_ownerships_by_pk?: Maybe<TokenOwnerships>;
    tokens: Array<Tokens>;
    tokens_by_pk?: Maybe<Tokens>;
    user_transactions: Array<UserTransactions>;
    user_transactions_by_pk?: Maybe<UserTransactions>;
};
export type QueryRootAccountTransactionsArgs = {
    distinct_on?: InputMaybe<Array<AccountTransactionsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<AccountTransactionsOrderBy>>;
    where?: InputMaybe<AccountTransactionsBoolExp>;
};
export type QueryRootAccountTransactionsAggregateArgs = {
    distinct_on?: InputMaybe<Array<AccountTransactionsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<AccountTransactionsOrderBy>>;
    where?: InputMaybe<AccountTransactionsBoolExp>;
};
export type QueryRootAccountTransactionsByPkArgs = {
    account_address: Scalars["String"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type QueryRootAddressEventsSummaryArgs = {
    distinct_on?: InputMaybe<Array<AddressEventsSummarySelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<AddressEventsSummaryOrderBy>>;
    where?: InputMaybe<AddressEventsSummaryBoolExp>;
};
export type QueryRootAddressVersionFromEventsArgs = {
    distinct_on?: InputMaybe<Array<AddressVersionFromEventsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<AddressVersionFromEventsOrderBy>>;
    where?: InputMaybe<AddressVersionFromEventsBoolExp>;
};
export type QueryRootAddressVersionFromEventsAggregateArgs = {
    distinct_on?: InputMaybe<Array<AddressVersionFromEventsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<AddressVersionFromEventsOrderBy>>;
    where?: InputMaybe<AddressVersionFromEventsBoolExp>;
};
export type QueryRootAddressVersionFromMoveResourcesArgs = {
    distinct_on?: InputMaybe<Array<AddressVersionFromMoveResourcesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<AddressVersionFromMoveResourcesOrderBy>>;
    where?: InputMaybe<AddressVersionFromMoveResourcesBoolExp>;
};
export type QueryRootAddressVersionFromMoveResourcesAggregateArgs = {
    distinct_on?: InputMaybe<Array<AddressVersionFromMoveResourcesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<AddressVersionFromMoveResourcesOrderBy>>;
    where?: InputMaybe<AddressVersionFromMoveResourcesBoolExp>;
};
export type QueryRootBlockMetadataTransactionsArgs = {
    distinct_on?: InputMaybe<Array<BlockMetadataTransactionsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<BlockMetadataTransactionsOrderBy>>;
    where?: InputMaybe<BlockMetadataTransactionsBoolExp>;
};
export type QueryRootBlockMetadataTransactionsByPkArgs = {
    version: Scalars["bigint"]["input"];
};
export type QueryRootCoinActivitiesArgs = {
    distinct_on?: InputMaybe<Array<CoinActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CoinActivitiesOrderBy>>;
    where?: InputMaybe<CoinActivitiesBoolExp>;
};
export type QueryRootCoinActivitiesAggregateArgs = {
    distinct_on?: InputMaybe<Array<CoinActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CoinActivitiesOrderBy>>;
    where?: InputMaybe<CoinActivitiesBoolExp>;
};
export type QueryRootCoinActivitiesByPkArgs = {
    event_account_address: Scalars["String"]["input"];
    event_creation_number: Scalars["bigint"]["input"];
    event_sequence_number: Scalars["bigint"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type QueryRootCoinBalancesArgs = {
    distinct_on?: InputMaybe<Array<CoinBalancesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CoinBalancesOrderBy>>;
    where?: InputMaybe<CoinBalancesBoolExp>;
};
export type QueryRootCoinBalancesByPkArgs = {
    coin_type_hash: Scalars["String"]["input"];
    owner_address: Scalars["String"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type QueryRootCoinInfosArgs = {
    distinct_on?: InputMaybe<Array<CoinInfosSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CoinInfosOrderBy>>;
    where?: InputMaybe<CoinInfosBoolExp>;
};
export type QueryRootCoinInfosByPkArgs = {
    coin_type_hash: Scalars["String"]["input"];
};
export type QueryRootCoinSupplyArgs = {
    distinct_on?: InputMaybe<Array<CoinSupplySelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CoinSupplyOrderBy>>;
    where?: InputMaybe<CoinSupplyBoolExp>;
};
export type QueryRootCoinSupplyByPkArgs = {
    coin_type_hash: Scalars["String"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type QueryRootCollectionDatasArgs = {
    distinct_on?: InputMaybe<Array<CollectionDatasSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CollectionDatasOrderBy>>;
    where?: InputMaybe<CollectionDatasBoolExp>;
};
export type QueryRootCollectionDatasByPkArgs = {
    collection_data_id_hash: Scalars["String"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type QueryRootCurrentAnsLookupArgs = {
    distinct_on?: InputMaybe<Array<CurrentAnsLookupSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentAnsLookupOrderBy>>;
    where?: InputMaybe<CurrentAnsLookupBoolExp>;
};
export type QueryRootCurrentAnsLookupByPkArgs = {
    domain: Scalars["String"]["input"];
    subdomain: Scalars["String"]["input"];
};
export type QueryRootCurrentAnsLookupV2Args = {
    distinct_on?: InputMaybe<Array<CurrentAnsLookupV2SelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentAnsLookupV2OrderBy>>;
    where?: InputMaybe<CurrentAnsLookupV2BoolExp>;
};
export type QueryRootCurrentAnsLookupV2ByPkArgs = {
    domain: Scalars["String"]["input"];
    subdomain: Scalars["String"]["input"];
    token_standard: Scalars["String"]["input"];
};
export type QueryRootCurrentAptosNamesArgs = {
    distinct_on?: InputMaybe<Array<CurrentAptosNamesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentAptosNamesOrderBy>>;
    where?: InputMaybe<CurrentAptosNamesBoolExp>;
};
export type QueryRootCurrentAptosNamesAggregateArgs = {
    distinct_on?: InputMaybe<Array<CurrentAptosNamesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentAptosNamesOrderBy>>;
    where?: InputMaybe<CurrentAptosNamesBoolExp>;
};
export type QueryRootCurrentCoinBalancesArgs = {
    distinct_on?: InputMaybe<Array<CurrentCoinBalancesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentCoinBalancesOrderBy>>;
    where?: InputMaybe<CurrentCoinBalancesBoolExp>;
};
export type QueryRootCurrentCoinBalancesByPkArgs = {
    coin_type_hash: Scalars["String"]["input"];
    owner_address: Scalars["String"]["input"];
};
export type QueryRootCurrentCollectionDatasArgs = {
    distinct_on?: InputMaybe<Array<CurrentCollectionDatasSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentCollectionDatasOrderBy>>;
    where?: InputMaybe<CurrentCollectionDatasBoolExp>;
};
export type QueryRootCurrentCollectionDatasByPkArgs = {
    collection_data_id_hash: Scalars["String"]["input"];
};
export type QueryRootCurrentCollectionOwnershipV2ViewArgs = {
    distinct_on?: InputMaybe<Array<CurrentCollectionOwnershipV2ViewSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentCollectionOwnershipV2ViewOrderBy>>;
    where?: InputMaybe<CurrentCollectionOwnershipV2ViewBoolExp>;
};
export type QueryRootCurrentCollectionOwnershipV2ViewAggregateArgs = {
    distinct_on?: InputMaybe<Array<CurrentCollectionOwnershipV2ViewSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentCollectionOwnershipV2ViewOrderBy>>;
    where?: InputMaybe<CurrentCollectionOwnershipV2ViewBoolExp>;
};
export type QueryRootCurrentCollectionsV2Args = {
    distinct_on?: InputMaybe<Array<CurrentCollectionsV2SelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentCollectionsV2OrderBy>>;
    where?: InputMaybe<CurrentCollectionsV2BoolExp>;
};
export type QueryRootCurrentCollectionsV2ByPkArgs = {
    collection_id: Scalars["String"]["input"];
};
export type QueryRootCurrentDelegatedStakingPoolBalancesArgs = {
    distinct_on?: InputMaybe<Array<CurrentDelegatedStakingPoolBalancesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentDelegatedStakingPoolBalancesOrderBy>>;
    where?: InputMaybe<CurrentDelegatedStakingPoolBalancesBoolExp>;
};
export type QueryRootCurrentDelegatedStakingPoolBalancesByPkArgs = {
    staking_pool_address: Scalars["String"]["input"];
};
export type QueryRootCurrentDelegatedVoterArgs = {
    distinct_on?: InputMaybe<Array<CurrentDelegatedVoterSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentDelegatedVoterOrderBy>>;
    where?: InputMaybe<CurrentDelegatedVoterBoolExp>;
};
export type QueryRootCurrentDelegatedVoterByPkArgs = {
    delegation_pool_address: Scalars["String"]["input"];
    delegator_address: Scalars["String"]["input"];
};
export type QueryRootCurrentDelegatorBalancesArgs = {
    distinct_on?: InputMaybe<Array<CurrentDelegatorBalancesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentDelegatorBalancesOrderBy>>;
    where?: InputMaybe<CurrentDelegatorBalancesBoolExp>;
};
export type QueryRootCurrentDelegatorBalancesByPkArgs = {
    delegator_address: Scalars["String"]["input"];
    pool_address: Scalars["String"]["input"];
    pool_type: Scalars["String"]["input"];
    table_handle: Scalars["String"]["input"];
};
export type QueryRootCurrentFungibleAssetBalancesArgs = {
    distinct_on?: InputMaybe<Array<CurrentFungibleAssetBalancesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentFungibleAssetBalancesOrderBy>>;
    where?: InputMaybe<CurrentFungibleAssetBalancesBoolExp>;
};
export type QueryRootCurrentFungibleAssetBalancesAggregateArgs = {
    distinct_on?: InputMaybe<Array<CurrentFungibleAssetBalancesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentFungibleAssetBalancesOrderBy>>;
    where?: InputMaybe<CurrentFungibleAssetBalancesBoolExp>;
};
export type QueryRootCurrentFungibleAssetBalancesByPkArgs = {
    storage_id: Scalars["String"]["input"];
};
export type QueryRootCurrentObjectsArgs = {
    distinct_on?: InputMaybe<Array<CurrentObjectsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentObjectsOrderBy>>;
    where?: InputMaybe<CurrentObjectsBoolExp>;
};
export type QueryRootCurrentObjectsByPkArgs = {
    object_address: Scalars["String"]["input"];
};
export type QueryRootCurrentStakingPoolVoterArgs = {
    distinct_on?: InputMaybe<Array<CurrentStakingPoolVoterSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentStakingPoolVoterOrderBy>>;
    where?: InputMaybe<CurrentStakingPoolVoterBoolExp>;
};
export type QueryRootCurrentStakingPoolVoterByPkArgs = {
    staking_pool_address: Scalars["String"]["input"];
};
export type QueryRootCurrentTableItemsArgs = {
    distinct_on?: InputMaybe<Array<CurrentTableItemsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentTableItemsOrderBy>>;
    where?: InputMaybe<CurrentTableItemsBoolExp>;
};
export type QueryRootCurrentTableItemsByPkArgs = {
    key_hash: Scalars["String"]["input"];
    table_handle: Scalars["String"]["input"];
};
export type QueryRootCurrentTokenDatasArgs = {
    distinct_on?: InputMaybe<Array<CurrentTokenDatasSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentTokenDatasOrderBy>>;
    where?: InputMaybe<CurrentTokenDatasBoolExp>;
};
export type QueryRootCurrentTokenDatasByPkArgs = {
    token_data_id_hash: Scalars["String"]["input"];
};
export type QueryRootCurrentTokenDatasV2Args = {
    distinct_on?: InputMaybe<Array<CurrentTokenDatasV2SelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentTokenDatasV2OrderBy>>;
    where?: InputMaybe<CurrentTokenDatasV2BoolExp>;
};
export type QueryRootCurrentTokenDatasV2ByPkArgs = {
    token_data_id: Scalars["String"]["input"];
};
export type QueryRootCurrentTokenOwnershipsArgs = {
    distinct_on?: InputMaybe<Array<CurrentTokenOwnershipsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentTokenOwnershipsOrderBy>>;
    where?: InputMaybe<CurrentTokenOwnershipsBoolExp>;
};
export type QueryRootCurrentTokenOwnershipsAggregateArgs = {
    distinct_on?: InputMaybe<Array<CurrentTokenOwnershipsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentTokenOwnershipsOrderBy>>;
    where?: InputMaybe<CurrentTokenOwnershipsBoolExp>;
};
export type QueryRootCurrentTokenOwnershipsByPkArgs = {
    owner_address: Scalars["String"]["input"];
    property_version: Scalars["numeric"]["input"];
    token_data_id_hash: Scalars["String"]["input"];
};
export type QueryRootCurrentTokenOwnershipsV2Args = {
    distinct_on?: InputMaybe<Array<CurrentTokenOwnershipsV2SelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentTokenOwnershipsV2OrderBy>>;
    where?: InputMaybe<CurrentTokenOwnershipsV2BoolExp>;
};
export type QueryRootCurrentTokenOwnershipsV2AggregateArgs = {
    distinct_on?: InputMaybe<Array<CurrentTokenOwnershipsV2SelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentTokenOwnershipsV2OrderBy>>;
    where?: InputMaybe<CurrentTokenOwnershipsV2BoolExp>;
};
export type QueryRootCurrentTokenOwnershipsV2ByPkArgs = {
    owner_address: Scalars["String"]["input"];
    property_version_v1: Scalars["numeric"]["input"];
    storage_id: Scalars["String"]["input"];
    token_data_id: Scalars["String"]["input"];
};
export type QueryRootCurrentTokenPendingClaimsArgs = {
    distinct_on?: InputMaybe<Array<CurrentTokenPendingClaimsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentTokenPendingClaimsOrderBy>>;
    where?: InputMaybe<CurrentTokenPendingClaimsBoolExp>;
};
export type QueryRootCurrentTokenPendingClaimsByPkArgs = {
    from_address: Scalars["String"]["input"];
    property_version: Scalars["numeric"]["input"];
    to_address: Scalars["String"]["input"];
    token_data_id_hash: Scalars["String"]["input"];
};
export type QueryRootDelegatedStakingActivitiesArgs = {
    distinct_on?: InputMaybe<Array<DelegatedStakingActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<DelegatedStakingActivitiesOrderBy>>;
    where?: InputMaybe<DelegatedStakingActivitiesBoolExp>;
};
export type QueryRootDelegatedStakingActivitiesByPkArgs = {
    event_index: Scalars["bigint"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type QueryRootDelegatedStakingPoolsArgs = {
    distinct_on?: InputMaybe<Array<DelegatedStakingPoolsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<DelegatedStakingPoolsOrderBy>>;
    where?: InputMaybe<DelegatedStakingPoolsBoolExp>;
};
export type QueryRootDelegatedStakingPoolsByPkArgs = {
    staking_pool_address: Scalars["String"]["input"];
};
export type QueryRootDelegatorDistinctPoolArgs = {
    distinct_on?: InputMaybe<Array<DelegatorDistinctPoolSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<DelegatorDistinctPoolOrderBy>>;
    where?: InputMaybe<DelegatorDistinctPoolBoolExp>;
};
export type QueryRootDelegatorDistinctPoolAggregateArgs = {
    distinct_on?: InputMaybe<Array<DelegatorDistinctPoolSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<DelegatorDistinctPoolOrderBy>>;
    where?: InputMaybe<DelegatorDistinctPoolBoolExp>;
};
export type QueryRootEventsArgs = {
    distinct_on?: InputMaybe<Array<EventsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<EventsOrderBy>>;
    where?: InputMaybe<EventsBoolExp>;
};
export type QueryRootEventsByPkArgs = {
    event_index: Scalars["bigint"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type QueryRootFungibleAssetActivitiesArgs = {
    distinct_on?: InputMaybe<Array<FungibleAssetActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<FungibleAssetActivitiesOrderBy>>;
    where?: InputMaybe<FungibleAssetActivitiesBoolExp>;
};
export type QueryRootFungibleAssetActivitiesByPkArgs = {
    event_index: Scalars["bigint"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type QueryRootFungibleAssetMetadataArgs = {
    distinct_on?: InputMaybe<Array<FungibleAssetMetadataSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<FungibleAssetMetadataOrderBy>>;
    where?: InputMaybe<FungibleAssetMetadataBoolExp>;
};
export type QueryRootFungibleAssetMetadataByPkArgs = {
    asset_type: Scalars["String"]["input"];
};
export type QueryRootIndexerStatusArgs = {
    distinct_on?: InputMaybe<Array<IndexerStatusSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<IndexerStatusOrderBy>>;
    where?: InputMaybe<IndexerStatusBoolExp>;
};
export type QueryRootIndexerStatusByPkArgs = {
    db: Scalars["String"]["input"];
};
export type QueryRootLedgerInfosArgs = {
    distinct_on?: InputMaybe<Array<LedgerInfosSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<LedgerInfosOrderBy>>;
    where?: InputMaybe<LedgerInfosBoolExp>;
};
export type QueryRootLedgerInfosByPkArgs = {
    chain_id: Scalars["bigint"]["input"];
};
export type QueryRootMoveResourcesArgs = {
    distinct_on?: InputMaybe<Array<MoveResourcesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<MoveResourcesOrderBy>>;
    where?: InputMaybe<MoveResourcesBoolExp>;
};
export type QueryRootMoveResourcesAggregateArgs = {
    distinct_on?: InputMaybe<Array<MoveResourcesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<MoveResourcesOrderBy>>;
    where?: InputMaybe<MoveResourcesBoolExp>;
};
export type QueryRootNftMarketplaceV2CurrentNftMarketplaceAuctionsArgs = {
    distinct_on?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceAuctionsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceAuctionsOrderBy>>;
    where?: InputMaybe<NftMarketplaceV2CurrentNftMarketplaceAuctionsBoolExp>;
};
export type QueryRootNftMarketplaceV2CurrentNftMarketplaceAuctionsByPkArgs = {
    listing_id: Scalars["String"]["input"];
    token_data_id: Scalars["String"]["input"];
};
export type QueryRootNftMarketplaceV2CurrentNftMarketplaceCollectionOffersArgs = {
    distinct_on?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceCollectionOffersSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceCollectionOffersOrderBy>>;
    where?: InputMaybe<NftMarketplaceV2CurrentNftMarketplaceCollectionOffersBoolExp>;
};
export type QueryRootNftMarketplaceV2CurrentNftMarketplaceCollectionOffersByPkArgs = {
    collection_id: Scalars["String"]["input"];
    collection_offer_id: Scalars["String"]["input"];
};
export type QueryRootNftMarketplaceV2CurrentNftMarketplaceListingsArgs = {
    distinct_on?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceListingsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceListingsOrderBy>>;
    where?: InputMaybe<NftMarketplaceV2CurrentNftMarketplaceListingsBoolExp>;
};
export type QueryRootNftMarketplaceV2CurrentNftMarketplaceListingsByPkArgs = {
    listing_id: Scalars["String"]["input"];
    token_data_id: Scalars["String"]["input"];
};
export type QueryRootNftMarketplaceV2CurrentNftMarketplaceTokenOffersArgs = {
    distinct_on?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceTokenOffersSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceTokenOffersOrderBy>>;
    where?: InputMaybe<NftMarketplaceV2CurrentNftMarketplaceTokenOffersBoolExp>;
};
export type QueryRootNftMarketplaceV2CurrentNftMarketplaceTokenOffersByPkArgs = {
    offer_id: Scalars["String"]["input"];
    token_data_id: Scalars["String"]["input"];
};
export type QueryRootNftMarketplaceV2NftMarketplaceActivitiesArgs = {
    distinct_on?: InputMaybe<Array<NftMarketplaceV2NftMarketplaceActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<NftMarketplaceV2NftMarketplaceActivitiesOrderBy>>;
    where?: InputMaybe<NftMarketplaceV2NftMarketplaceActivitiesBoolExp>;
};
export type QueryRootNftMarketplaceV2NftMarketplaceActivitiesByPkArgs = {
    event_index: Scalars["bigint"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type QueryRootNftMetadataCrawlerParsedAssetUrisArgs = {
    distinct_on?: InputMaybe<Array<NftMetadataCrawlerParsedAssetUrisSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<NftMetadataCrawlerParsedAssetUrisOrderBy>>;
    where?: InputMaybe<NftMetadataCrawlerParsedAssetUrisBoolExp>;
};
export type QueryRootNftMetadataCrawlerParsedAssetUrisByPkArgs = {
    asset_uri: Scalars["String"]["input"];
};
export type QueryRootNumActiveDelegatorPerPoolArgs = {
    distinct_on?: InputMaybe<Array<NumActiveDelegatorPerPoolSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<NumActiveDelegatorPerPoolOrderBy>>;
    where?: InputMaybe<NumActiveDelegatorPerPoolBoolExp>;
};
export type QueryRootProcessorStatusArgs = {
    distinct_on?: InputMaybe<Array<ProcessorStatusSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<ProcessorStatusOrderBy>>;
    where?: InputMaybe<ProcessorStatusBoolExp>;
};
export type QueryRootProcessorStatusByPkArgs = {
    processor: Scalars["String"]["input"];
};
export type QueryRootProposalVotesArgs = {
    distinct_on?: InputMaybe<Array<ProposalVotesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<ProposalVotesOrderBy>>;
    where?: InputMaybe<ProposalVotesBoolExp>;
};
export type QueryRootProposalVotesAggregateArgs = {
    distinct_on?: InputMaybe<Array<ProposalVotesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<ProposalVotesOrderBy>>;
    where?: InputMaybe<ProposalVotesBoolExp>;
};
export type QueryRootProposalVotesByPkArgs = {
    proposal_id: Scalars["bigint"]["input"];
    transaction_version: Scalars["bigint"]["input"];
    voter_address: Scalars["String"]["input"];
};
export type QueryRootTableItemsArgs = {
    distinct_on?: InputMaybe<Array<TableItemsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TableItemsOrderBy>>;
    where?: InputMaybe<TableItemsBoolExp>;
};
export type QueryRootTableItemsByPkArgs = {
    transaction_version: Scalars["bigint"]["input"];
    write_set_change_index: Scalars["bigint"]["input"];
};
export type QueryRootTableMetadatasArgs = {
    distinct_on?: InputMaybe<Array<TableMetadatasSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TableMetadatasOrderBy>>;
    where?: InputMaybe<TableMetadatasBoolExp>;
};
export type QueryRootTableMetadatasByPkArgs = {
    handle: Scalars["String"]["input"];
};
export type QueryRootTokenActivitiesArgs = {
    distinct_on?: InputMaybe<Array<TokenActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenActivitiesOrderBy>>;
    where?: InputMaybe<TokenActivitiesBoolExp>;
};
export type QueryRootTokenActivitiesAggregateArgs = {
    distinct_on?: InputMaybe<Array<TokenActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenActivitiesOrderBy>>;
    where?: InputMaybe<TokenActivitiesBoolExp>;
};
export type QueryRootTokenActivitiesByPkArgs = {
    event_account_address: Scalars["String"]["input"];
    event_creation_number: Scalars["bigint"]["input"];
    event_sequence_number: Scalars["bigint"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type QueryRootTokenActivitiesV2Args = {
    distinct_on?: InputMaybe<Array<TokenActivitiesV2SelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenActivitiesV2OrderBy>>;
    where?: InputMaybe<TokenActivitiesV2BoolExp>;
};
export type QueryRootTokenActivitiesV2AggregateArgs = {
    distinct_on?: InputMaybe<Array<TokenActivitiesV2SelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenActivitiesV2OrderBy>>;
    where?: InputMaybe<TokenActivitiesV2BoolExp>;
};
export type QueryRootTokenActivitiesV2ByPkArgs = {
    event_index: Scalars["bigint"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type QueryRootTokenDatasArgs = {
    distinct_on?: InputMaybe<Array<TokenDatasSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenDatasOrderBy>>;
    where?: InputMaybe<TokenDatasBoolExp>;
};
export type QueryRootTokenDatasByPkArgs = {
    token_data_id_hash: Scalars["String"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type QueryRootTokenOwnershipsArgs = {
    distinct_on?: InputMaybe<Array<TokenOwnershipsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenOwnershipsOrderBy>>;
    where?: InputMaybe<TokenOwnershipsBoolExp>;
};
export type QueryRootTokenOwnershipsByPkArgs = {
    property_version: Scalars["numeric"]["input"];
    table_handle: Scalars["String"]["input"];
    token_data_id_hash: Scalars["String"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type QueryRootTokensArgs = {
    distinct_on?: InputMaybe<Array<TokensSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokensOrderBy>>;
    where?: InputMaybe<TokensBoolExp>;
};
export type QueryRootTokensByPkArgs = {
    property_version: Scalars["numeric"]["input"];
    token_data_id_hash: Scalars["String"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type QueryRootUserTransactionsArgs = {
    distinct_on?: InputMaybe<Array<UserTransactionsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<UserTransactionsOrderBy>>;
    where?: InputMaybe<UserTransactionsBoolExp>;
};
export type QueryRootUserTransactionsByPkArgs = {
    version: Scalars["bigint"]["input"];
};
export type SubscriptionRoot = {
    account_transactions: Array<AccountTransactions>;
    account_transactions_aggregate: AccountTransactionsAggregate;
    account_transactions_by_pk?: Maybe<AccountTransactions>;
    account_transactions_stream: Array<AccountTransactions>;
    address_events_summary: Array<AddressEventsSummary>;
    address_events_summary_stream: Array<AddressEventsSummary>;
    address_version_from_events: Array<AddressVersionFromEvents>;
    address_version_from_events_aggregate: AddressVersionFromEventsAggregate;
    address_version_from_events_stream: Array<AddressVersionFromEvents>;
    address_version_from_move_resources: Array<AddressVersionFromMoveResources>;
    address_version_from_move_resources_aggregate: AddressVersionFromMoveResourcesAggregate;
    address_version_from_move_resources_stream: Array<AddressVersionFromMoveResources>;
    block_metadata_transactions: Array<BlockMetadataTransactions>;
    block_metadata_transactions_by_pk?: Maybe<BlockMetadataTransactions>;
    block_metadata_transactions_stream: Array<BlockMetadataTransactions>;
    coin_activities: Array<CoinActivities>;
    coin_activities_aggregate: CoinActivitiesAggregate;
    coin_activities_by_pk?: Maybe<CoinActivities>;
    coin_activities_stream: Array<CoinActivities>;
    coin_balances: Array<CoinBalances>;
    coin_balances_by_pk?: Maybe<CoinBalances>;
    coin_balances_stream: Array<CoinBalances>;
    coin_infos: Array<CoinInfos>;
    coin_infos_by_pk?: Maybe<CoinInfos>;
    coin_infos_stream: Array<CoinInfos>;
    coin_supply: Array<CoinSupply>;
    coin_supply_by_pk?: Maybe<CoinSupply>;
    coin_supply_stream: Array<CoinSupply>;
    collection_datas: Array<CollectionDatas>;
    collection_datas_by_pk?: Maybe<CollectionDatas>;
    collection_datas_stream: Array<CollectionDatas>;
    current_ans_lookup: Array<CurrentAnsLookup>;
    current_ans_lookup_by_pk?: Maybe<CurrentAnsLookup>;
    current_ans_lookup_stream: Array<CurrentAnsLookup>;
    current_ans_lookup_v2: Array<CurrentAnsLookupV2>;
    current_ans_lookup_v2_by_pk?: Maybe<CurrentAnsLookupV2>;
    current_ans_lookup_v2_stream: Array<CurrentAnsLookupV2>;
    current_aptos_names: Array<CurrentAptosNames>;
    current_aptos_names_aggregate: CurrentAptosNamesAggregate;
    current_aptos_names_stream: Array<CurrentAptosNames>;
    current_coin_balances: Array<CurrentCoinBalances>;
    current_coin_balances_by_pk?: Maybe<CurrentCoinBalances>;
    current_coin_balances_stream: Array<CurrentCoinBalances>;
    current_collection_datas: Array<CurrentCollectionDatas>;
    current_collection_datas_by_pk?: Maybe<CurrentCollectionDatas>;
    current_collection_datas_stream: Array<CurrentCollectionDatas>;
    current_collection_ownership_v2_view: Array<CurrentCollectionOwnershipV2View>;
    current_collection_ownership_v2_view_aggregate: CurrentCollectionOwnershipV2ViewAggregate;
    current_collection_ownership_v2_view_stream: Array<CurrentCollectionOwnershipV2View>;
    current_collections_v2: Array<CurrentCollectionsV2>;
    current_collections_v2_by_pk?: Maybe<CurrentCollectionsV2>;
    current_collections_v2_stream: Array<CurrentCollectionsV2>;
    current_delegated_staking_pool_balances: Array<CurrentDelegatedStakingPoolBalances>;
    current_delegated_staking_pool_balances_by_pk?: Maybe<CurrentDelegatedStakingPoolBalances>;
    current_delegated_staking_pool_balances_stream: Array<CurrentDelegatedStakingPoolBalances>;
    current_delegated_voter: Array<CurrentDelegatedVoter>;
    current_delegated_voter_by_pk?: Maybe<CurrentDelegatedVoter>;
    current_delegated_voter_stream: Array<CurrentDelegatedVoter>;
    current_delegator_balances: Array<CurrentDelegatorBalances>;
    current_delegator_balances_by_pk?: Maybe<CurrentDelegatorBalances>;
    current_delegator_balances_stream: Array<CurrentDelegatorBalances>;
    current_fungible_asset_balances: Array<CurrentFungibleAssetBalances>;
    current_fungible_asset_balances_aggregate: CurrentFungibleAssetBalancesAggregate;
    current_fungible_asset_balances_by_pk?: Maybe<CurrentFungibleAssetBalances>;
    current_fungible_asset_balances_stream: Array<CurrentFungibleAssetBalances>;
    current_objects: Array<CurrentObjects>;
    current_objects_by_pk?: Maybe<CurrentObjects>;
    current_objects_stream: Array<CurrentObjects>;
    current_staking_pool_voter: Array<CurrentStakingPoolVoter>;
    current_staking_pool_voter_by_pk?: Maybe<CurrentStakingPoolVoter>;
    current_staking_pool_voter_stream: Array<CurrentStakingPoolVoter>;
    current_table_items: Array<CurrentTableItems>;
    current_table_items_by_pk?: Maybe<CurrentTableItems>;
    current_table_items_stream: Array<CurrentTableItems>;
    current_token_datas: Array<CurrentTokenDatas>;
    current_token_datas_by_pk?: Maybe<CurrentTokenDatas>;
    current_token_datas_stream: Array<CurrentTokenDatas>;
    current_token_datas_v2: Array<CurrentTokenDatasV2>;
    current_token_datas_v2_by_pk?: Maybe<CurrentTokenDatasV2>;
    current_token_datas_v2_stream: Array<CurrentTokenDatasV2>;
    current_token_ownerships: Array<CurrentTokenOwnerships>;
    current_token_ownerships_aggregate: CurrentTokenOwnershipsAggregate;
    current_token_ownerships_by_pk?: Maybe<CurrentTokenOwnerships>;
    current_token_ownerships_stream: Array<CurrentTokenOwnerships>;
    current_token_ownerships_v2: Array<CurrentTokenOwnershipsV2>;
    current_token_ownerships_v2_aggregate: CurrentTokenOwnershipsV2Aggregate;
    current_token_ownerships_v2_by_pk?: Maybe<CurrentTokenOwnershipsV2>;
    current_token_ownerships_v2_stream: Array<CurrentTokenOwnershipsV2>;
    current_token_pending_claims: Array<CurrentTokenPendingClaims>;
    current_token_pending_claims_by_pk?: Maybe<CurrentTokenPendingClaims>;
    current_token_pending_claims_stream: Array<CurrentTokenPendingClaims>;
    delegated_staking_activities: Array<DelegatedStakingActivities>;
    delegated_staking_activities_by_pk?: Maybe<DelegatedStakingActivities>;
    delegated_staking_activities_stream: Array<DelegatedStakingActivities>;
    delegated_staking_pools: Array<DelegatedStakingPools>;
    delegated_staking_pools_by_pk?: Maybe<DelegatedStakingPools>;
    delegated_staking_pools_stream: Array<DelegatedStakingPools>;
    delegator_distinct_pool: Array<DelegatorDistinctPool>;
    delegator_distinct_pool_aggregate: DelegatorDistinctPoolAggregate;
    delegator_distinct_pool_stream: Array<DelegatorDistinctPool>;
    events: Array<Events>;
    events_by_pk?: Maybe<Events>;
    events_stream: Array<Events>;
    fungible_asset_activities: Array<FungibleAssetActivities>;
    fungible_asset_activities_by_pk?: Maybe<FungibleAssetActivities>;
    fungible_asset_activities_stream: Array<FungibleAssetActivities>;
    fungible_asset_metadata: Array<FungibleAssetMetadata>;
    fungible_asset_metadata_by_pk?: Maybe<FungibleAssetMetadata>;
    fungible_asset_metadata_stream: Array<FungibleAssetMetadata>;
    indexer_status: Array<IndexerStatus>;
    indexer_status_by_pk?: Maybe<IndexerStatus>;
    indexer_status_stream: Array<IndexerStatus>;
    ledger_infos: Array<LedgerInfos>;
    ledger_infos_by_pk?: Maybe<LedgerInfos>;
    ledger_infos_stream: Array<LedgerInfos>;
    move_resources: Array<MoveResources>;
    move_resources_aggregate: MoveResourcesAggregate;
    move_resources_stream: Array<MoveResources>;
    nft_marketplace_v2_current_nft_marketplace_auctions: Array<NftMarketplaceV2CurrentNftMarketplaceAuctions>;
    nft_marketplace_v2_current_nft_marketplace_auctions_by_pk?: Maybe<NftMarketplaceV2CurrentNftMarketplaceAuctions>;
    nft_marketplace_v2_current_nft_marketplace_auctions_stream: Array<NftMarketplaceV2CurrentNftMarketplaceAuctions>;
    nft_marketplace_v2_current_nft_marketplace_collection_offers: Array<NftMarketplaceV2CurrentNftMarketplaceCollectionOffers>;
    nft_marketplace_v2_current_nft_marketplace_collection_offers_by_pk?: Maybe<NftMarketplaceV2CurrentNftMarketplaceCollectionOffers>;
    nft_marketplace_v2_current_nft_marketplace_collection_offers_stream: Array<NftMarketplaceV2CurrentNftMarketplaceCollectionOffers>;
    nft_marketplace_v2_current_nft_marketplace_listings: Array<NftMarketplaceV2CurrentNftMarketplaceListings>;
    nft_marketplace_v2_current_nft_marketplace_listings_by_pk?: Maybe<NftMarketplaceV2CurrentNftMarketplaceListings>;
    nft_marketplace_v2_current_nft_marketplace_listings_stream: Array<NftMarketplaceV2CurrentNftMarketplaceListings>;
    nft_marketplace_v2_current_nft_marketplace_token_offers: Array<NftMarketplaceV2CurrentNftMarketplaceTokenOffers>;
    nft_marketplace_v2_current_nft_marketplace_token_offers_by_pk?: Maybe<NftMarketplaceV2CurrentNftMarketplaceTokenOffers>;
    nft_marketplace_v2_current_nft_marketplace_token_offers_stream: Array<NftMarketplaceV2CurrentNftMarketplaceTokenOffers>;
    nft_marketplace_v2_nft_marketplace_activities: Array<NftMarketplaceV2NftMarketplaceActivities>;
    nft_marketplace_v2_nft_marketplace_activities_by_pk?: Maybe<NftMarketplaceV2NftMarketplaceActivities>;
    nft_marketplace_v2_nft_marketplace_activities_stream: Array<NftMarketplaceV2NftMarketplaceActivities>;
    nft_metadata_crawler_parsed_asset_uris: Array<NftMetadataCrawlerParsedAssetUris>;
    nft_metadata_crawler_parsed_asset_uris_by_pk?: Maybe<NftMetadataCrawlerParsedAssetUris>;
    nft_metadata_crawler_parsed_asset_uris_stream: Array<NftMetadataCrawlerParsedAssetUris>;
    num_active_delegator_per_pool: Array<NumActiveDelegatorPerPool>;
    num_active_delegator_per_pool_stream: Array<NumActiveDelegatorPerPool>;
    processor_status: Array<ProcessorStatus>;
    processor_status_by_pk?: Maybe<ProcessorStatus>;
    processor_status_stream: Array<ProcessorStatus>;
    proposal_votes: Array<ProposalVotes>;
    proposal_votes_aggregate: ProposalVotesAggregate;
    proposal_votes_by_pk?: Maybe<ProposalVotes>;
    proposal_votes_stream: Array<ProposalVotes>;
    table_items: Array<TableItems>;
    table_items_by_pk?: Maybe<TableItems>;
    table_items_stream: Array<TableItems>;
    table_metadatas: Array<TableMetadatas>;
    table_metadatas_by_pk?: Maybe<TableMetadatas>;
    table_metadatas_stream: Array<TableMetadatas>;
    token_activities: Array<TokenActivities>;
    token_activities_aggregate: TokenActivitiesAggregate;
    token_activities_by_pk?: Maybe<TokenActivities>;
    token_activities_stream: Array<TokenActivities>;
    token_activities_v2: Array<TokenActivitiesV2>;
    token_activities_v2_aggregate: TokenActivitiesV2Aggregate;
    token_activities_v2_by_pk?: Maybe<TokenActivitiesV2>;
    token_activities_v2_stream: Array<TokenActivitiesV2>;
    token_datas: Array<TokenDatas>;
    token_datas_by_pk?: Maybe<TokenDatas>;
    token_datas_stream: Array<TokenDatas>;
    token_ownerships: Array<TokenOwnerships>;
    token_ownerships_by_pk?: Maybe<TokenOwnerships>;
    token_ownerships_stream: Array<TokenOwnerships>;
    tokens: Array<Tokens>;
    tokens_by_pk?: Maybe<Tokens>;
    tokens_stream: Array<Tokens>;
    user_transactions: Array<UserTransactions>;
    user_transactions_by_pk?: Maybe<UserTransactions>;
    user_transactions_stream: Array<UserTransactions>;
};
export type SubscriptionRootAccountTransactionsArgs = {
    distinct_on?: InputMaybe<Array<AccountTransactionsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<AccountTransactionsOrderBy>>;
    where?: InputMaybe<AccountTransactionsBoolExp>;
};
export type SubscriptionRootAccountTransactionsAggregateArgs = {
    distinct_on?: InputMaybe<Array<AccountTransactionsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<AccountTransactionsOrderBy>>;
    where?: InputMaybe<AccountTransactionsBoolExp>;
};
export type SubscriptionRootAccountTransactionsByPkArgs = {
    account_address: Scalars["String"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type SubscriptionRootAccountTransactionsStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<AccountTransactionsStreamCursorInput>>;
    where?: InputMaybe<AccountTransactionsBoolExp>;
};
export type SubscriptionRootAddressEventsSummaryArgs = {
    distinct_on?: InputMaybe<Array<AddressEventsSummarySelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<AddressEventsSummaryOrderBy>>;
    where?: InputMaybe<AddressEventsSummaryBoolExp>;
};
export type SubscriptionRootAddressEventsSummaryStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<AddressEventsSummaryStreamCursorInput>>;
    where?: InputMaybe<AddressEventsSummaryBoolExp>;
};
export type SubscriptionRootAddressVersionFromEventsArgs = {
    distinct_on?: InputMaybe<Array<AddressVersionFromEventsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<AddressVersionFromEventsOrderBy>>;
    where?: InputMaybe<AddressVersionFromEventsBoolExp>;
};
export type SubscriptionRootAddressVersionFromEventsAggregateArgs = {
    distinct_on?: InputMaybe<Array<AddressVersionFromEventsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<AddressVersionFromEventsOrderBy>>;
    where?: InputMaybe<AddressVersionFromEventsBoolExp>;
};
export type SubscriptionRootAddressVersionFromEventsStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<AddressVersionFromEventsStreamCursorInput>>;
    where?: InputMaybe<AddressVersionFromEventsBoolExp>;
};
export type SubscriptionRootAddressVersionFromMoveResourcesArgs = {
    distinct_on?: InputMaybe<Array<AddressVersionFromMoveResourcesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<AddressVersionFromMoveResourcesOrderBy>>;
    where?: InputMaybe<AddressVersionFromMoveResourcesBoolExp>;
};
export type SubscriptionRootAddressVersionFromMoveResourcesAggregateArgs = {
    distinct_on?: InputMaybe<Array<AddressVersionFromMoveResourcesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<AddressVersionFromMoveResourcesOrderBy>>;
    where?: InputMaybe<AddressVersionFromMoveResourcesBoolExp>;
};
export type SubscriptionRootAddressVersionFromMoveResourcesStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<AddressVersionFromMoveResourcesStreamCursorInput>>;
    where?: InputMaybe<AddressVersionFromMoveResourcesBoolExp>;
};
export type SubscriptionRootBlockMetadataTransactionsArgs = {
    distinct_on?: InputMaybe<Array<BlockMetadataTransactionsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<BlockMetadataTransactionsOrderBy>>;
    where?: InputMaybe<BlockMetadataTransactionsBoolExp>;
};
export type SubscriptionRootBlockMetadataTransactionsByPkArgs = {
    version: Scalars["bigint"]["input"];
};
export type SubscriptionRootBlockMetadataTransactionsStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<BlockMetadataTransactionsStreamCursorInput>>;
    where?: InputMaybe<BlockMetadataTransactionsBoolExp>;
};
export type SubscriptionRootCoinActivitiesArgs = {
    distinct_on?: InputMaybe<Array<CoinActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CoinActivitiesOrderBy>>;
    where?: InputMaybe<CoinActivitiesBoolExp>;
};
export type SubscriptionRootCoinActivitiesAggregateArgs = {
    distinct_on?: InputMaybe<Array<CoinActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CoinActivitiesOrderBy>>;
    where?: InputMaybe<CoinActivitiesBoolExp>;
};
export type SubscriptionRootCoinActivitiesByPkArgs = {
    event_account_address: Scalars["String"]["input"];
    event_creation_number: Scalars["bigint"]["input"];
    event_sequence_number: Scalars["bigint"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type SubscriptionRootCoinActivitiesStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CoinActivitiesStreamCursorInput>>;
    where?: InputMaybe<CoinActivitiesBoolExp>;
};
export type SubscriptionRootCoinBalancesArgs = {
    distinct_on?: InputMaybe<Array<CoinBalancesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CoinBalancesOrderBy>>;
    where?: InputMaybe<CoinBalancesBoolExp>;
};
export type SubscriptionRootCoinBalancesByPkArgs = {
    coin_type_hash: Scalars["String"]["input"];
    owner_address: Scalars["String"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type SubscriptionRootCoinBalancesStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CoinBalancesStreamCursorInput>>;
    where?: InputMaybe<CoinBalancesBoolExp>;
};
export type SubscriptionRootCoinInfosArgs = {
    distinct_on?: InputMaybe<Array<CoinInfosSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CoinInfosOrderBy>>;
    where?: InputMaybe<CoinInfosBoolExp>;
};
export type SubscriptionRootCoinInfosByPkArgs = {
    coin_type_hash: Scalars["String"]["input"];
};
export type SubscriptionRootCoinInfosStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CoinInfosStreamCursorInput>>;
    where?: InputMaybe<CoinInfosBoolExp>;
};
export type SubscriptionRootCoinSupplyArgs = {
    distinct_on?: InputMaybe<Array<CoinSupplySelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CoinSupplyOrderBy>>;
    where?: InputMaybe<CoinSupplyBoolExp>;
};
export type SubscriptionRootCoinSupplyByPkArgs = {
    coin_type_hash: Scalars["String"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type SubscriptionRootCoinSupplyStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CoinSupplyStreamCursorInput>>;
    where?: InputMaybe<CoinSupplyBoolExp>;
};
export type SubscriptionRootCollectionDatasArgs = {
    distinct_on?: InputMaybe<Array<CollectionDatasSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CollectionDatasOrderBy>>;
    where?: InputMaybe<CollectionDatasBoolExp>;
};
export type SubscriptionRootCollectionDatasByPkArgs = {
    collection_data_id_hash: Scalars["String"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type SubscriptionRootCollectionDatasStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CollectionDatasStreamCursorInput>>;
    where?: InputMaybe<CollectionDatasBoolExp>;
};
export type SubscriptionRootCurrentAnsLookupArgs = {
    distinct_on?: InputMaybe<Array<CurrentAnsLookupSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentAnsLookupOrderBy>>;
    where?: InputMaybe<CurrentAnsLookupBoolExp>;
};
export type SubscriptionRootCurrentAnsLookupByPkArgs = {
    domain: Scalars["String"]["input"];
    subdomain: Scalars["String"]["input"];
};
export type SubscriptionRootCurrentAnsLookupStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CurrentAnsLookupStreamCursorInput>>;
    where?: InputMaybe<CurrentAnsLookupBoolExp>;
};
export type SubscriptionRootCurrentAnsLookupV2Args = {
    distinct_on?: InputMaybe<Array<CurrentAnsLookupV2SelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentAnsLookupV2OrderBy>>;
    where?: InputMaybe<CurrentAnsLookupV2BoolExp>;
};
export type SubscriptionRootCurrentAnsLookupV2ByPkArgs = {
    domain: Scalars["String"]["input"];
    subdomain: Scalars["String"]["input"];
    token_standard: Scalars["String"]["input"];
};
export type SubscriptionRootCurrentAnsLookupV2StreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CurrentAnsLookupV2StreamCursorInput>>;
    where?: InputMaybe<CurrentAnsLookupV2BoolExp>;
};
export type SubscriptionRootCurrentAptosNamesArgs = {
    distinct_on?: InputMaybe<Array<CurrentAptosNamesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentAptosNamesOrderBy>>;
    where?: InputMaybe<CurrentAptosNamesBoolExp>;
};
export type SubscriptionRootCurrentAptosNamesAggregateArgs = {
    distinct_on?: InputMaybe<Array<CurrentAptosNamesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentAptosNamesOrderBy>>;
    where?: InputMaybe<CurrentAptosNamesBoolExp>;
};
export type SubscriptionRootCurrentAptosNamesStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CurrentAptosNamesStreamCursorInput>>;
    where?: InputMaybe<CurrentAptosNamesBoolExp>;
};
export type SubscriptionRootCurrentCoinBalancesArgs = {
    distinct_on?: InputMaybe<Array<CurrentCoinBalancesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentCoinBalancesOrderBy>>;
    where?: InputMaybe<CurrentCoinBalancesBoolExp>;
};
export type SubscriptionRootCurrentCoinBalancesByPkArgs = {
    coin_type_hash: Scalars["String"]["input"];
    owner_address: Scalars["String"]["input"];
};
export type SubscriptionRootCurrentCoinBalancesStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CurrentCoinBalancesStreamCursorInput>>;
    where?: InputMaybe<CurrentCoinBalancesBoolExp>;
};
export type SubscriptionRootCurrentCollectionDatasArgs = {
    distinct_on?: InputMaybe<Array<CurrentCollectionDatasSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentCollectionDatasOrderBy>>;
    where?: InputMaybe<CurrentCollectionDatasBoolExp>;
};
export type SubscriptionRootCurrentCollectionDatasByPkArgs = {
    collection_data_id_hash: Scalars["String"]["input"];
};
export type SubscriptionRootCurrentCollectionDatasStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CurrentCollectionDatasStreamCursorInput>>;
    where?: InputMaybe<CurrentCollectionDatasBoolExp>;
};
export type SubscriptionRootCurrentCollectionOwnershipV2ViewArgs = {
    distinct_on?: InputMaybe<Array<CurrentCollectionOwnershipV2ViewSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentCollectionOwnershipV2ViewOrderBy>>;
    where?: InputMaybe<CurrentCollectionOwnershipV2ViewBoolExp>;
};
export type SubscriptionRootCurrentCollectionOwnershipV2ViewAggregateArgs = {
    distinct_on?: InputMaybe<Array<CurrentCollectionOwnershipV2ViewSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentCollectionOwnershipV2ViewOrderBy>>;
    where?: InputMaybe<CurrentCollectionOwnershipV2ViewBoolExp>;
};
export type SubscriptionRootCurrentCollectionOwnershipV2ViewStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CurrentCollectionOwnershipV2ViewStreamCursorInput>>;
    where?: InputMaybe<CurrentCollectionOwnershipV2ViewBoolExp>;
};
export type SubscriptionRootCurrentCollectionsV2Args = {
    distinct_on?: InputMaybe<Array<CurrentCollectionsV2SelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentCollectionsV2OrderBy>>;
    where?: InputMaybe<CurrentCollectionsV2BoolExp>;
};
export type SubscriptionRootCurrentCollectionsV2ByPkArgs = {
    collection_id: Scalars["String"]["input"];
};
export type SubscriptionRootCurrentCollectionsV2StreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CurrentCollectionsV2StreamCursorInput>>;
    where?: InputMaybe<CurrentCollectionsV2BoolExp>;
};
export type SubscriptionRootCurrentDelegatedStakingPoolBalancesArgs = {
    distinct_on?: InputMaybe<Array<CurrentDelegatedStakingPoolBalancesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentDelegatedStakingPoolBalancesOrderBy>>;
    where?: InputMaybe<CurrentDelegatedStakingPoolBalancesBoolExp>;
};
export type SubscriptionRootCurrentDelegatedStakingPoolBalancesByPkArgs = {
    staking_pool_address: Scalars["String"]["input"];
};
export type SubscriptionRootCurrentDelegatedStakingPoolBalancesStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CurrentDelegatedStakingPoolBalancesStreamCursorInput>>;
    where?: InputMaybe<CurrentDelegatedStakingPoolBalancesBoolExp>;
};
export type SubscriptionRootCurrentDelegatedVoterArgs = {
    distinct_on?: InputMaybe<Array<CurrentDelegatedVoterSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentDelegatedVoterOrderBy>>;
    where?: InputMaybe<CurrentDelegatedVoterBoolExp>;
};
export type SubscriptionRootCurrentDelegatedVoterByPkArgs = {
    delegation_pool_address: Scalars["String"]["input"];
    delegator_address: Scalars["String"]["input"];
};
export type SubscriptionRootCurrentDelegatedVoterStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CurrentDelegatedVoterStreamCursorInput>>;
    where?: InputMaybe<CurrentDelegatedVoterBoolExp>;
};
export type SubscriptionRootCurrentDelegatorBalancesArgs = {
    distinct_on?: InputMaybe<Array<CurrentDelegatorBalancesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentDelegatorBalancesOrderBy>>;
    where?: InputMaybe<CurrentDelegatorBalancesBoolExp>;
};
export type SubscriptionRootCurrentDelegatorBalancesByPkArgs = {
    delegator_address: Scalars["String"]["input"];
    pool_address: Scalars["String"]["input"];
    pool_type: Scalars["String"]["input"];
    table_handle: Scalars["String"]["input"];
};
export type SubscriptionRootCurrentDelegatorBalancesStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CurrentDelegatorBalancesStreamCursorInput>>;
    where?: InputMaybe<CurrentDelegatorBalancesBoolExp>;
};
export type SubscriptionRootCurrentFungibleAssetBalancesArgs = {
    distinct_on?: InputMaybe<Array<CurrentFungibleAssetBalancesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentFungibleAssetBalancesOrderBy>>;
    where?: InputMaybe<CurrentFungibleAssetBalancesBoolExp>;
};
export type SubscriptionRootCurrentFungibleAssetBalancesAggregateArgs = {
    distinct_on?: InputMaybe<Array<CurrentFungibleAssetBalancesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentFungibleAssetBalancesOrderBy>>;
    where?: InputMaybe<CurrentFungibleAssetBalancesBoolExp>;
};
export type SubscriptionRootCurrentFungibleAssetBalancesByPkArgs = {
    storage_id: Scalars["String"]["input"];
};
export type SubscriptionRootCurrentFungibleAssetBalancesStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CurrentFungibleAssetBalancesStreamCursorInput>>;
    where?: InputMaybe<CurrentFungibleAssetBalancesBoolExp>;
};
export type SubscriptionRootCurrentObjectsArgs = {
    distinct_on?: InputMaybe<Array<CurrentObjectsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentObjectsOrderBy>>;
    where?: InputMaybe<CurrentObjectsBoolExp>;
};
export type SubscriptionRootCurrentObjectsByPkArgs = {
    object_address: Scalars["String"]["input"];
};
export type SubscriptionRootCurrentObjectsStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CurrentObjectsStreamCursorInput>>;
    where?: InputMaybe<CurrentObjectsBoolExp>;
};
export type SubscriptionRootCurrentStakingPoolVoterArgs = {
    distinct_on?: InputMaybe<Array<CurrentStakingPoolVoterSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentStakingPoolVoterOrderBy>>;
    where?: InputMaybe<CurrentStakingPoolVoterBoolExp>;
};
export type SubscriptionRootCurrentStakingPoolVoterByPkArgs = {
    staking_pool_address: Scalars["String"]["input"];
};
export type SubscriptionRootCurrentStakingPoolVoterStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CurrentStakingPoolVoterStreamCursorInput>>;
    where?: InputMaybe<CurrentStakingPoolVoterBoolExp>;
};
export type SubscriptionRootCurrentTableItemsArgs = {
    distinct_on?: InputMaybe<Array<CurrentTableItemsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentTableItemsOrderBy>>;
    where?: InputMaybe<CurrentTableItemsBoolExp>;
};
export type SubscriptionRootCurrentTableItemsByPkArgs = {
    key_hash: Scalars["String"]["input"];
    table_handle: Scalars["String"]["input"];
};
export type SubscriptionRootCurrentTableItemsStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CurrentTableItemsStreamCursorInput>>;
    where?: InputMaybe<CurrentTableItemsBoolExp>;
};
export type SubscriptionRootCurrentTokenDatasArgs = {
    distinct_on?: InputMaybe<Array<CurrentTokenDatasSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentTokenDatasOrderBy>>;
    where?: InputMaybe<CurrentTokenDatasBoolExp>;
};
export type SubscriptionRootCurrentTokenDatasByPkArgs = {
    token_data_id_hash: Scalars["String"]["input"];
};
export type SubscriptionRootCurrentTokenDatasStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CurrentTokenDatasStreamCursorInput>>;
    where?: InputMaybe<CurrentTokenDatasBoolExp>;
};
export type SubscriptionRootCurrentTokenDatasV2Args = {
    distinct_on?: InputMaybe<Array<CurrentTokenDatasV2SelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentTokenDatasV2OrderBy>>;
    where?: InputMaybe<CurrentTokenDatasV2BoolExp>;
};
export type SubscriptionRootCurrentTokenDatasV2ByPkArgs = {
    token_data_id: Scalars["String"]["input"];
};
export type SubscriptionRootCurrentTokenDatasV2StreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CurrentTokenDatasV2StreamCursorInput>>;
    where?: InputMaybe<CurrentTokenDatasV2BoolExp>;
};
export type SubscriptionRootCurrentTokenOwnershipsArgs = {
    distinct_on?: InputMaybe<Array<CurrentTokenOwnershipsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentTokenOwnershipsOrderBy>>;
    where?: InputMaybe<CurrentTokenOwnershipsBoolExp>;
};
export type SubscriptionRootCurrentTokenOwnershipsAggregateArgs = {
    distinct_on?: InputMaybe<Array<CurrentTokenOwnershipsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentTokenOwnershipsOrderBy>>;
    where?: InputMaybe<CurrentTokenOwnershipsBoolExp>;
};
export type SubscriptionRootCurrentTokenOwnershipsByPkArgs = {
    owner_address: Scalars["String"]["input"];
    property_version: Scalars["numeric"]["input"];
    token_data_id_hash: Scalars["String"]["input"];
};
export type SubscriptionRootCurrentTokenOwnershipsStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CurrentTokenOwnershipsStreamCursorInput>>;
    where?: InputMaybe<CurrentTokenOwnershipsBoolExp>;
};
export type SubscriptionRootCurrentTokenOwnershipsV2Args = {
    distinct_on?: InputMaybe<Array<CurrentTokenOwnershipsV2SelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentTokenOwnershipsV2OrderBy>>;
    where?: InputMaybe<CurrentTokenOwnershipsV2BoolExp>;
};
export type SubscriptionRootCurrentTokenOwnershipsV2AggregateArgs = {
    distinct_on?: InputMaybe<Array<CurrentTokenOwnershipsV2SelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentTokenOwnershipsV2OrderBy>>;
    where?: InputMaybe<CurrentTokenOwnershipsV2BoolExp>;
};
export type SubscriptionRootCurrentTokenOwnershipsV2ByPkArgs = {
    owner_address: Scalars["String"]["input"];
    property_version_v1: Scalars["numeric"]["input"];
    storage_id: Scalars["String"]["input"];
    token_data_id: Scalars["String"]["input"];
};
export type SubscriptionRootCurrentTokenOwnershipsV2StreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CurrentTokenOwnershipsV2StreamCursorInput>>;
    where?: InputMaybe<CurrentTokenOwnershipsV2BoolExp>;
};
export type SubscriptionRootCurrentTokenPendingClaimsArgs = {
    distinct_on?: InputMaybe<Array<CurrentTokenPendingClaimsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentTokenPendingClaimsOrderBy>>;
    where?: InputMaybe<CurrentTokenPendingClaimsBoolExp>;
};
export type SubscriptionRootCurrentTokenPendingClaimsByPkArgs = {
    from_address: Scalars["String"]["input"];
    property_version: Scalars["numeric"]["input"];
    to_address: Scalars["String"]["input"];
    token_data_id_hash: Scalars["String"]["input"];
};
export type SubscriptionRootCurrentTokenPendingClaimsStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<CurrentTokenPendingClaimsStreamCursorInput>>;
    where?: InputMaybe<CurrentTokenPendingClaimsBoolExp>;
};
export type SubscriptionRootDelegatedStakingActivitiesArgs = {
    distinct_on?: InputMaybe<Array<DelegatedStakingActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<DelegatedStakingActivitiesOrderBy>>;
    where?: InputMaybe<DelegatedStakingActivitiesBoolExp>;
};
export type SubscriptionRootDelegatedStakingActivitiesByPkArgs = {
    event_index: Scalars["bigint"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type SubscriptionRootDelegatedStakingActivitiesStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<DelegatedStakingActivitiesStreamCursorInput>>;
    where?: InputMaybe<DelegatedStakingActivitiesBoolExp>;
};
export type SubscriptionRootDelegatedStakingPoolsArgs = {
    distinct_on?: InputMaybe<Array<DelegatedStakingPoolsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<DelegatedStakingPoolsOrderBy>>;
    where?: InputMaybe<DelegatedStakingPoolsBoolExp>;
};
export type SubscriptionRootDelegatedStakingPoolsByPkArgs = {
    staking_pool_address: Scalars["String"]["input"];
};
export type SubscriptionRootDelegatedStakingPoolsStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<DelegatedStakingPoolsStreamCursorInput>>;
    where?: InputMaybe<DelegatedStakingPoolsBoolExp>;
};
export type SubscriptionRootDelegatorDistinctPoolArgs = {
    distinct_on?: InputMaybe<Array<DelegatorDistinctPoolSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<DelegatorDistinctPoolOrderBy>>;
    where?: InputMaybe<DelegatorDistinctPoolBoolExp>;
};
export type SubscriptionRootDelegatorDistinctPoolAggregateArgs = {
    distinct_on?: InputMaybe<Array<DelegatorDistinctPoolSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<DelegatorDistinctPoolOrderBy>>;
    where?: InputMaybe<DelegatorDistinctPoolBoolExp>;
};
export type SubscriptionRootDelegatorDistinctPoolStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<DelegatorDistinctPoolStreamCursorInput>>;
    where?: InputMaybe<DelegatorDistinctPoolBoolExp>;
};
export type SubscriptionRootEventsArgs = {
    distinct_on?: InputMaybe<Array<EventsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<EventsOrderBy>>;
    where?: InputMaybe<EventsBoolExp>;
};
export type SubscriptionRootEventsByPkArgs = {
    event_index: Scalars["bigint"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type SubscriptionRootEventsStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<EventsStreamCursorInput>>;
    where?: InputMaybe<EventsBoolExp>;
};
export type SubscriptionRootFungibleAssetActivitiesArgs = {
    distinct_on?: InputMaybe<Array<FungibleAssetActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<FungibleAssetActivitiesOrderBy>>;
    where?: InputMaybe<FungibleAssetActivitiesBoolExp>;
};
export type SubscriptionRootFungibleAssetActivitiesByPkArgs = {
    event_index: Scalars["bigint"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type SubscriptionRootFungibleAssetActivitiesStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<FungibleAssetActivitiesStreamCursorInput>>;
    where?: InputMaybe<FungibleAssetActivitiesBoolExp>;
};
export type SubscriptionRootFungibleAssetMetadataArgs = {
    distinct_on?: InputMaybe<Array<FungibleAssetMetadataSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<FungibleAssetMetadataOrderBy>>;
    where?: InputMaybe<FungibleAssetMetadataBoolExp>;
};
export type SubscriptionRootFungibleAssetMetadataByPkArgs = {
    asset_type: Scalars["String"]["input"];
};
export type SubscriptionRootFungibleAssetMetadataStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<FungibleAssetMetadataStreamCursorInput>>;
    where?: InputMaybe<FungibleAssetMetadataBoolExp>;
};
export type SubscriptionRootIndexerStatusArgs = {
    distinct_on?: InputMaybe<Array<IndexerStatusSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<IndexerStatusOrderBy>>;
    where?: InputMaybe<IndexerStatusBoolExp>;
};
export type SubscriptionRootIndexerStatusByPkArgs = {
    db: Scalars["String"]["input"];
};
export type SubscriptionRootIndexerStatusStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<IndexerStatusStreamCursorInput>>;
    where?: InputMaybe<IndexerStatusBoolExp>;
};
export type SubscriptionRootLedgerInfosArgs = {
    distinct_on?: InputMaybe<Array<LedgerInfosSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<LedgerInfosOrderBy>>;
    where?: InputMaybe<LedgerInfosBoolExp>;
};
export type SubscriptionRootLedgerInfosByPkArgs = {
    chain_id: Scalars["bigint"]["input"];
};
export type SubscriptionRootLedgerInfosStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<LedgerInfosStreamCursorInput>>;
    where?: InputMaybe<LedgerInfosBoolExp>;
};
export type SubscriptionRootMoveResourcesArgs = {
    distinct_on?: InputMaybe<Array<MoveResourcesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<MoveResourcesOrderBy>>;
    where?: InputMaybe<MoveResourcesBoolExp>;
};
export type SubscriptionRootMoveResourcesAggregateArgs = {
    distinct_on?: InputMaybe<Array<MoveResourcesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<MoveResourcesOrderBy>>;
    where?: InputMaybe<MoveResourcesBoolExp>;
};
export type SubscriptionRootMoveResourcesStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<MoveResourcesStreamCursorInput>>;
    where?: InputMaybe<MoveResourcesBoolExp>;
};
export type SubscriptionRootNftMarketplaceV2CurrentNftMarketplaceAuctionsArgs = {
    distinct_on?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceAuctionsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceAuctionsOrderBy>>;
    where?: InputMaybe<NftMarketplaceV2CurrentNftMarketplaceAuctionsBoolExp>;
};
export type SubscriptionRootNftMarketplaceV2CurrentNftMarketplaceAuctionsByPkArgs = {
    listing_id: Scalars["String"]["input"];
    token_data_id: Scalars["String"]["input"];
};
export type SubscriptionRootNftMarketplaceV2CurrentNftMarketplaceAuctionsStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<NftMarketplaceV2CurrentNftMarketplaceAuctionsStreamCursorInput>>;
    where?: InputMaybe<NftMarketplaceV2CurrentNftMarketplaceAuctionsBoolExp>;
};
export type SubscriptionRootNftMarketplaceV2CurrentNftMarketplaceCollectionOffersArgs = {
    distinct_on?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceCollectionOffersSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceCollectionOffersOrderBy>>;
    where?: InputMaybe<NftMarketplaceV2CurrentNftMarketplaceCollectionOffersBoolExp>;
};
export type SubscriptionRootNftMarketplaceV2CurrentNftMarketplaceCollectionOffersByPkArgs = {
    collection_id: Scalars["String"]["input"];
    collection_offer_id: Scalars["String"]["input"];
};
export type SubscriptionRootNftMarketplaceV2CurrentNftMarketplaceCollectionOffersStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<NftMarketplaceV2CurrentNftMarketplaceCollectionOffersStreamCursorInput>>;
    where?: InputMaybe<NftMarketplaceV2CurrentNftMarketplaceCollectionOffersBoolExp>;
};
export type SubscriptionRootNftMarketplaceV2CurrentNftMarketplaceListingsArgs = {
    distinct_on?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceListingsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceListingsOrderBy>>;
    where?: InputMaybe<NftMarketplaceV2CurrentNftMarketplaceListingsBoolExp>;
};
export type SubscriptionRootNftMarketplaceV2CurrentNftMarketplaceListingsByPkArgs = {
    listing_id: Scalars["String"]["input"];
    token_data_id: Scalars["String"]["input"];
};
export type SubscriptionRootNftMarketplaceV2CurrentNftMarketplaceListingsStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<NftMarketplaceV2CurrentNftMarketplaceListingsStreamCursorInput>>;
    where?: InputMaybe<NftMarketplaceV2CurrentNftMarketplaceListingsBoolExp>;
};
export type SubscriptionRootNftMarketplaceV2CurrentNftMarketplaceTokenOffersArgs = {
    distinct_on?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceTokenOffersSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<NftMarketplaceV2CurrentNftMarketplaceTokenOffersOrderBy>>;
    where?: InputMaybe<NftMarketplaceV2CurrentNftMarketplaceTokenOffersBoolExp>;
};
export type SubscriptionRootNftMarketplaceV2CurrentNftMarketplaceTokenOffersByPkArgs = {
    offer_id: Scalars["String"]["input"];
    token_data_id: Scalars["String"]["input"];
};
export type SubscriptionRootNftMarketplaceV2CurrentNftMarketplaceTokenOffersStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<NftMarketplaceV2CurrentNftMarketplaceTokenOffersStreamCursorInput>>;
    where?: InputMaybe<NftMarketplaceV2CurrentNftMarketplaceTokenOffersBoolExp>;
};
export type SubscriptionRootNftMarketplaceV2NftMarketplaceActivitiesArgs = {
    distinct_on?: InputMaybe<Array<NftMarketplaceV2NftMarketplaceActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<NftMarketplaceV2NftMarketplaceActivitiesOrderBy>>;
    where?: InputMaybe<NftMarketplaceV2NftMarketplaceActivitiesBoolExp>;
};
export type SubscriptionRootNftMarketplaceV2NftMarketplaceActivitiesByPkArgs = {
    event_index: Scalars["bigint"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type SubscriptionRootNftMarketplaceV2NftMarketplaceActivitiesStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<NftMarketplaceV2NftMarketplaceActivitiesStreamCursorInput>>;
    where?: InputMaybe<NftMarketplaceV2NftMarketplaceActivitiesBoolExp>;
};
export type SubscriptionRootNftMetadataCrawlerParsedAssetUrisArgs = {
    distinct_on?: InputMaybe<Array<NftMetadataCrawlerParsedAssetUrisSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<NftMetadataCrawlerParsedAssetUrisOrderBy>>;
    where?: InputMaybe<NftMetadataCrawlerParsedAssetUrisBoolExp>;
};
export type SubscriptionRootNftMetadataCrawlerParsedAssetUrisByPkArgs = {
    asset_uri: Scalars["String"]["input"];
};
export type SubscriptionRootNftMetadataCrawlerParsedAssetUrisStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<NftMetadataCrawlerParsedAssetUrisStreamCursorInput>>;
    where?: InputMaybe<NftMetadataCrawlerParsedAssetUrisBoolExp>;
};
export type SubscriptionRootNumActiveDelegatorPerPoolArgs = {
    distinct_on?: InputMaybe<Array<NumActiveDelegatorPerPoolSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<NumActiveDelegatorPerPoolOrderBy>>;
    where?: InputMaybe<NumActiveDelegatorPerPoolBoolExp>;
};
export type SubscriptionRootNumActiveDelegatorPerPoolStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<NumActiveDelegatorPerPoolStreamCursorInput>>;
    where?: InputMaybe<NumActiveDelegatorPerPoolBoolExp>;
};
export type SubscriptionRootProcessorStatusArgs = {
    distinct_on?: InputMaybe<Array<ProcessorStatusSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<ProcessorStatusOrderBy>>;
    where?: InputMaybe<ProcessorStatusBoolExp>;
};
export type SubscriptionRootProcessorStatusByPkArgs = {
    processor: Scalars["String"]["input"];
};
export type SubscriptionRootProcessorStatusStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<ProcessorStatusStreamCursorInput>>;
    where?: InputMaybe<ProcessorStatusBoolExp>;
};
export type SubscriptionRootProposalVotesArgs = {
    distinct_on?: InputMaybe<Array<ProposalVotesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<ProposalVotesOrderBy>>;
    where?: InputMaybe<ProposalVotesBoolExp>;
};
export type SubscriptionRootProposalVotesAggregateArgs = {
    distinct_on?: InputMaybe<Array<ProposalVotesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<ProposalVotesOrderBy>>;
    where?: InputMaybe<ProposalVotesBoolExp>;
};
export type SubscriptionRootProposalVotesByPkArgs = {
    proposal_id: Scalars["bigint"]["input"];
    transaction_version: Scalars["bigint"]["input"];
    voter_address: Scalars["String"]["input"];
};
export type SubscriptionRootProposalVotesStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<ProposalVotesStreamCursorInput>>;
    where?: InputMaybe<ProposalVotesBoolExp>;
};
export type SubscriptionRootTableItemsArgs = {
    distinct_on?: InputMaybe<Array<TableItemsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TableItemsOrderBy>>;
    where?: InputMaybe<TableItemsBoolExp>;
};
export type SubscriptionRootTableItemsByPkArgs = {
    transaction_version: Scalars["bigint"]["input"];
    write_set_change_index: Scalars["bigint"]["input"];
};
export type SubscriptionRootTableItemsStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<TableItemsStreamCursorInput>>;
    where?: InputMaybe<TableItemsBoolExp>;
};
export type SubscriptionRootTableMetadatasArgs = {
    distinct_on?: InputMaybe<Array<TableMetadatasSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TableMetadatasOrderBy>>;
    where?: InputMaybe<TableMetadatasBoolExp>;
};
export type SubscriptionRootTableMetadatasByPkArgs = {
    handle: Scalars["String"]["input"];
};
export type SubscriptionRootTableMetadatasStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<TableMetadatasStreamCursorInput>>;
    where?: InputMaybe<TableMetadatasBoolExp>;
};
export type SubscriptionRootTokenActivitiesArgs = {
    distinct_on?: InputMaybe<Array<TokenActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenActivitiesOrderBy>>;
    where?: InputMaybe<TokenActivitiesBoolExp>;
};
export type SubscriptionRootTokenActivitiesAggregateArgs = {
    distinct_on?: InputMaybe<Array<TokenActivitiesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenActivitiesOrderBy>>;
    where?: InputMaybe<TokenActivitiesBoolExp>;
};
export type SubscriptionRootTokenActivitiesByPkArgs = {
    event_account_address: Scalars["String"]["input"];
    event_creation_number: Scalars["bigint"]["input"];
    event_sequence_number: Scalars["bigint"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type SubscriptionRootTokenActivitiesStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<TokenActivitiesStreamCursorInput>>;
    where?: InputMaybe<TokenActivitiesBoolExp>;
};
export type SubscriptionRootTokenActivitiesV2Args = {
    distinct_on?: InputMaybe<Array<TokenActivitiesV2SelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenActivitiesV2OrderBy>>;
    where?: InputMaybe<TokenActivitiesV2BoolExp>;
};
export type SubscriptionRootTokenActivitiesV2AggregateArgs = {
    distinct_on?: InputMaybe<Array<TokenActivitiesV2SelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenActivitiesV2OrderBy>>;
    where?: InputMaybe<TokenActivitiesV2BoolExp>;
};
export type SubscriptionRootTokenActivitiesV2ByPkArgs = {
    event_index: Scalars["bigint"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type SubscriptionRootTokenActivitiesV2StreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<TokenActivitiesV2StreamCursorInput>>;
    where?: InputMaybe<TokenActivitiesV2BoolExp>;
};
export type SubscriptionRootTokenDatasArgs = {
    distinct_on?: InputMaybe<Array<TokenDatasSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenDatasOrderBy>>;
    where?: InputMaybe<TokenDatasBoolExp>;
};
export type SubscriptionRootTokenDatasByPkArgs = {
    token_data_id_hash: Scalars["String"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type SubscriptionRootTokenDatasStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<TokenDatasStreamCursorInput>>;
    where?: InputMaybe<TokenDatasBoolExp>;
};
export type SubscriptionRootTokenOwnershipsArgs = {
    distinct_on?: InputMaybe<Array<TokenOwnershipsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokenOwnershipsOrderBy>>;
    where?: InputMaybe<TokenOwnershipsBoolExp>;
};
export type SubscriptionRootTokenOwnershipsByPkArgs = {
    property_version: Scalars["numeric"]["input"];
    table_handle: Scalars["String"]["input"];
    token_data_id_hash: Scalars["String"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type SubscriptionRootTokenOwnershipsStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<TokenOwnershipsStreamCursorInput>>;
    where?: InputMaybe<TokenOwnershipsBoolExp>;
};
export type SubscriptionRootTokensArgs = {
    distinct_on?: InputMaybe<Array<TokensSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<TokensOrderBy>>;
    where?: InputMaybe<TokensBoolExp>;
};
export type SubscriptionRootTokensByPkArgs = {
    property_version: Scalars["numeric"]["input"];
    token_data_id_hash: Scalars["String"]["input"];
    transaction_version: Scalars["bigint"]["input"];
};
export type SubscriptionRootTokensStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<TokensStreamCursorInput>>;
    where?: InputMaybe<TokensBoolExp>;
};
export type SubscriptionRootUserTransactionsArgs = {
    distinct_on?: InputMaybe<Array<UserTransactionsSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<UserTransactionsOrderBy>>;
    where?: InputMaybe<UserTransactionsBoolExp>;
};
export type SubscriptionRootUserTransactionsByPkArgs = {
    version: Scalars["bigint"]["input"];
};
export type SubscriptionRootUserTransactionsStreamArgs = {
    batch_size: Scalars["Int"]["input"];
    cursor: Array<InputMaybe<UserTransactionsStreamCursorInput>>;
    where?: InputMaybe<UserTransactionsBoolExp>;
};
export type TableItems = {
    decoded_key: Scalars["jsonb"]["output"];
    decoded_value?: Maybe<Scalars["jsonb"]["output"]>;
    key: Scalars["String"]["output"];
    table_handle: Scalars["String"]["output"];
    transaction_version: Scalars["bigint"]["output"];
    write_set_change_index: Scalars["bigint"]["output"];
};
export type TableItemsDecodedKeyArgs = {
    path?: InputMaybe<Scalars["String"]["input"]>;
};
export type TableItemsDecodedValueArgs = {
    path?: InputMaybe<Scalars["String"]["input"]>;
};
export type TableItemsBoolExp = {
    _and?: InputMaybe<Array<TableItemsBoolExp>>;
    _not?: InputMaybe<TableItemsBoolExp>;
    _or?: InputMaybe<Array<TableItemsBoolExp>>;
    decoded_key?: InputMaybe<JsonbComparisonExp>;
    decoded_value?: InputMaybe<JsonbComparisonExp>;
    key?: InputMaybe<StringComparisonExp>;
    table_handle?: InputMaybe<StringComparisonExp>;
    transaction_version?: InputMaybe<BigintComparisonExp>;
    write_set_change_index?: InputMaybe<BigintComparisonExp>;
};
export type TableItemsOrderBy = {
    decoded_key?: InputMaybe<OrderBy>;
    decoded_value?: InputMaybe<OrderBy>;
    key?: InputMaybe<OrderBy>;
    table_handle?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
    write_set_change_index?: InputMaybe<OrderBy>;
};
export declare enum TableItemsSelectColumn {
    DecodedKey = "decoded_key",
    DecodedValue = "decoded_value",
    Key = "key",
    TableHandle = "table_handle",
    TransactionVersion = "transaction_version",
    WriteSetChangeIndex = "write_set_change_index"
}
export type TableItemsStreamCursorInput = {
    initial_value: TableItemsStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type TableItemsStreamCursorValueInput = {
    decoded_key?: InputMaybe<Scalars["jsonb"]["input"]>;
    decoded_value?: InputMaybe<Scalars["jsonb"]["input"]>;
    key?: InputMaybe<Scalars["String"]["input"]>;
    table_handle?: InputMaybe<Scalars["String"]["input"]>;
    transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    write_set_change_index?: InputMaybe<Scalars["bigint"]["input"]>;
};
export type TableMetadatas = {
    handle: Scalars["String"]["output"];
    key_type: Scalars["String"]["output"];
    value_type: Scalars["String"]["output"];
};
export type TableMetadatasBoolExp = {
    _and?: InputMaybe<Array<TableMetadatasBoolExp>>;
    _not?: InputMaybe<TableMetadatasBoolExp>;
    _or?: InputMaybe<Array<TableMetadatasBoolExp>>;
    handle?: InputMaybe<StringComparisonExp>;
    key_type?: InputMaybe<StringComparisonExp>;
    value_type?: InputMaybe<StringComparisonExp>;
};
export type TableMetadatasOrderBy = {
    handle?: InputMaybe<OrderBy>;
    key_type?: InputMaybe<OrderBy>;
    value_type?: InputMaybe<OrderBy>;
};
export declare enum TableMetadatasSelectColumn {
    Handle = "handle",
    KeyType = "key_type",
    ValueType = "value_type"
}
export type TableMetadatasStreamCursorInput = {
    initial_value: TableMetadatasStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type TableMetadatasStreamCursorValueInput = {
    handle?: InputMaybe<Scalars["String"]["input"]>;
    key_type?: InputMaybe<Scalars["String"]["input"]>;
    value_type?: InputMaybe<Scalars["String"]["input"]>;
};
export type TimestampComparisonExp = {
    _eq?: InputMaybe<Scalars["timestamp"]["input"]>;
    _gt?: InputMaybe<Scalars["timestamp"]["input"]>;
    _gte?: InputMaybe<Scalars["timestamp"]["input"]>;
    _in?: InputMaybe<Array<Scalars["timestamp"]["input"]>>;
    _is_null?: InputMaybe<Scalars["Boolean"]["input"]>;
    _lt?: InputMaybe<Scalars["timestamp"]["input"]>;
    _lte?: InputMaybe<Scalars["timestamp"]["input"]>;
    _neq?: InputMaybe<Scalars["timestamp"]["input"]>;
    _nin?: InputMaybe<Array<Scalars["timestamp"]["input"]>>;
};
export type TimestamptzComparisonExp = {
    _eq?: InputMaybe<Scalars["timestamptz"]["input"]>;
    _gt?: InputMaybe<Scalars["timestamptz"]["input"]>;
    _gte?: InputMaybe<Scalars["timestamptz"]["input"]>;
    _in?: InputMaybe<Array<Scalars["timestamptz"]["input"]>>;
    _is_null?: InputMaybe<Scalars["Boolean"]["input"]>;
    _lt?: InputMaybe<Scalars["timestamptz"]["input"]>;
    _lte?: InputMaybe<Scalars["timestamptz"]["input"]>;
    _neq?: InputMaybe<Scalars["timestamptz"]["input"]>;
    _nin?: InputMaybe<Array<Scalars["timestamptz"]["input"]>>;
};
export type TokenActivities = {
    aptos_names_owner: Array<CurrentAptosNames>;
    aptos_names_owner_aggregate: CurrentAptosNamesAggregate;
    aptos_names_to: Array<CurrentAptosNames>;
    aptos_names_to_aggregate: CurrentAptosNamesAggregate;
    coin_amount?: Maybe<Scalars["numeric"]["output"]>;
    coin_type?: Maybe<Scalars["String"]["output"]>;
    collection_data_id_hash: Scalars["String"]["output"];
    collection_name: Scalars["String"]["output"];
    creator_address: Scalars["String"]["output"];
    current_token_data?: Maybe<CurrentTokenDatas>;
    event_account_address: Scalars["String"]["output"];
    event_creation_number: Scalars["bigint"]["output"];
    event_index?: Maybe<Scalars["bigint"]["output"]>;
    event_sequence_number: Scalars["bigint"]["output"];
    from_address?: Maybe<Scalars["String"]["output"]>;
    name: Scalars["String"]["output"];
    property_version: Scalars["numeric"]["output"];
    to_address?: Maybe<Scalars["String"]["output"]>;
    token_amount: Scalars["numeric"]["output"];
    token_data_id_hash: Scalars["String"]["output"];
    transaction_timestamp: Scalars["timestamp"]["output"];
    transaction_version: Scalars["bigint"]["output"];
    transfer_type: Scalars["String"]["output"];
};
export type TokenActivitiesAptosNamesOwnerArgs = {
    distinct_on?: InputMaybe<Array<CurrentAptosNamesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentAptosNamesOrderBy>>;
    where?: InputMaybe<CurrentAptosNamesBoolExp>;
};
export type TokenActivitiesAptosNamesOwnerAggregateArgs = {
    distinct_on?: InputMaybe<Array<CurrentAptosNamesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentAptosNamesOrderBy>>;
    where?: InputMaybe<CurrentAptosNamesBoolExp>;
};
export type TokenActivitiesAptosNamesToArgs = {
    distinct_on?: InputMaybe<Array<CurrentAptosNamesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentAptosNamesOrderBy>>;
    where?: InputMaybe<CurrentAptosNamesBoolExp>;
};
export type TokenActivitiesAptosNamesToAggregateArgs = {
    distinct_on?: InputMaybe<Array<CurrentAptosNamesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentAptosNamesOrderBy>>;
    where?: InputMaybe<CurrentAptosNamesBoolExp>;
};
export type TokenActivitiesAggregate = {
    aggregate?: Maybe<TokenActivitiesAggregateFields>;
    nodes: Array<TokenActivities>;
};
export type TokenActivitiesAggregateFields = {
    avg?: Maybe<TokenActivitiesAvgFields>;
    count: Scalars["Int"]["output"];
    max?: Maybe<TokenActivitiesMaxFields>;
    min?: Maybe<TokenActivitiesMinFields>;
    stddev?: Maybe<TokenActivitiesStddevFields>;
    stddev_pop?: Maybe<TokenActivitiesStddevPopFields>;
    stddev_samp?: Maybe<TokenActivitiesStddevSampFields>;
    sum?: Maybe<TokenActivitiesSumFields>;
    var_pop?: Maybe<TokenActivitiesVarPopFields>;
    var_samp?: Maybe<TokenActivitiesVarSampFields>;
    variance?: Maybe<TokenActivitiesVarianceFields>;
};
export type TokenActivitiesAggregateFieldsCountArgs = {
    columns?: InputMaybe<Array<TokenActivitiesSelectColumn>>;
    distinct?: InputMaybe<Scalars["Boolean"]["input"]>;
};
export type TokenActivitiesAggregateOrderBy = {
    avg?: InputMaybe<TokenActivitiesAvgOrderBy>;
    count?: InputMaybe<OrderBy>;
    max?: InputMaybe<TokenActivitiesMaxOrderBy>;
    min?: InputMaybe<TokenActivitiesMinOrderBy>;
    stddev?: InputMaybe<TokenActivitiesStddevOrderBy>;
    stddev_pop?: InputMaybe<TokenActivitiesStddevPopOrderBy>;
    stddev_samp?: InputMaybe<TokenActivitiesStddevSampOrderBy>;
    sum?: InputMaybe<TokenActivitiesSumOrderBy>;
    var_pop?: InputMaybe<TokenActivitiesVarPopOrderBy>;
    var_samp?: InputMaybe<TokenActivitiesVarSampOrderBy>;
    variance?: InputMaybe<TokenActivitiesVarianceOrderBy>;
};
export type TokenActivitiesAvgFields = {
    coin_amount?: Maybe<Scalars["Float"]["output"]>;
    event_creation_number?: Maybe<Scalars["Float"]["output"]>;
    event_index?: Maybe<Scalars["Float"]["output"]>;
    event_sequence_number?: Maybe<Scalars["Float"]["output"]>;
    property_version?: Maybe<Scalars["Float"]["output"]>;
    token_amount?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type TokenActivitiesAvgOrderBy = {
    coin_amount?: InputMaybe<OrderBy>;
    event_creation_number?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_sequence_number?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type TokenActivitiesBoolExp = {
    _and?: InputMaybe<Array<TokenActivitiesBoolExp>>;
    _not?: InputMaybe<TokenActivitiesBoolExp>;
    _or?: InputMaybe<Array<TokenActivitiesBoolExp>>;
    aptos_names_owner?: InputMaybe<CurrentAptosNamesBoolExp>;
    aptos_names_to?: InputMaybe<CurrentAptosNamesBoolExp>;
    coin_amount?: InputMaybe<NumericComparisonExp>;
    coin_type?: InputMaybe<StringComparisonExp>;
    collection_data_id_hash?: InputMaybe<StringComparisonExp>;
    collection_name?: InputMaybe<StringComparisonExp>;
    creator_address?: InputMaybe<StringComparisonExp>;
    current_token_data?: InputMaybe<CurrentTokenDatasBoolExp>;
    event_account_address?: InputMaybe<StringComparisonExp>;
    event_creation_number?: InputMaybe<BigintComparisonExp>;
    event_index?: InputMaybe<BigintComparisonExp>;
    event_sequence_number?: InputMaybe<BigintComparisonExp>;
    from_address?: InputMaybe<StringComparisonExp>;
    name?: InputMaybe<StringComparisonExp>;
    property_version?: InputMaybe<NumericComparisonExp>;
    to_address?: InputMaybe<StringComparisonExp>;
    token_amount?: InputMaybe<NumericComparisonExp>;
    token_data_id_hash?: InputMaybe<StringComparisonExp>;
    transaction_timestamp?: InputMaybe<TimestampComparisonExp>;
    transaction_version?: InputMaybe<BigintComparisonExp>;
    transfer_type?: InputMaybe<StringComparisonExp>;
};
export type TokenActivitiesMaxFields = {
    coin_amount?: Maybe<Scalars["numeric"]["output"]>;
    coin_type?: Maybe<Scalars["String"]["output"]>;
    collection_data_id_hash?: Maybe<Scalars["String"]["output"]>;
    collection_name?: Maybe<Scalars["String"]["output"]>;
    creator_address?: Maybe<Scalars["String"]["output"]>;
    event_account_address?: Maybe<Scalars["String"]["output"]>;
    event_creation_number?: Maybe<Scalars["bigint"]["output"]>;
    event_index?: Maybe<Scalars["bigint"]["output"]>;
    event_sequence_number?: Maybe<Scalars["bigint"]["output"]>;
    from_address?: Maybe<Scalars["String"]["output"]>;
    name?: Maybe<Scalars["String"]["output"]>;
    property_version?: Maybe<Scalars["numeric"]["output"]>;
    to_address?: Maybe<Scalars["String"]["output"]>;
    token_amount?: Maybe<Scalars["numeric"]["output"]>;
    token_data_id_hash?: Maybe<Scalars["String"]["output"]>;
    transaction_timestamp?: Maybe<Scalars["timestamp"]["output"]>;
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
    transfer_type?: Maybe<Scalars["String"]["output"]>;
};
export type TokenActivitiesMaxOrderBy = {
    coin_amount?: InputMaybe<OrderBy>;
    coin_type?: InputMaybe<OrderBy>;
    collection_data_id_hash?: InputMaybe<OrderBy>;
    collection_name?: InputMaybe<OrderBy>;
    creator_address?: InputMaybe<OrderBy>;
    event_account_address?: InputMaybe<OrderBy>;
    event_creation_number?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_sequence_number?: InputMaybe<OrderBy>;
    from_address?: InputMaybe<OrderBy>;
    name?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
    to_address?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    token_data_id_hash?: InputMaybe<OrderBy>;
    transaction_timestamp?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
    transfer_type?: InputMaybe<OrderBy>;
};
export type TokenActivitiesMinFields = {
    coin_amount?: Maybe<Scalars["numeric"]["output"]>;
    coin_type?: Maybe<Scalars["String"]["output"]>;
    collection_data_id_hash?: Maybe<Scalars["String"]["output"]>;
    collection_name?: Maybe<Scalars["String"]["output"]>;
    creator_address?: Maybe<Scalars["String"]["output"]>;
    event_account_address?: Maybe<Scalars["String"]["output"]>;
    event_creation_number?: Maybe<Scalars["bigint"]["output"]>;
    event_index?: Maybe<Scalars["bigint"]["output"]>;
    event_sequence_number?: Maybe<Scalars["bigint"]["output"]>;
    from_address?: Maybe<Scalars["String"]["output"]>;
    name?: Maybe<Scalars["String"]["output"]>;
    property_version?: Maybe<Scalars["numeric"]["output"]>;
    to_address?: Maybe<Scalars["String"]["output"]>;
    token_amount?: Maybe<Scalars["numeric"]["output"]>;
    token_data_id_hash?: Maybe<Scalars["String"]["output"]>;
    transaction_timestamp?: Maybe<Scalars["timestamp"]["output"]>;
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
    transfer_type?: Maybe<Scalars["String"]["output"]>;
};
export type TokenActivitiesMinOrderBy = {
    coin_amount?: InputMaybe<OrderBy>;
    coin_type?: InputMaybe<OrderBy>;
    collection_data_id_hash?: InputMaybe<OrderBy>;
    collection_name?: InputMaybe<OrderBy>;
    creator_address?: InputMaybe<OrderBy>;
    event_account_address?: InputMaybe<OrderBy>;
    event_creation_number?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_sequence_number?: InputMaybe<OrderBy>;
    from_address?: InputMaybe<OrderBy>;
    name?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
    to_address?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    token_data_id_hash?: InputMaybe<OrderBy>;
    transaction_timestamp?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
    transfer_type?: InputMaybe<OrderBy>;
};
export type TokenActivitiesOrderBy = {
    aptos_names_owner_aggregate?: InputMaybe<CurrentAptosNamesAggregateOrderBy>;
    aptos_names_to_aggregate?: InputMaybe<CurrentAptosNamesAggregateOrderBy>;
    coin_amount?: InputMaybe<OrderBy>;
    coin_type?: InputMaybe<OrderBy>;
    collection_data_id_hash?: InputMaybe<OrderBy>;
    collection_name?: InputMaybe<OrderBy>;
    creator_address?: InputMaybe<OrderBy>;
    current_token_data?: InputMaybe<CurrentTokenDatasOrderBy>;
    event_account_address?: InputMaybe<OrderBy>;
    event_creation_number?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_sequence_number?: InputMaybe<OrderBy>;
    from_address?: InputMaybe<OrderBy>;
    name?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
    to_address?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    token_data_id_hash?: InputMaybe<OrderBy>;
    transaction_timestamp?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
    transfer_type?: InputMaybe<OrderBy>;
};
export declare enum TokenActivitiesSelectColumn {
    CoinAmount = "coin_amount",
    CoinType = "coin_type",
    CollectionDataIdHash = "collection_data_id_hash",
    CollectionName = "collection_name",
    CreatorAddress = "creator_address",
    EventAccountAddress = "event_account_address",
    EventCreationNumber = "event_creation_number",
    EventIndex = "event_index",
    EventSequenceNumber = "event_sequence_number",
    FromAddress = "from_address",
    Name = "name",
    PropertyVersion = "property_version",
    ToAddress = "to_address",
    TokenAmount = "token_amount",
    TokenDataIdHash = "token_data_id_hash",
    TransactionTimestamp = "transaction_timestamp",
    TransactionVersion = "transaction_version",
    TransferType = "transfer_type"
}
export type TokenActivitiesStddevFields = {
    coin_amount?: Maybe<Scalars["Float"]["output"]>;
    event_creation_number?: Maybe<Scalars["Float"]["output"]>;
    event_index?: Maybe<Scalars["Float"]["output"]>;
    event_sequence_number?: Maybe<Scalars["Float"]["output"]>;
    property_version?: Maybe<Scalars["Float"]["output"]>;
    token_amount?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type TokenActivitiesStddevOrderBy = {
    coin_amount?: InputMaybe<OrderBy>;
    event_creation_number?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_sequence_number?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type TokenActivitiesStddevPopFields = {
    coin_amount?: Maybe<Scalars["Float"]["output"]>;
    event_creation_number?: Maybe<Scalars["Float"]["output"]>;
    event_index?: Maybe<Scalars["Float"]["output"]>;
    event_sequence_number?: Maybe<Scalars["Float"]["output"]>;
    property_version?: Maybe<Scalars["Float"]["output"]>;
    token_amount?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type TokenActivitiesStddevPopOrderBy = {
    coin_amount?: InputMaybe<OrderBy>;
    event_creation_number?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_sequence_number?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type TokenActivitiesStddevSampFields = {
    coin_amount?: Maybe<Scalars["Float"]["output"]>;
    event_creation_number?: Maybe<Scalars["Float"]["output"]>;
    event_index?: Maybe<Scalars["Float"]["output"]>;
    event_sequence_number?: Maybe<Scalars["Float"]["output"]>;
    property_version?: Maybe<Scalars["Float"]["output"]>;
    token_amount?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type TokenActivitiesStddevSampOrderBy = {
    coin_amount?: InputMaybe<OrderBy>;
    event_creation_number?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_sequence_number?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type TokenActivitiesStreamCursorInput = {
    initial_value: TokenActivitiesStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type TokenActivitiesStreamCursorValueInput = {
    coin_amount?: InputMaybe<Scalars["numeric"]["input"]>;
    coin_type?: InputMaybe<Scalars["String"]["input"]>;
    collection_data_id_hash?: InputMaybe<Scalars["String"]["input"]>;
    collection_name?: InputMaybe<Scalars["String"]["input"]>;
    creator_address?: InputMaybe<Scalars["String"]["input"]>;
    event_account_address?: InputMaybe<Scalars["String"]["input"]>;
    event_creation_number?: InputMaybe<Scalars["bigint"]["input"]>;
    event_index?: InputMaybe<Scalars["bigint"]["input"]>;
    event_sequence_number?: InputMaybe<Scalars["bigint"]["input"]>;
    from_address?: InputMaybe<Scalars["String"]["input"]>;
    name?: InputMaybe<Scalars["String"]["input"]>;
    property_version?: InputMaybe<Scalars["numeric"]["input"]>;
    to_address?: InputMaybe<Scalars["String"]["input"]>;
    token_amount?: InputMaybe<Scalars["numeric"]["input"]>;
    token_data_id_hash?: InputMaybe<Scalars["String"]["input"]>;
    transaction_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    transfer_type?: InputMaybe<Scalars["String"]["input"]>;
};
export type TokenActivitiesSumFields = {
    coin_amount?: Maybe<Scalars["numeric"]["output"]>;
    event_creation_number?: Maybe<Scalars["bigint"]["output"]>;
    event_index?: Maybe<Scalars["bigint"]["output"]>;
    event_sequence_number?: Maybe<Scalars["bigint"]["output"]>;
    property_version?: Maybe<Scalars["numeric"]["output"]>;
    token_amount?: Maybe<Scalars["numeric"]["output"]>;
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
};
export type TokenActivitiesSumOrderBy = {
    coin_amount?: InputMaybe<OrderBy>;
    event_creation_number?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_sequence_number?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type TokenActivitiesV2 = {
    after_value?: Maybe<Scalars["String"]["output"]>;
    aptos_names_from: Array<CurrentAptosNames>;
    aptos_names_from_aggregate: CurrentAptosNamesAggregate;
    aptos_names_to: Array<CurrentAptosNames>;
    aptos_names_to_aggregate: CurrentAptosNamesAggregate;
    before_value?: Maybe<Scalars["String"]["output"]>;
    current_token_data?: Maybe<CurrentTokenDatasV2>;
    entry_function_id_str?: Maybe<Scalars["String"]["output"]>;
    event_account_address: Scalars["String"]["output"];
    event_index: Scalars["bigint"]["output"];
    from_address?: Maybe<Scalars["String"]["output"]>;
    is_fungible_v2?: Maybe<Scalars["Boolean"]["output"]>;
    property_version_v1: Scalars["numeric"]["output"];
    to_address?: Maybe<Scalars["String"]["output"]>;
    token_amount: Scalars["numeric"]["output"];
    token_data_id: Scalars["String"]["output"];
    token_standard: Scalars["String"]["output"];
    transaction_timestamp: Scalars["timestamp"]["output"];
    transaction_version: Scalars["bigint"]["output"];
    type: Scalars["String"]["output"];
};
export type TokenActivitiesV2AptosNamesFromArgs = {
    distinct_on?: InputMaybe<Array<CurrentAptosNamesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentAptosNamesOrderBy>>;
    where?: InputMaybe<CurrentAptosNamesBoolExp>;
};
export type TokenActivitiesV2AptosNamesFromAggregateArgs = {
    distinct_on?: InputMaybe<Array<CurrentAptosNamesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentAptosNamesOrderBy>>;
    where?: InputMaybe<CurrentAptosNamesBoolExp>;
};
export type TokenActivitiesV2AptosNamesToArgs = {
    distinct_on?: InputMaybe<Array<CurrentAptosNamesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentAptosNamesOrderBy>>;
    where?: InputMaybe<CurrentAptosNamesBoolExp>;
};
export type TokenActivitiesV2AptosNamesToAggregateArgs = {
    distinct_on?: InputMaybe<Array<CurrentAptosNamesSelectColumn>>;
    limit?: InputMaybe<Scalars["Int"]["input"]>;
    offset?: InputMaybe<Scalars["Int"]["input"]>;
    order_by?: InputMaybe<Array<CurrentAptosNamesOrderBy>>;
    where?: InputMaybe<CurrentAptosNamesBoolExp>;
};
export type TokenActivitiesV2Aggregate = {
    aggregate?: Maybe<TokenActivitiesV2AggregateFields>;
    nodes: Array<TokenActivitiesV2>;
};
export type TokenActivitiesV2AggregateFields = {
    avg?: Maybe<TokenActivitiesV2AvgFields>;
    count: Scalars["Int"]["output"];
    max?: Maybe<TokenActivitiesV2MaxFields>;
    min?: Maybe<TokenActivitiesV2MinFields>;
    stddev?: Maybe<TokenActivitiesV2StddevFields>;
    stddev_pop?: Maybe<TokenActivitiesV2StddevPopFields>;
    stddev_samp?: Maybe<TokenActivitiesV2StddevSampFields>;
    sum?: Maybe<TokenActivitiesV2SumFields>;
    var_pop?: Maybe<TokenActivitiesV2VarPopFields>;
    var_samp?: Maybe<TokenActivitiesV2VarSampFields>;
    variance?: Maybe<TokenActivitiesV2VarianceFields>;
};
export type TokenActivitiesV2AggregateFieldsCountArgs = {
    columns?: InputMaybe<Array<TokenActivitiesV2SelectColumn>>;
    distinct?: InputMaybe<Scalars["Boolean"]["input"]>;
};
export type TokenActivitiesV2AggregateOrderBy = {
    avg?: InputMaybe<TokenActivitiesV2AvgOrderBy>;
    count?: InputMaybe<OrderBy>;
    max?: InputMaybe<TokenActivitiesV2MaxOrderBy>;
    min?: InputMaybe<TokenActivitiesV2MinOrderBy>;
    stddev?: InputMaybe<TokenActivitiesV2StddevOrderBy>;
    stddev_pop?: InputMaybe<TokenActivitiesV2StddevPopOrderBy>;
    stddev_samp?: InputMaybe<TokenActivitiesV2StddevSampOrderBy>;
    sum?: InputMaybe<TokenActivitiesV2SumOrderBy>;
    var_pop?: InputMaybe<TokenActivitiesV2VarPopOrderBy>;
    var_samp?: InputMaybe<TokenActivitiesV2VarSampOrderBy>;
    variance?: InputMaybe<TokenActivitiesV2VarianceOrderBy>;
};
export type TokenActivitiesV2AvgFields = {
    event_index?: Maybe<Scalars["Float"]["output"]>;
    property_version_v1?: Maybe<Scalars["Float"]["output"]>;
    token_amount?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type TokenActivitiesV2AvgOrderBy = {
    event_index?: InputMaybe<OrderBy>;
    property_version_v1?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type TokenActivitiesV2BoolExp = {
    _and?: InputMaybe<Array<TokenActivitiesV2BoolExp>>;
    _not?: InputMaybe<TokenActivitiesV2BoolExp>;
    _or?: InputMaybe<Array<TokenActivitiesV2BoolExp>>;
    after_value?: InputMaybe<StringComparisonExp>;
    aptos_names_from?: InputMaybe<CurrentAptosNamesBoolExp>;
    aptos_names_to?: InputMaybe<CurrentAptosNamesBoolExp>;
    before_value?: InputMaybe<StringComparisonExp>;
    current_token_data?: InputMaybe<CurrentTokenDatasV2BoolExp>;
    entry_function_id_str?: InputMaybe<StringComparisonExp>;
    event_account_address?: InputMaybe<StringComparisonExp>;
    event_index?: InputMaybe<BigintComparisonExp>;
    from_address?: InputMaybe<StringComparisonExp>;
    is_fungible_v2?: InputMaybe<BooleanComparisonExp>;
    property_version_v1?: InputMaybe<NumericComparisonExp>;
    to_address?: InputMaybe<StringComparisonExp>;
    token_amount?: InputMaybe<NumericComparisonExp>;
    token_data_id?: InputMaybe<StringComparisonExp>;
    token_standard?: InputMaybe<StringComparisonExp>;
    transaction_timestamp?: InputMaybe<TimestampComparisonExp>;
    transaction_version?: InputMaybe<BigintComparisonExp>;
    type?: InputMaybe<StringComparisonExp>;
};
export type TokenActivitiesV2MaxFields = {
    after_value?: Maybe<Scalars["String"]["output"]>;
    before_value?: Maybe<Scalars["String"]["output"]>;
    entry_function_id_str?: Maybe<Scalars["String"]["output"]>;
    event_account_address?: Maybe<Scalars["String"]["output"]>;
    event_index?: Maybe<Scalars["bigint"]["output"]>;
    from_address?: Maybe<Scalars["String"]["output"]>;
    property_version_v1?: Maybe<Scalars["numeric"]["output"]>;
    to_address?: Maybe<Scalars["String"]["output"]>;
    token_amount?: Maybe<Scalars["numeric"]["output"]>;
    token_data_id?: Maybe<Scalars["String"]["output"]>;
    token_standard?: Maybe<Scalars["String"]["output"]>;
    transaction_timestamp?: Maybe<Scalars["timestamp"]["output"]>;
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
    type?: Maybe<Scalars["String"]["output"]>;
};
export type TokenActivitiesV2MaxOrderBy = {
    after_value?: InputMaybe<OrderBy>;
    before_value?: InputMaybe<OrderBy>;
    entry_function_id_str?: InputMaybe<OrderBy>;
    event_account_address?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    from_address?: InputMaybe<OrderBy>;
    property_version_v1?: InputMaybe<OrderBy>;
    to_address?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    token_data_id?: InputMaybe<OrderBy>;
    token_standard?: InputMaybe<OrderBy>;
    transaction_timestamp?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
    type?: InputMaybe<OrderBy>;
};
export type TokenActivitiesV2MinFields = {
    after_value?: Maybe<Scalars["String"]["output"]>;
    before_value?: Maybe<Scalars["String"]["output"]>;
    entry_function_id_str?: Maybe<Scalars["String"]["output"]>;
    event_account_address?: Maybe<Scalars["String"]["output"]>;
    event_index?: Maybe<Scalars["bigint"]["output"]>;
    from_address?: Maybe<Scalars["String"]["output"]>;
    property_version_v1?: Maybe<Scalars["numeric"]["output"]>;
    to_address?: Maybe<Scalars["String"]["output"]>;
    token_amount?: Maybe<Scalars["numeric"]["output"]>;
    token_data_id?: Maybe<Scalars["String"]["output"]>;
    token_standard?: Maybe<Scalars["String"]["output"]>;
    transaction_timestamp?: Maybe<Scalars["timestamp"]["output"]>;
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
    type?: Maybe<Scalars["String"]["output"]>;
};
export type TokenActivitiesV2MinOrderBy = {
    after_value?: InputMaybe<OrderBy>;
    before_value?: InputMaybe<OrderBy>;
    entry_function_id_str?: InputMaybe<OrderBy>;
    event_account_address?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    from_address?: InputMaybe<OrderBy>;
    property_version_v1?: InputMaybe<OrderBy>;
    to_address?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    token_data_id?: InputMaybe<OrderBy>;
    token_standard?: InputMaybe<OrderBy>;
    transaction_timestamp?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
    type?: InputMaybe<OrderBy>;
};
export type TokenActivitiesV2OrderBy = {
    after_value?: InputMaybe<OrderBy>;
    aptos_names_from_aggregate?: InputMaybe<CurrentAptosNamesAggregateOrderBy>;
    aptos_names_to_aggregate?: InputMaybe<CurrentAptosNamesAggregateOrderBy>;
    before_value?: InputMaybe<OrderBy>;
    current_token_data?: InputMaybe<CurrentTokenDatasV2OrderBy>;
    entry_function_id_str?: InputMaybe<OrderBy>;
    event_account_address?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    from_address?: InputMaybe<OrderBy>;
    is_fungible_v2?: InputMaybe<OrderBy>;
    property_version_v1?: InputMaybe<OrderBy>;
    to_address?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    token_data_id?: InputMaybe<OrderBy>;
    token_standard?: InputMaybe<OrderBy>;
    transaction_timestamp?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
    type?: InputMaybe<OrderBy>;
};
export declare enum TokenActivitiesV2SelectColumn {
    AfterValue = "after_value",
    BeforeValue = "before_value",
    EntryFunctionIdStr = "entry_function_id_str",
    EventAccountAddress = "event_account_address",
    EventIndex = "event_index",
    FromAddress = "from_address",
    IsFungibleV2 = "is_fungible_v2",
    PropertyVersionV1 = "property_version_v1",
    ToAddress = "to_address",
    TokenAmount = "token_amount",
    TokenDataId = "token_data_id",
    TokenStandard = "token_standard",
    TransactionTimestamp = "transaction_timestamp",
    TransactionVersion = "transaction_version",
    Type = "type"
}
export type TokenActivitiesV2StddevFields = {
    event_index?: Maybe<Scalars["Float"]["output"]>;
    property_version_v1?: Maybe<Scalars["Float"]["output"]>;
    token_amount?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type TokenActivitiesV2StddevOrderBy = {
    event_index?: InputMaybe<OrderBy>;
    property_version_v1?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type TokenActivitiesV2StddevPopFields = {
    event_index?: Maybe<Scalars["Float"]["output"]>;
    property_version_v1?: Maybe<Scalars["Float"]["output"]>;
    token_amount?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type TokenActivitiesV2StddevPopOrderBy = {
    event_index?: InputMaybe<OrderBy>;
    property_version_v1?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type TokenActivitiesV2StddevSampFields = {
    event_index?: Maybe<Scalars["Float"]["output"]>;
    property_version_v1?: Maybe<Scalars["Float"]["output"]>;
    token_amount?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type TokenActivitiesV2StddevSampOrderBy = {
    event_index?: InputMaybe<OrderBy>;
    property_version_v1?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type TokenActivitiesV2StreamCursorInput = {
    initial_value: TokenActivitiesV2StreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type TokenActivitiesV2StreamCursorValueInput = {
    after_value?: InputMaybe<Scalars["String"]["input"]>;
    before_value?: InputMaybe<Scalars["String"]["input"]>;
    entry_function_id_str?: InputMaybe<Scalars["String"]["input"]>;
    event_account_address?: InputMaybe<Scalars["String"]["input"]>;
    event_index?: InputMaybe<Scalars["bigint"]["input"]>;
    from_address?: InputMaybe<Scalars["String"]["input"]>;
    is_fungible_v2?: InputMaybe<Scalars["Boolean"]["input"]>;
    property_version_v1?: InputMaybe<Scalars["numeric"]["input"]>;
    to_address?: InputMaybe<Scalars["String"]["input"]>;
    token_amount?: InputMaybe<Scalars["numeric"]["input"]>;
    token_data_id?: InputMaybe<Scalars["String"]["input"]>;
    token_standard?: InputMaybe<Scalars["String"]["input"]>;
    transaction_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    type?: InputMaybe<Scalars["String"]["input"]>;
};
export type TokenActivitiesV2SumFields = {
    event_index?: Maybe<Scalars["bigint"]["output"]>;
    property_version_v1?: Maybe<Scalars["numeric"]["output"]>;
    token_amount?: Maybe<Scalars["numeric"]["output"]>;
    transaction_version?: Maybe<Scalars["bigint"]["output"]>;
};
export type TokenActivitiesV2SumOrderBy = {
    event_index?: InputMaybe<OrderBy>;
    property_version_v1?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type TokenActivitiesV2VarPopFields = {
    event_index?: Maybe<Scalars["Float"]["output"]>;
    property_version_v1?: Maybe<Scalars["Float"]["output"]>;
    token_amount?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type TokenActivitiesV2VarPopOrderBy = {
    event_index?: InputMaybe<OrderBy>;
    property_version_v1?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type TokenActivitiesV2VarSampFields = {
    event_index?: Maybe<Scalars["Float"]["output"]>;
    property_version_v1?: Maybe<Scalars["Float"]["output"]>;
    token_amount?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type TokenActivitiesV2VarSampOrderBy = {
    event_index?: InputMaybe<OrderBy>;
    property_version_v1?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type TokenActivitiesV2VarianceFields = {
    event_index?: Maybe<Scalars["Float"]["output"]>;
    property_version_v1?: Maybe<Scalars["Float"]["output"]>;
    token_amount?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type TokenActivitiesV2VarianceOrderBy = {
    event_index?: InputMaybe<OrderBy>;
    property_version_v1?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type TokenActivitiesVarPopFields = {
    coin_amount?: Maybe<Scalars["Float"]["output"]>;
    event_creation_number?: Maybe<Scalars["Float"]["output"]>;
    event_index?: Maybe<Scalars["Float"]["output"]>;
    event_sequence_number?: Maybe<Scalars["Float"]["output"]>;
    property_version?: Maybe<Scalars["Float"]["output"]>;
    token_amount?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type TokenActivitiesVarPopOrderBy = {
    coin_amount?: InputMaybe<OrderBy>;
    event_creation_number?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_sequence_number?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type TokenActivitiesVarSampFields = {
    coin_amount?: Maybe<Scalars["Float"]["output"]>;
    event_creation_number?: Maybe<Scalars["Float"]["output"]>;
    event_index?: Maybe<Scalars["Float"]["output"]>;
    event_sequence_number?: Maybe<Scalars["Float"]["output"]>;
    property_version?: Maybe<Scalars["Float"]["output"]>;
    token_amount?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type TokenActivitiesVarSampOrderBy = {
    coin_amount?: InputMaybe<OrderBy>;
    event_creation_number?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_sequence_number?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type TokenActivitiesVarianceFields = {
    coin_amount?: Maybe<Scalars["Float"]["output"]>;
    event_creation_number?: Maybe<Scalars["Float"]["output"]>;
    event_index?: Maybe<Scalars["Float"]["output"]>;
    event_sequence_number?: Maybe<Scalars["Float"]["output"]>;
    property_version?: Maybe<Scalars["Float"]["output"]>;
    token_amount?: Maybe<Scalars["Float"]["output"]>;
    transaction_version?: Maybe<Scalars["Float"]["output"]>;
};
export type TokenActivitiesVarianceOrderBy = {
    coin_amount?: InputMaybe<OrderBy>;
    event_creation_number?: InputMaybe<OrderBy>;
    event_index?: InputMaybe<OrderBy>;
    event_sequence_number?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
    token_amount?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export type TokenDatas = {
    collection_data_id_hash: Scalars["String"]["output"];
    collection_name: Scalars["String"]["output"];
    creator_address: Scalars["String"]["output"];
    default_properties: Scalars["jsonb"]["output"];
    description: Scalars["String"]["output"];
    description_mutable: Scalars["Boolean"]["output"];
    largest_property_version: Scalars["numeric"]["output"];
    maximum: Scalars["numeric"]["output"];
    maximum_mutable: Scalars["Boolean"]["output"];
    metadata_uri: Scalars["String"]["output"];
    name: Scalars["String"]["output"];
    payee_address: Scalars["String"]["output"];
    properties_mutable: Scalars["Boolean"]["output"];
    royalty_mutable: Scalars["Boolean"]["output"];
    royalty_points_denominator: Scalars["numeric"]["output"];
    royalty_points_numerator: Scalars["numeric"]["output"];
    supply: Scalars["numeric"]["output"];
    token_data_id_hash: Scalars["String"]["output"];
    transaction_timestamp: Scalars["timestamp"]["output"];
    transaction_version: Scalars["bigint"]["output"];
    uri_mutable: Scalars["Boolean"]["output"];
};
export type TokenDatasDefaultPropertiesArgs = {
    path?: InputMaybe<Scalars["String"]["input"]>;
};
export type TokenDatasBoolExp = {
    _and?: InputMaybe<Array<TokenDatasBoolExp>>;
    _not?: InputMaybe<TokenDatasBoolExp>;
    _or?: InputMaybe<Array<TokenDatasBoolExp>>;
    collection_data_id_hash?: InputMaybe<StringComparisonExp>;
    collection_name?: InputMaybe<StringComparisonExp>;
    creator_address?: InputMaybe<StringComparisonExp>;
    default_properties?: InputMaybe<JsonbComparisonExp>;
    description?: InputMaybe<StringComparisonExp>;
    description_mutable?: InputMaybe<BooleanComparisonExp>;
    largest_property_version?: InputMaybe<NumericComparisonExp>;
    maximum?: InputMaybe<NumericComparisonExp>;
    maximum_mutable?: InputMaybe<BooleanComparisonExp>;
    metadata_uri?: InputMaybe<StringComparisonExp>;
    name?: InputMaybe<StringComparisonExp>;
    payee_address?: InputMaybe<StringComparisonExp>;
    properties_mutable?: InputMaybe<BooleanComparisonExp>;
    royalty_mutable?: InputMaybe<BooleanComparisonExp>;
    royalty_points_denominator?: InputMaybe<NumericComparisonExp>;
    royalty_points_numerator?: InputMaybe<NumericComparisonExp>;
    supply?: InputMaybe<NumericComparisonExp>;
    token_data_id_hash?: InputMaybe<StringComparisonExp>;
    transaction_timestamp?: InputMaybe<TimestampComparisonExp>;
    transaction_version?: InputMaybe<BigintComparisonExp>;
    uri_mutable?: InputMaybe<BooleanComparisonExp>;
};
export type TokenDatasOrderBy = {
    collection_data_id_hash?: InputMaybe<OrderBy>;
    collection_name?: InputMaybe<OrderBy>;
    creator_address?: InputMaybe<OrderBy>;
    default_properties?: InputMaybe<OrderBy>;
    description?: InputMaybe<OrderBy>;
    description_mutable?: InputMaybe<OrderBy>;
    largest_property_version?: InputMaybe<OrderBy>;
    maximum?: InputMaybe<OrderBy>;
    maximum_mutable?: InputMaybe<OrderBy>;
    metadata_uri?: InputMaybe<OrderBy>;
    name?: InputMaybe<OrderBy>;
    payee_address?: InputMaybe<OrderBy>;
    properties_mutable?: InputMaybe<OrderBy>;
    royalty_mutable?: InputMaybe<OrderBy>;
    royalty_points_denominator?: InputMaybe<OrderBy>;
    royalty_points_numerator?: InputMaybe<OrderBy>;
    supply?: InputMaybe<OrderBy>;
    token_data_id_hash?: InputMaybe<OrderBy>;
    transaction_timestamp?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
    uri_mutable?: InputMaybe<OrderBy>;
};
export declare enum TokenDatasSelectColumn {
    CollectionDataIdHash = "collection_data_id_hash",
    CollectionName = "collection_name",
    CreatorAddress = "creator_address",
    DefaultProperties = "default_properties",
    Description = "description",
    DescriptionMutable = "description_mutable",
    LargestPropertyVersion = "largest_property_version",
    Maximum = "maximum",
    MaximumMutable = "maximum_mutable",
    MetadataUri = "metadata_uri",
    Name = "name",
    PayeeAddress = "payee_address",
    PropertiesMutable = "properties_mutable",
    RoyaltyMutable = "royalty_mutable",
    RoyaltyPointsDenominator = "royalty_points_denominator",
    RoyaltyPointsNumerator = "royalty_points_numerator",
    Supply = "supply",
    TokenDataIdHash = "token_data_id_hash",
    TransactionTimestamp = "transaction_timestamp",
    TransactionVersion = "transaction_version",
    UriMutable = "uri_mutable"
}
export type TokenDatasStreamCursorInput = {
    initial_value: TokenDatasStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type TokenDatasStreamCursorValueInput = {
    collection_data_id_hash?: InputMaybe<Scalars["String"]["input"]>;
    collection_name?: InputMaybe<Scalars["String"]["input"]>;
    creator_address?: InputMaybe<Scalars["String"]["input"]>;
    default_properties?: InputMaybe<Scalars["jsonb"]["input"]>;
    description?: InputMaybe<Scalars["String"]["input"]>;
    description_mutable?: InputMaybe<Scalars["Boolean"]["input"]>;
    largest_property_version?: InputMaybe<Scalars["numeric"]["input"]>;
    maximum?: InputMaybe<Scalars["numeric"]["input"]>;
    maximum_mutable?: InputMaybe<Scalars["Boolean"]["input"]>;
    metadata_uri?: InputMaybe<Scalars["String"]["input"]>;
    name?: InputMaybe<Scalars["String"]["input"]>;
    payee_address?: InputMaybe<Scalars["String"]["input"]>;
    properties_mutable?: InputMaybe<Scalars["Boolean"]["input"]>;
    royalty_mutable?: InputMaybe<Scalars["Boolean"]["input"]>;
    royalty_points_denominator?: InputMaybe<Scalars["numeric"]["input"]>;
    royalty_points_numerator?: InputMaybe<Scalars["numeric"]["input"]>;
    supply?: InputMaybe<Scalars["numeric"]["input"]>;
    token_data_id_hash?: InputMaybe<Scalars["String"]["input"]>;
    transaction_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
    uri_mutable?: InputMaybe<Scalars["Boolean"]["input"]>;
};
export type TokenOwnerships = {
    amount: Scalars["numeric"]["output"];
    collection_data_id_hash: Scalars["String"]["output"];
    collection_name: Scalars["String"]["output"];
    creator_address: Scalars["String"]["output"];
    name: Scalars["String"]["output"];
    owner_address?: Maybe<Scalars["String"]["output"]>;
    property_version: Scalars["numeric"]["output"];
    table_handle: Scalars["String"]["output"];
    table_type?: Maybe<Scalars["String"]["output"]>;
    token_data_id_hash: Scalars["String"]["output"];
    transaction_timestamp: Scalars["timestamp"]["output"];
    transaction_version: Scalars["bigint"]["output"];
};
export type TokenOwnershipsBoolExp = {
    _and?: InputMaybe<Array<TokenOwnershipsBoolExp>>;
    _not?: InputMaybe<TokenOwnershipsBoolExp>;
    _or?: InputMaybe<Array<TokenOwnershipsBoolExp>>;
    amount?: InputMaybe<NumericComparisonExp>;
    collection_data_id_hash?: InputMaybe<StringComparisonExp>;
    collection_name?: InputMaybe<StringComparisonExp>;
    creator_address?: InputMaybe<StringComparisonExp>;
    name?: InputMaybe<StringComparisonExp>;
    owner_address?: InputMaybe<StringComparisonExp>;
    property_version?: InputMaybe<NumericComparisonExp>;
    table_handle?: InputMaybe<StringComparisonExp>;
    table_type?: InputMaybe<StringComparisonExp>;
    token_data_id_hash?: InputMaybe<StringComparisonExp>;
    transaction_timestamp?: InputMaybe<TimestampComparisonExp>;
    transaction_version?: InputMaybe<BigintComparisonExp>;
};
export type TokenOwnershipsOrderBy = {
    amount?: InputMaybe<OrderBy>;
    collection_data_id_hash?: InputMaybe<OrderBy>;
    collection_name?: InputMaybe<OrderBy>;
    creator_address?: InputMaybe<OrderBy>;
    name?: InputMaybe<OrderBy>;
    owner_address?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
    table_handle?: InputMaybe<OrderBy>;
    table_type?: InputMaybe<OrderBy>;
    token_data_id_hash?: InputMaybe<OrderBy>;
    transaction_timestamp?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export declare enum TokenOwnershipsSelectColumn {
    Amount = "amount",
    CollectionDataIdHash = "collection_data_id_hash",
    CollectionName = "collection_name",
    CreatorAddress = "creator_address",
    Name = "name",
    OwnerAddress = "owner_address",
    PropertyVersion = "property_version",
    TableHandle = "table_handle",
    TableType = "table_type",
    TokenDataIdHash = "token_data_id_hash",
    TransactionTimestamp = "transaction_timestamp",
    TransactionVersion = "transaction_version"
}
export type TokenOwnershipsStreamCursorInput = {
    initial_value: TokenOwnershipsStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type TokenOwnershipsStreamCursorValueInput = {
    amount?: InputMaybe<Scalars["numeric"]["input"]>;
    collection_data_id_hash?: InputMaybe<Scalars["String"]["input"]>;
    collection_name?: InputMaybe<Scalars["String"]["input"]>;
    creator_address?: InputMaybe<Scalars["String"]["input"]>;
    name?: InputMaybe<Scalars["String"]["input"]>;
    owner_address?: InputMaybe<Scalars["String"]["input"]>;
    property_version?: InputMaybe<Scalars["numeric"]["input"]>;
    table_handle?: InputMaybe<Scalars["String"]["input"]>;
    table_type?: InputMaybe<Scalars["String"]["input"]>;
    token_data_id_hash?: InputMaybe<Scalars["String"]["input"]>;
    transaction_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
};
export type Tokens = {
    collection_data_id_hash: Scalars["String"]["output"];
    collection_name: Scalars["String"]["output"];
    creator_address: Scalars["String"]["output"];
    name: Scalars["String"]["output"];
    property_version: Scalars["numeric"]["output"];
    token_data_id_hash: Scalars["String"]["output"];
    token_properties: Scalars["jsonb"]["output"];
    transaction_timestamp: Scalars["timestamp"]["output"];
    transaction_version: Scalars["bigint"]["output"];
};
export type TokensTokenPropertiesArgs = {
    path?: InputMaybe<Scalars["String"]["input"]>;
};
export type TokensBoolExp = {
    _and?: InputMaybe<Array<TokensBoolExp>>;
    _not?: InputMaybe<TokensBoolExp>;
    _or?: InputMaybe<Array<TokensBoolExp>>;
    collection_data_id_hash?: InputMaybe<StringComparisonExp>;
    collection_name?: InputMaybe<StringComparisonExp>;
    creator_address?: InputMaybe<StringComparisonExp>;
    name?: InputMaybe<StringComparisonExp>;
    property_version?: InputMaybe<NumericComparisonExp>;
    token_data_id_hash?: InputMaybe<StringComparisonExp>;
    token_properties?: InputMaybe<JsonbComparisonExp>;
    transaction_timestamp?: InputMaybe<TimestampComparisonExp>;
    transaction_version?: InputMaybe<BigintComparisonExp>;
};
export type TokensOrderBy = {
    collection_data_id_hash?: InputMaybe<OrderBy>;
    collection_name?: InputMaybe<OrderBy>;
    creator_address?: InputMaybe<OrderBy>;
    name?: InputMaybe<OrderBy>;
    property_version?: InputMaybe<OrderBy>;
    token_data_id_hash?: InputMaybe<OrderBy>;
    token_properties?: InputMaybe<OrderBy>;
    transaction_timestamp?: InputMaybe<OrderBy>;
    transaction_version?: InputMaybe<OrderBy>;
};
export declare enum TokensSelectColumn {
    CollectionDataIdHash = "collection_data_id_hash",
    CollectionName = "collection_name",
    CreatorAddress = "creator_address",
    Name = "name",
    PropertyVersion = "property_version",
    TokenDataIdHash = "token_data_id_hash",
    TokenProperties = "token_properties",
    TransactionTimestamp = "transaction_timestamp",
    TransactionVersion = "transaction_version"
}
export type TokensStreamCursorInput = {
    initial_value: TokensStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type TokensStreamCursorValueInput = {
    collection_data_id_hash?: InputMaybe<Scalars["String"]["input"]>;
    collection_name?: InputMaybe<Scalars["String"]["input"]>;
    creator_address?: InputMaybe<Scalars["String"]["input"]>;
    name?: InputMaybe<Scalars["String"]["input"]>;
    property_version?: InputMaybe<Scalars["numeric"]["input"]>;
    token_data_id_hash?: InputMaybe<Scalars["String"]["input"]>;
    token_properties?: InputMaybe<Scalars["jsonb"]["input"]>;
    transaction_timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    transaction_version?: InputMaybe<Scalars["bigint"]["input"]>;
};
export type UserTransactions = {
    block_height: Scalars["bigint"]["output"];
    entry_function_id_str: Scalars["String"]["output"];
    epoch: Scalars["bigint"]["output"];
    expiration_timestamp_secs: Scalars["timestamp"]["output"];
    gas_unit_price: Scalars["numeric"]["output"];
    max_gas_amount: Scalars["numeric"]["output"];
    parent_signature_type: Scalars["String"]["output"];
    sender: Scalars["String"]["output"];
    sequence_number: Scalars["bigint"]["output"];
    timestamp: Scalars["timestamp"]["output"];
    version: Scalars["bigint"]["output"];
};
export type UserTransactionsBoolExp = {
    _and?: InputMaybe<Array<UserTransactionsBoolExp>>;
    _not?: InputMaybe<UserTransactionsBoolExp>;
    _or?: InputMaybe<Array<UserTransactionsBoolExp>>;
    block_height?: InputMaybe<BigintComparisonExp>;
    entry_function_id_str?: InputMaybe<StringComparisonExp>;
    epoch?: InputMaybe<BigintComparisonExp>;
    expiration_timestamp_secs?: InputMaybe<TimestampComparisonExp>;
    gas_unit_price?: InputMaybe<NumericComparisonExp>;
    max_gas_amount?: InputMaybe<NumericComparisonExp>;
    parent_signature_type?: InputMaybe<StringComparisonExp>;
    sender?: InputMaybe<StringComparisonExp>;
    sequence_number?: InputMaybe<BigintComparisonExp>;
    timestamp?: InputMaybe<TimestampComparisonExp>;
    version?: InputMaybe<BigintComparisonExp>;
};
export type UserTransactionsOrderBy = {
    block_height?: InputMaybe<OrderBy>;
    entry_function_id_str?: InputMaybe<OrderBy>;
    epoch?: InputMaybe<OrderBy>;
    expiration_timestamp_secs?: InputMaybe<OrderBy>;
    gas_unit_price?: InputMaybe<OrderBy>;
    max_gas_amount?: InputMaybe<OrderBy>;
    parent_signature_type?: InputMaybe<OrderBy>;
    sender?: InputMaybe<OrderBy>;
    sequence_number?: InputMaybe<OrderBy>;
    timestamp?: InputMaybe<OrderBy>;
    version?: InputMaybe<OrderBy>;
};
export declare enum UserTransactionsSelectColumn {
    BlockHeight = "block_height",
    EntryFunctionIdStr = "entry_function_id_str",
    Epoch = "epoch",
    ExpirationTimestampSecs = "expiration_timestamp_secs",
    GasUnitPrice = "gas_unit_price",
    MaxGasAmount = "max_gas_amount",
    ParentSignatureType = "parent_signature_type",
    Sender = "sender",
    SequenceNumber = "sequence_number",
    Timestamp = "timestamp",
    Version = "version"
}
export type UserTransactionsStreamCursorInput = {
    initial_value: UserTransactionsStreamCursorValueInput;
    ordering?: InputMaybe<CursorOrdering>;
};
export type UserTransactionsStreamCursorValueInput = {
    block_height?: InputMaybe<Scalars["bigint"]["input"]>;
    entry_function_id_str?: InputMaybe<Scalars["String"]["input"]>;
    epoch?: InputMaybe<Scalars["bigint"]["input"]>;
    expiration_timestamp_secs?: InputMaybe<Scalars["timestamp"]["input"]>;
    gas_unit_price?: InputMaybe<Scalars["numeric"]["input"]>;
    max_gas_amount?: InputMaybe<Scalars["numeric"]["input"]>;
    parent_signature_type?: InputMaybe<Scalars["String"]["input"]>;
    sender?: InputMaybe<Scalars["String"]["input"]>;
    sequence_number?: InputMaybe<Scalars["bigint"]["input"]>;
    timestamp?: InputMaybe<Scalars["timestamp"]["input"]>;
    version?: InputMaybe<Scalars["bigint"]["input"]>;
};
