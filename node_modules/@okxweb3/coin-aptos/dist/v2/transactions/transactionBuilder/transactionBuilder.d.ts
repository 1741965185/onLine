import { AptosConfig } from "../../api/aptosConfig";
import { AccountAddressInput, PublicKey } from "../../core";
import { AccountAuthenticatorEd25519, AccountAuthenticatorSingleKey } from "../authenticator/account";
import { RawTransaction, TransactionPayloadEntryFunction, TransactionPayloadMultiSig, TransactionPayloadScript } from "../instances";
import { AnyTransactionPayloadInstance, InputGenerateMultiAgentRawTransactionArgs, InputGenerateSingleSignerRawTransactionArgs, InputGenerateTransactionOptions, InputScriptData, InputSimulateTransactionData, InputMultiSigDataWithRemoteABI, InputEntryFunctionDataWithRemoteABI, InputSubmitTransactionData, InputEntryFunctionDataWithABI, InputMultiSigDataWithABI } from "../types";
import { SimpleTransaction } from "../instances/simpleTransaction";
import { MultiAgentTransaction } from "../instances/multiAgentTransaction";
export declare function generateTransactionPayload(args: InputScriptData): Promise<TransactionPayloadScript>;
export declare function generateTransactionPayload(args: InputEntryFunctionDataWithRemoteABI): Promise<TransactionPayloadEntryFunction>;
export declare function generateTransactionPayload(args: InputMultiSigDataWithRemoteABI): Promise<TransactionPayloadMultiSig>;
export declare function generateTransactionPayloadWithABI(args: InputEntryFunctionDataWithABI): TransactionPayloadEntryFunction;
export declare function generateTransactionPayloadWithABI(args: InputMultiSigDataWithABI): TransactionPayloadMultiSig;
export declare function generateRawTransaction(args: {
    aptosConfig: AptosConfig;
    sender: AccountAddressInput;
    payload: AnyTransactionPayloadInstance;
    options?: InputGenerateTransactionOptions;
    feePayerAddress?: AccountAddressInput;
}): Promise<RawTransaction>;
export declare function buildTransaction(args: InputGenerateSingleSignerRawTransactionArgs): Promise<SimpleTransaction>;
export declare function buildTransaction(args: InputGenerateMultiAgentRawTransactionArgs): Promise<MultiAgentTransaction>;
export declare function generateSignedTransactionForSimulation(args: InputSimulateTransactionData): Uint8Array;
export declare function getAuthenticatorForSimulation(publicKey: PublicKey): AccountAuthenticatorEd25519 | AccountAuthenticatorSingleKey;
export declare function generateSignedTransaction(args: InputSubmitTransactionData): Uint8Array;
export declare function hashValues(input: (Uint8Array | string)[]): Uint8Array;
export declare function generateUserTransactionHash(args: InputSubmitTransactionData): string;
