"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.U256 = exports.U128 = exports.U64 = exports.U32 = exports.U16 = exports.U8 = exports.Bool = void 0;
const consts_1 = require("../consts");
const serializer_1 = require("../serializer");
const types_1 = require("../../types");
class Bool extends serializer_1.Serializable {
    constructor(value) {
        super();
        (0, serializer_1.ensureBoolean)(value);
        this.value = value;
    }
    serialize(serializer) {
        serializer.serializeBool(this.value);
    }
    serializeForEntryFunction(serializer) {
        const bcsBytes = this.bcsToBytes();
        serializer.serializeBytes(bcsBytes);
    }
    serializeForScriptFunction(serializer) {
        serializer.serializeU32AsUleb128(types_1.ScriptTransactionArgumentVariants.Bool);
        serializer.serialize(this);
    }
    static deserialize(deserializer) {
        return new Bool(deserializer.deserializeBool());
    }
}
exports.Bool = Bool;
class U8 extends serializer_1.Serializable {
    constructor(value) {
        super();
        (0, serializer_1.validateNumberInRange)(value, 0, consts_1.MAX_U8_NUMBER);
        this.value = value;
    }
    serialize(serializer) {
        serializer.serializeU8(this.value);
    }
    serializeForEntryFunction(serializer) {
        const bcsBytes = this.bcsToBytes();
        serializer.serializeBytes(bcsBytes);
    }
    serializeForScriptFunction(serializer) {
        serializer.serializeU32AsUleb128(types_1.ScriptTransactionArgumentVariants.U8);
        serializer.serialize(this);
    }
    static deserialize(deserializer) {
        return new U8(deserializer.deserializeU8());
    }
}
exports.U8 = U8;
class U16 extends serializer_1.Serializable {
    constructor(value) {
        super();
        (0, serializer_1.validateNumberInRange)(value, 0, consts_1.MAX_U16_NUMBER);
        this.value = value;
    }
    serialize(serializer) {
        serializer.serializeU16(this.value);
    }
    serializeForEntryFunction(serializer) {
        const bcsBytes = this.bcsToBytes();
        serializer.serializeBytes(bcsBytes);
    }
    serializeForScriptFunction(serializer) {
        serializer.serializeU32AsUleb128(types_1.ScriptTransactionArgumentVariants.U16);
        serializer.serialize(this);
    }
    static deserialize(deserializer) {
        return new U16(deserializer.deserializeU16());
    }
}
exports.U16 = U16;
class U32 extends serializer_1.Serializable {
    constructor(value) {
        super();
        (0, serializer_1.validateNumberInRange)(value, 0, consts_1.MAX_U32_NUMBER);
        this.value = value;
    }
    serialize(serializer) {
        serializer.serializeU32(this.value);
    }
    serializeForEntryFunction(serializer) {
        const bcsBytes = this.bcsToBytes();
        serializer.serializeBytes(bcsBytes);
    }
    serializeForScriptFunction(serializer) {
        serializer.serializeU32AsUleb128(types_1.ScriptTransactionArgumentVariants.U32);
        serializer.serialize(this);
    }
    static deserialize(deserializer) {
        return new U32(deserializer.deserializeU32());
    }
}
exports.U32 = U32;
class U64 extends serializer_1.Serializable {
    constructor(value) {
        super();
        (0, serializer_1.validateNumberInRange)(value, BigInt(0), consts_1.MAX_U64_BIG_INT);
        this.value = BigInt(value);
    }
    serialize(serializer) {
        serializer.serializeU64(this.value);
    }
    serializeForEntryFunction(serializer) {
        const bcsBytes = this.bcsToBytes();
        serializer.serializeBytes(bcsBytes);
    }
    serializeForScriptFunction(serializer) {
        serializer.serializeU32AsUleb128(types_1.ScriptTransactionArgumentVariants.U64);
        serializer.serialize(this);
    }
    static deserialize(deserializer) {
        return new U64(deserializer.deserializeU64());
    }
}
exports.U64 = U64;
class U128 extends serializer_1.Serializable {
    constructor(value) {
        super();
        (0, serializer_1.validateNumberInRange)(value, BigInt(0), consts_1.MAX_U128_BIG_INT);
        this.value = BigInt(value);
    }
    serialize(serializer) {
        serializer.serializeU128(this.value);
    }
    serializeForEntryFunction(serializer) {
        const bcsBytes = this.bcsToBytes();
        serializer.serializeBytes(bcsBytes);
    }
    serializeForScriptFunction(serializer) {
        serializer.serializeU32AsUleb128(types_1.ScriptTransactionArgumentVariants.U128);
        serializer.serialize(this);
    }
    static deserialize(deserializer) {
        return new U128(deserializer.deserializeU128());
    }
}
exports.U128 = U128;
class U256 extends serializer_1.Serializable {
    constructor(value) {
        super();
        (0, serializer_1.validateNumberInRange)(value, BigInt(0), consts_1.MAX_U256_BIG_INT);
        this.value = BigInt(value);
    }
    serialize(serializer) {
        serializer.serializeU256(this.value);
    }
    serializeForEntryFunction(serializer) {
        const bcsBytes = this.bcsToBytes();
        serializer.serializeBytes(bcsBytes);
    }
    serializeForScriptFunction(serializer) {
        serializer.serializeU32AsUleb128(types_1.ScriptTransactionArgumentVariants.U256);
        serializer.serialize(this);
    }
    static deserialize(deserializer) {
        return new U256(deserializer.deserializeU256());
    }
}
exports.U256 = U256;
//# sourceMappingURL=movePrimitives.js.map