"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthenticationKey = void 0;
const hex_string_1 = require("../../hex_string");
const sha3_1 = require("@noble/hashes/sha3");
class AuthenticationKey {
    constructor(bytes) {
        if (bytes.length !== AuthenticationKey.LENGTH) {
            throw new Error("Expected a byte array of length 32");
        }
        this.bytes = bytes;
    }
    static fromMultiEd25519PublicKey(publicKey) {
        const pubKeyBytes = publicKey.toBytes();
        const bytes = new Uint8Array(pubKeyBytes.length + 1);
        bytes.set(pubKeyBytes);
        bytes.set([AuthenticationKey.MULTI_ED25519_SCHEME], pubKeyBytes.length);
        const hash = sha3_1.sha3_256.create();
        hash.update(bytes);
        return new AuthenticationKey(hash.digest());
    }
    static fromEd25519PublicKey(publicKey) {
        const pubKeyBytes = publicKey.value;
        const bytes = new Uint8Array(pubKeyBytes.length + 1);
        bytes.set(pubKeyBytes);
        bytes.set([AuthenticationKey.ED25519_SCHEME], pubKeyBytes.length);
        const hash = sha3_1.sha3_256.create();
        hash.update(bytes);
        return new AuthenticationKey(hash.digest());
    }
    derivedAddress() {
        return hex_string_1.HexString.fromUint8Array(this.bytes);
    }
}
exports.AuthenticationKey = AuthenticationKey;
AuthenticationKey.LENGTH = 32;
AuthenticationKey.MULTI_ED25519_SCHEME = 1;
AuthenticationKey.ED25519_SCHEME = 0;
AuthenticationKey.DERIVE_RESOURCE_ACCOUNT_SCHEME = 255;
//# sourceMappingURL=authentication_key.js.map