{"remainingRequest":"/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/babel-loader/lib/index.js!/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/babel-loader/lib/index.js??ref--17!/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/@okxweb3/coin-bitcoin/node_modules/@noble/hashes/utils.js","dependencies":[{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/@okxweb3/coin-bitcoin/node_modules/@noble/hashes/utils.js","mtime":499162500000},{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/babel.config.js","mtime":1730111979206},{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/babel.config.js","mtime":1730111979206},{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["require","Object","defineProperty","exports","value","randomBytes","wrapConstructorWithOpts","wrapConstructor","checkOpts","Hash","assertHash","assertBytes","assertBool","assertNumber","concatBytes","toBytes","utf8ToBytes","asyncLoop","nextTick","hexToBytes","bytesToHex","isLE","rotr","createView","u32","u8","crypto_1","arr","Uint8Array","buffer","byteOffset","byteLength","Uint32Array","Math","floor","DataView","word","shift","Error","hexes","Array","from","length","v","i","toString","padStart","uint8a","hex","TypeError","array","j","hexByte","slice","byte","Number","parseInt","isNaN","nodeRequire","module","bind","setImmediate","Promise","resolve","e","setTimeout","iters","tick","cb","ts","Date","now","diff","str","TextEncoder","encode","data","_len","arguments","arrays","_key","every","a","reduce","result","pad","set","n","isSafeInteger","b","bytes","_len2","lengths","_key2","includes","hash","create","outputLen","blockLen","clone","_cloneInto","isPlainObject","obj","prototype","call","constructor","def","_opts","undefined","opts","assign","hashConstructor","hashC","message","update","digest","tmp","hashCons","msg","bytesLength","crypto","web","getRandomValues","node"],"sources":["/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/@okxweb3/coin-bitcoin/node_modules/@noble/hashes/utils.js"],"sourcesContent":["\"use strict\";\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.assertHash = exports.assertBytes = exports.assertBool = exports.assertNumber = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianess.\n// So, just to be sure not to corrupt anything.\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nfunction bytesToHex(uint8a) {\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\n/**\n * @example hexToBytes('deadbeef')\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte))\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// Currently avoid insertion of polyfills with packers (browserify/webpack/etc)\n// But setTimeout is pretty slow, maybe worth to investigate howto do minimal polyfill here\nexports.nextTick = (() => {\n    const nodeRequire = typeof module !== 'undefined' &&\n        typeof module.require === 'function' &&\n        module.require.bind(module);\n    try {\n        if (nodeRequire) {\n            const { setImmediate } = nodeRequire('timers');\n            return () => new Promise((resolve) => setImmediate(resolve));\n        }\n    }\n    catch (e) { }\n    return () => new Promise((resolve) => setTimeout(resolve, 0));\n})();\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexports.utf8ToBytes = utf8ToBytes;\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\nexports.toBytes = toBytes;\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nfunction concatBytes(...arrays) {\n    if (!arrays.every((a) => a instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexports.concatBytes = concatBytes;\nfunction assertNumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.assertNumber = assertNumber;\nfunction assertBool(b) {\n    if (typeof b !== 'boolean') {\n        throw new Error(`Expected boolean, not ${b}`);\n    }\n}\nexports.assertBool = assertBool;\nfunction assertBytes(bytes, ...lengths) {\n    if (bytes instanceof Uint8Array && (!lengths.length || lengths.includes(bytes.length))) {\n        return;\n    }\n    throw new TypeError(`Expected ${lengths} bytes, not ${typeof bytes} with length=${bytes.length}`);\n}\nexports.assertBytes = assertBytes;\nfunction assertHash(hash) {\n    if (typeof hash !== 'function' || typeof hash.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    assertNumber(hash.outputLen);\n    assertNumber(hash.blockLen);\n}\nexports.assertHash = assertHash;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(def, _opts) {\n    if (_opts !== undefined && (typeof _opts !== 'object' || !isPlainObject(_opts)))\n        throw new TypeError('Options should be object or undefined');\n    const opts = Object.assign(def, _opts);\n    return opts;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\n/**\n * Secure PRNG\n */\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto.web) {\n        return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto_1.crypto.node) {\n        return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\nexports.randomBytes = randomBytes;\n"],"mappings":"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"}]}