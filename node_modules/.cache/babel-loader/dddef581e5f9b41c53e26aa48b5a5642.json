{"remainingRequest":"/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/babel-loader/lib/index.js!/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/babel-loader/lib/index.js??ref--17!/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/@okxweb3/coin-ethereum/node_modules/@noble/hashes/blake3.js","dependencies":[{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/@okxweb3/coin-ethereum/node_modules/@noble/hashes/blake3.js","mtime":499162500000},{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/babel.config.js","mtime":1730111979206},{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/babel.config.js","mtime":1730111979206},{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnB1c2guanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmF0LmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLWxhc3QuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LmZpbmQtbGFzdC1pbmRleC5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuc2V0LmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lc25leHQudHlwZWQtYXJyYXkudG8tcmV2ZXJzZWQuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC50eXBlZC1hcnJheS50by1zb3J0ZWQuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC50eXBlZC1hcnJheS53aXRoLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZmxhZ3MuanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmVycm9yLmNhdXNlLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5wdXNoLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5hdC5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMudHlwZWQtYXJyYXkuZmluZC1sYXN0LmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy50eXBlZC1hcnJheS5maW5kLWxhc3QtaW5kZXguanMiKTsKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnR5cGVkLWFycmF5LnNldC5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXNuZXh0LnR5cGVkLWFycmF5LnRvLXJldmVyc2VkLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lc25leHQudHlwZWQtYXJyYXkudG8tc29ydGVkLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lc25leHQudHlwZWQtYXJyYXkud2l0aC5qcyIpOwpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmZsYWdzLmpzIik7CnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5lcnJvci5jYXVzZS5qcyIpOwp2YXIgX19jcmVhdGVCaW5kaW5nID0gdGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZyB8fCAoT2JqZWN0LmNyZWF0ZSA/IGZ1bmN0aW9uIChvLCBtLCBrLCBrMikgewogIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgZ2V0OiBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBtW2tdOwogICAgfQogIH0pOwp9IDogZnVuY3Rpb24gKG8sIG0sIGssIGsyKSB7CiAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gazsKICBvW2syXSA9IG1ba107Cn0pOwp2YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gdGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCB8fCAoT2JqZWN0LmNyZWF0ZSA/IGZ1bmN0aW9uIChvLCB2KSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sICJkZWZhdWx0IiwgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB2CiAgfSk7Cn0gOiBmdW5jdGlvbiAobywgdikgewogIG9bImRlZmF1bHQiXSA9IHY7Cn0pOwp2YXIgX19pbXBvcnRTdGFyID0gdGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhciB8fCBmdW5jdGlvbiAobW9kKSB7CiAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDsKICB2YXIgcmVzdWx0ID0ge307CiAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09ICJkZWZhdWx0IiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTsKICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpOwogIHJldHVybiByZXN1bHQ7Cn07Ck9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5ibGFrZTMgPSB2b2lkIDA7CmNvbnN0IHU2NCA9IF9faW1wb3J0U3RhcihyZXF1aXJlKCIuL191NjQuanMiKSk7CmNvbnN0IGJsYWtlMiA9IF9faW1wb3J0U3RhcihyZXF1aXJlKCIuL19ibGFrZTIuanMiKSk7CmNvbnN0IGJsYWtlMnMgPSBfX2ltcG9ydFN0YXIocmVxdWlyZSgiLi9ibGFrZTJzLmpzIikpOwpjb25zdCB1dGlsc19qc18xID0gcmVxdWlyZSgiLi91dGlscy5qcyIpOwovLyBGbGFnIGJpdHNldAp2YXIgRmxhZ3M7CihmdW5jdGlvbiAoRmxhZ3MpIHsKICBGbGFnc1tGbGFnc1siQ0hVTktfU1RBUlQiXSA9IDFdID0gIkNIVU5LX1NUQVJUIjsKICBGbGFnc1tGbGFnc1siQ0hVTktfRU5EIl0gPSAyXSA9ICJDSFVOS19FTkQiOwogIEZsYWdzW0ZsYWdzWyJQQVJFTlQiXSA9IDRdID0gIlBBUkVOVCI7CiAgRmxhZ3NbRmxhZ3NbIlJPT1QiXSA9IDhdID0gIlJPT1QiOwogIEZsYWdzW0ZsYWdzWyJLRVlFRF9IQVNIIl0gPSAxNl0gPSAiS0VZRURfSEFTSCI7CiAgRmxhZ3NbRmxhZ3NbIkRFUklWRV9LRVlfQ09OVEVYVCJdID0gMzJdID0gIkRFUklWRV9LRVlfQ09OVEVYVCI7CiAgRmxhZ3NbRmxhZ3NbIkRFUklWRV9LRVlfTUFURVJJQUwiXSA9IDY0XSA9ICJERVJJVkVfS0VZX01BVEVSSUFMIjsKfSkoRmxhZ3MgfHwgKEZsYWdzID0ge30pKTsKY29uc3QgU0lHTUEgPSAoKCkgPT4gewogIGNvbnN0IElkID0gQXJyYXkuZnJvbSh7CiAgICBsZW5ndGg6IDE2CiAgfSwgKF8sIGkpID0+IGkpOwogIGNvbnN0IHBlcm11dGUgPSBhcnIgPT4gWzIsIDYsIDMsIDEwLCA3LCAwLCA0LCAxMywgMSwgMTEsIDEyLCA1LCA5LCAxNCwgMTUsIDhdLm1hcChpID0+IGFycltpXSk7CiAgY29uc3QgcmVzID0gW107CiAgZm9yIChsZXQgaSA9IDAsIHYgPSBJZDsgaSA8IDc7IGkrKywgdiA9IHBlcm11dGUodikpIHJlcy5wdXNoKC4uLnYpOwogIHJldHVybiBVaW50OEFycmF5LmZyb20ocmVzKTsKfSkoKTsKLy8gV2h5IGlzIHRoaXMgc28gc2xvdz8gSXQgc2hvdWxkIGJlIDZ4IGZhc3RlciB0aGFuIGJsYWtlMmIuCi8vIC0gVGhlcmUgaXMgb25seSAzMCUgcmVkdWN0aW9uIGluIG51bWJlciBvZiByb3VuZHMgZnJvbSBibGFrZTJzCi8vIC0gVGhpcyBmdW5jdGlvbiB1c2VzIHRyZWUgbW9kZSB0byBhY2hpdmUgcGFyYWxsZWxpc2F0aW9uIHZpYSBTSU1EIGFuZCB0aHJlYWRpbmcsCi8vICAgaG93ZXZlciBpbiBKUyB3ZSBkb24ndCBoYXZlIHRocmVhZHMgYW5kIFNJTUQsIHNvIHdlIGdldCBvbmx5IG92ZXJoZWFkIGZyb20gdHJlZSBzdHJ1Y3R1cmUKLy8gLSBJdCBpcyBwb3NzaWJsZSB0byBzcGVlZCBpdCB1cCB2aWEgV2ViIFdvcmtlcnMsIGhvdmV3ZXIgaXQgd2lsbCBtYWtlIGNvZGUgc2luZ25pZmljYW50bHkgbW9yZQovLyAgIGNvbXBsaWNhdGVkLCB3aGljaCB3ZSBhcmUgdHJ5aW5nIHRvIGF2b2lkLCBzaW5jZSB0aGlzIGxpYnJhcnkgaXMgaW50ZW5kZWQgdG8gYmUgdXNlZAovLyAgIGZvciBjcnlwdG9ncmFwaGljIHB1cnBvc2VzLiBBbHNvLCBwYXJhbGxlbGl6YXRpb24gaGFwcGVucyBvbmx5IG9uIGNodW5rIGxldmVsICgxMDI0IGJ5dGVzKSwKLy8gICB3aGljaCB3b24ndCByZWFsbHkgYmVuZWZpdCBzbWFsbCBpbnB1dHMuCmNsYXNzIEJMQUtFMyBleHRlbmRzIGJsYWtlMi5CTEFLRTIgewogIGNvbnN0cnVjdG9yKCkgewogICAgbGV0IG9wdHMgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9OwogICAgbGV0IGZsYWdzID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAwOwogICAgc3VwZXIoNjQsIG9wdHMuZGtMZW4gPT09IHVuZGVmaW5lZCA/IDMyIDogb3B0cy5ka0xlbiwge30sIE51bWJlci5NQVhfU0FGRV9JTlRFR0VSLCAwLCAwKTsKICAgIHRoaXMuZmxhZ3MgPSAwIHwgMDsKICAgIHRoaXMuY2h1bmtQb3MgPSAwOyAvLyBQb3NpdGlvbiBvZiBjdXJyZW50IGJsb2NrIGluIGNodW5rCiAgICB0aGlzLmNodW5rc0RvbmUgPSAwOyAvLyBIb3cgbWFueSBjaHVua3Mgd2UgYWxyZWFkeSBoYXZlCiAgICB0aGlzLnN0YWNrID0gW107CiAgICAvLyBPdXRwdXQKICAgIHRoaXMucG9zT3V0ID0gMDsKICAgIHRoaXMuYnVmZmVyT3V0MzIgPSBuZXcgVWludDMyQXJyYXkoMTYpOwogICAgdGhpcy5jaHVua091dCA9IDA7IC8vIGluZGV4IG9mIG91dHB1dCBjaHVuawogICAgdGhpcy5lbmFibGVYT0YgPSB0cnVlOwogICAgdGhpcy5vdXRwdXRMZW4gPSBvcHRzLmRrTGVuID09PSB1bmRlZmluZWQgPyAzMiA6IG9wdHMuZGtMZW47CiAgICAoMCwgdXRpbHNfanNfMS5hc3NlcnROdW1iZXIpKHRoaXMub3V0cHV0TGVuKTsKICAgIGlmIChvcHRzLmtleSAhPT0gdW5kZWZpbmVkICYmIG9wdHMuY29udGV4dCAhPT0gdW5kZWZpbmVkKSB0aHJvdyBuZXcgRXJyb3IoJ0JsYWtlMzogb25seSBrZXkgb3IgY29udGV4dCBjYW4gYmUgc3BlY2lmaWVkIGF0IHNhbWUgdGltZScpO2Vsc2UgaWYgKG9wdHMua2V5ICE9PSB1bmRlZmluZWQpIHsKICAgICAgY29uc3Qga2V5ID0gKDAsIHV0aWxzX2pzXzEudG9CeXRlcykob3B0cy5rZXkpOwogICAgICBpZiAoa2V5Lmxlbmd0aCAhPT0gMzIpIHRocm93IG5ldyBFcnJvcignQmxha2UzOiBrZXkgc2hvdWxkIGJlIDMyIGJ5dGUnKTsKICAgICAgdGhpcy5JViA9ICgwLCB1dGlsc19qc18xLnUzMikoa2V5KTsKICAgICAgdGhpcy5mbGFncyA9IGZsYWdzIHwgRmxhZ3MuS0VZRURfSEFTSDsKICAgIH0gZWxzZSBpZiAob3B0cy5jb250ZXh0ICE9PSB1bmRlZmluZWQpIHsKICAgICAgY29uc3QgY29udGV4dF9rZXkgPSBuZXcgQkxBS0UzKHsKICAgICAgICBka0xlbjogMzIKICAgICAgfSwgRmxhZ3MuREVSSVZFX0tFWV9DT05URVhUKS51cGRhdGUob3B0cy5jb250ZXh0KS5kaWdlc3QoKTsKICAgICAgdGhpcy5JViA9ICgwLCB1dGlsc19qc18xLnUzMikoY29udGV4dF9rZXkpOwogICAgICB0aGlzLmZsYWdzID0gZmxhZ3MgfCBGbGFncy5ERVJJVkVfS0VZX01BVEVSSUFMOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy5JViA9IGJsYWtlMnMuSVYuc2xpY2UoKTsKICAgICAgdGhpcy5mbGFncyA9IGZsYWdzOwogICAgfQogICAgdGhpcy5zdGF0ZSA9IHRoaXMuSVYuc2xpY2UoKTsKICAgIHRoaXMuYnVmZmVyT3V0ID0gKDAsIHV0aWxzX2pzXzEudTgpKHRoaXMuYnVmZmVyT3V0MzIpOwogIH0KICAvLyBVbnVzZWQKICBnZXQoKSB7CiAgICByZXR1cm4gW107CiAgfQogIHNldCgpIHt9CiAgYjJDb21wcmVzcyhjb3VudGVyLCBmbGFncywgYnVmKSB7CiAgICBsZXQgYnVmUG9zID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiAwOwogICAgY29uc3QgewogICAgICBzdGF0ZSwKICAgICAgcG9zCiAgICB9ID0gdGhpczsKICAgIGNvbnN0IHsKICAgICAgaCwKICAgICAgbAogICAgfSA9IHU2NC5mcm9tQmlnKEJpZ0ludChjb3VudGVyKSwgdHJ1ZSk7CiAgICAvLyBwcmV0dGllci1pZ25vcmUKICAgIGNvbnN0IHsKICAgICAgdjAsCiAgICAgIHYxLAogICAgICB2MiwKICAgICAgdjMsCiAgICAgIHY0LAogICAgICB2NSwKICAgICAgdjYsCiAgICAgIHY3LAogICAgICB2OCwKICAgICAgdjksCiAgICAgIHYxMCwKICAgICAgdjExLAogICAgICB2MTIsCiAgICAgIHYxMywKICAgICAgdjE0LAogICAgICB2MTUKICAgIH0gPSBibGFrZTJzLmNvbXByZXNzKFNJR01BLCBidWZQb3MsIGJ1ZiwgNywgc3RhdGVbMF0sIHN0YXRlWzFdLCBzdGF0ZVsyXSwgc3RhdGVbM10sIHN0YXRlWzRdLCBzdGF0ZVs1XSwgc3RhdGVbNl0sIHN0YXRlWzddLCBibGFrZTJzLklWWzBdLCBibGFrZTJzLklWWzFdLCBibGFrZTJzLklWWzJdLCBibGFrZTJzLklWWzNdLCBoLCBsLCBwb3MsIGZsYWdzKTsKICAgIHN0YXRlWzBdID0gdjAgXiB2ODsKICAgIHN0YXRlWzFdID0gdjEgXiB2OTsKICAgIHN0YXRlWzJdID0gdjIgXiB2MTA7CiAgICBzdGF0ZVszXSA9IHYzIF4gdjExOwogICAgc3RhdGVbNF0gPSB2NCBeIHYxMjsKICAgIHN0YXRlWzVdID0gdjUgXiB2MTM7CiAgICBzdGF0ZVs2XSA9IHY2IF4gdjE0OwogICAgc3RhdGVbN10gPSB2NyBeIHYxNTsKICB9CiAgY29tcHJlc3MoYnVmKSB7CiAgICBsZXQgYnVmUG9zID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAwOwogICAgbGV0IGlzTGFzdCA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogZmFsc2U7CiAgICAvLyBDb21wcmVzcyBsYXN0IGJsb2NrCiAgICBsZXQgZmxhZ3MgPSB0aGlzLmZsYWdzOwogICAgaWYgKCF0aGlzLmNodW5rUG9zKSBmbGFncyB8PSBGbGFncy5DSFVOS19TVEFSVDsKICAgIGlmICh0aGlzLmNodW5rUG9zID09PSAxNSB8fCBpc0xhc3QpIGZsYWdzIHw9IEZsYWdzLkNIVU5LX0VORDsKICAgIGlmICghaXNMYXN0KSB0aGlzLnBvcyA9IHRoaXMuYmxvY2tMZW47CiAgICB0aGlzLmIyQ29tcHJlc3ModGhpcy5jaHVua3NEb25lLCBmbGFncywgYnVmLCBidWZQb3MpOwogICAgdGhpcy5jaHVua1BvcyArPSAxOwogICAgLy8gSWYgY3VycmVudCBibG9jayBpcyBsYXN0IGluIGNodW5rICgxNiBibG9ja3MpLCB0aGVuIGNvbXByZXNzIGNodW5rcwogICAgaWYgKHRoaXMuY2h1bmtQb3MgPT09IDE2IHx8IGlzTGFzdCkgewogICAgICBsZXQgY2h1bmsgPSB0aGlzLnN0YXRlOwogICAgICB0aGlzLnN0YXRlID0gdGhpcy5JVi5zbGljZSgpOwogICAgICAvLyBJZiBub3QgdGhlIGxhc3Qgb25lLCBjb21wcmVzcyBvbmx5IHdoZW4gdGhlcmUgYXJlIHRyYWlsaW5nIHplcm9zIGluIGNodW5rIGNvdW50ZXIKICAgICAgLy8gY2h1bmtzIHVzZWQgYXMgYmluYXJ5IHRyZWUgd2hlcmUgY3VycmVudCBzdGFjayBpcyBwYXRoLiBaZXJvIG1lYW5zIGN1cnJlbnQgbGVhZiBpcyBmaW5pc2hlZCBhbmQgY2FuIGJlIGNvbXByZXNzZWQuCiAgICAgIC8vIDEgKDAwMSkgLSBsZWFmIG5vdCBmaW5pc2hlZCAoanVzdCBwdXNoIGN1cnJlbnQgY2h1bmsgdG8gc3RhY2spCiAgICAgIC8vIDIgKDAxMCkgLSBsZWFmIGZpbmlzaGVkIGF0IGRlcHRoPTEgKG1lcmdlIHdpdGggbGFzdCBlbG0gb24gc3RhY2sgYW5kIHB1c2ggYmFjaykKICAgICAgLy8gMyAoMDExKSAtIGxhc3QgbGVhZiBub3QgZmluaXNoZWQKICAgICAgLy8gNCAoMTAwKSAtIGxlYWZzIGZpbmlzaGVkIGF0IGRlcHRoPTEgYW5kIGRlcHRoPTIKICAgICAgZm9yIChsZXQgbGFzdCwgY2h1bmtzID0gdGhpcy5jaHVua3NEb25lICsgMTsgaXNMYXN0IHx8ICEoY2h1bmtzICYgMSk7IGNodW5rcyA+Pj0gMSkgewogICAgICAgIGlmICghKGxhc3QgPSB0aGlzLnN0YWNrLnBvcCgpKSkgYnJlYWs7CiAgICAgICAgdGhpcy5idWZmZXIzMi5zZXQobGFzdCwgMCk7CiAgICAgICAgdGhpcy5idWZmZXIzMi5zZXQoY2h1bmssIDgpOwogICAgICAgIHRoaXMucG9zID0gdGhpcy5ibG9ja0xlbjsKICAgICAgICB0aGlzLmIyQ29tcHJlc3MoMCwgdGhpcy5mbGFncyB8IEZsYWdzLlBBUkVOVCwgdGhpcy5idWZmZXIzMiwgMCk7CiAgICAgICAgY2h1bmsgPSB0aGlzLnN0YXRlOwogICAgICAgIHRoaXMuc3RhdGUgPSB0aGlzLklWLnNsaWNlKCk7CiAgICAgIH0KICAgICAgdGhpcy5jaHVua3NEb25lKys7CiAgICAgIHRoaXMuY2h1bmtQb3MgPSAwOwogICAgICB0aGlzLnN0YWNrLnB1c2goY2h1bmspOwogICAgfQogICAgdGhpcy5wb3MgPSAwOwogIH0KICBfY2xvbmVJbnRvKHRvKSB7CiAgICB0byA9IHN1cGVyLl9jbG9uZUludG8odG8pOwogICAgY29uc3QgewogICAgICBJViwKICAgICAgZmxhZ3MsCiAgICAgIHN0YXRlLAogICAgICBjaHVua1BvcywKICAgICAgcG9zT3V0LAogICAgICBjaHVua091dCwKICAgICAgc3RhY2ssCiAgICAgIGNodW5rc0RvbmUKICAgIH0gPSB0aGlzOwogICAgdG8uc3RhdGUuc2V0KHN0YXRlLnNsaWNlKCkpOwogICAgdG8uc3RhY2sgPSBzdGFjay5tYXAoaSA9PiBVaW50MzJBcnJheS5mcm9tKGkpKTsKICAgIHRvLklWLnNldChJVik7CiAgICB0by5mbGFncyA9IGZsYWdzOwogICAgdG8uY2h1bmtQb3MgPSBjaHVua1BvczsKICAgIHRvLmNodW5rc0RvbmUgPSBjaHVua3NEb25lOwogICAgdG8ucG9zT3V0ID0gcG9zT3V0OwogICAgdG8uY2h1bmtPdXQgPSBjaHVua091dDsKICAgIHRvLmVuYWJsZVhPRiA9IHRoaXMuZW5hYmxlWE9GOwogICAgdG8uYnVmZmVyT3V0MzIuc2V0KHRoaXMuYnVmZmVyT3V0MzIpOwogICAgcmV0dXJuIHRvOwogIH0KICBkZXN0cm95KCkgewogICAgdGhpcy5kZXN0cm95ZWQgPSB0cnVlOwogICAgdGhpcy5zdGF0ZS5maWxsKDApOwogICAgdGhpcy5idWZmZXIzMi5maWxsKDApOwogICAgdGhpcy5JVi5maWxsKDApOwogICAgdGhpcy5idWZmZXJPdXQzMi5maWxsKDApOwogICAgZm9yIChsZXQgaSBvZiB0aGlzLnN0YWNrKSBpLmZpbGwoMCk7CiAgfQogIC8vIFNhbWUgYXMgYjJDb21wcmVzcywgYnV0IGRvZXNuJ3QgbW9kaWZ5IHN0YXRlIGFuZCByZXR1cm5zIDE2IHUzMiBhcnJheSAoaW5zdGVhZCBvZiA4KQogIGIyQ29tcHJlc3NPdXQoKSB7CiAgICBjb25zdCB7CiAgICAgIHN0YXRlLAogICAgICBwb3MsCiAgICAgIGZsYWdzLAogICAgICBidWZmZXIzMiwKICAgICAgYnVmZmVyT3V0MzIKICAgIH0gPSB0aGlzOwogICAgY29uc3QgewogICAgICBoLAogICAgICBsCiAgICB9ID0gdTY0LmZyb21CaWcoQmlnSW50KHRoaXMuY2h1bmtPdXQrKykpOwogICAgLy8gcHJldHRpZXItaWdub3JlCiAgICBjb25zdCB7CiAgICAgIHYwLAogICAgICB2MSwKICAgICAgdjIsCiAgICAgIHYzLAogICAgICB2NCwKICAgICAgdjUsCiAgICAgIHY2LAogICAgICB2NywKICAgICAgdjgsCiAgICAgIHY5LAogICAgICB2MTAsCiAgICAgIHYxMSwKICAgICAgdjEyLAogICAgICB2MTMsCiAgICAgIHYxNCwKICAgICAgdjE1CiAgICB9ID0gYmxha2Uycy5jb21wcmVzcyhTSUdNQSwgMCwgYnVmZmVyMzIsIDcsIHN0YXRlWzBdLCBzdGF0ZVsxXSwgc3RhdGVbMl0sIHN0YXRlWzNdLCBzdGF0ZVs0XSwgc3RhdGVbNV0sIHN0YXRlWzZdLCBzdGF0ZVs3XSwgYmxha2Uycy5JVlswXSwgYmxha2Uycy5JVlsxXSwgYmxha2Uycy5JVlsyXSwgYmxha2Uycy5JVlszXSwgbCwgaCwgcG9zLCBmbGFncyk7CiAgICBidWZmZXJPdXQzMlswXSA9IHYwIF4gdjg7CiAgICBidWZmZXJPdXQzMlsxXSA9IHYxIF4gdjk7CiAgICBidWZmZXJPdXQzMlsyXSA9IHYyIF4gdjEwOwogICAgYnVmZmVyT3V0MzJbM10gPSB2MyBeIHYxMTsKICAgIGJ1ZmZlck91dDMyWzRdID0gdjQgXiB2MTI7CiAgICBidWZmZXJPdXQzMls1XSA9IHY1IF4gdjEzOwogICAgYnVmZmVyT3V0MzJbNl0gPSB2NiBeIHYxNDsKICAgIGJ1ZmZlck91dDMyWzddID0gdjcgXiB2MTU7CiAgICBidWZmZXJPdXQzMls4XSA9IHN0YXRlWzBdIF4gdjg7CiAgICBidWZmZXJPdXQzMls5XSA9IHN0YXRlWzFdIF4gdjk7CiAgICBidWZmZXJPdXQzMlsxMF0gPSBzdGF0ZVsyXSBeIHYxMDsKICAgIGJ1ZmZlck91dDMyWzExXSA9IHN0YXRlWzNdIF4gdjExOwogICAgYnVmZmVyT3V0MzJbMTJdID0gc3RhdGVbNF0gXiB2MTI7CiAgICBidWZmZXJPdXQzMlsxM10gPSBzdGF0ZVs1XSBeIHYxMzsKICAgIGJ1ZmZlck91dDMyWzE0XSA9IHN0YXRlWzZdIF4gdjE0OwogICAgYnVmZmVyT3V0MzJbMTVdID0gc3RhdGVbN10gXiB2MTU7CiAgICB0aGlzLnBvc091dCA9IDA7CiAgfQogIGZpbmlzaCgpIHsKICAgIGlmICh0aGlzLmZpbmlzaGVkKSByZXR1cm47CiAgICB0aGlzLmZpbmlzaGVkID0gdHJ1ZTsKICAgIC8vIFBhZGRpbmcKICAgIHRoaXMuYnVmZmVyLmZpbGwoMCwgdGhpcy5wb3MpOwogICAgLy8gUHJvY2VzcyBsYXN0IGNodW5rCiAgICBsZXQgZmxhZ3MgPSB0aGlzLmZsYWdzIHwgRmxhZ3MuUk9PVDsKICAgIGlmICh0aGlzLnN0YWNrLmxlbmd0aCkgewogICAgICBmbGFncyB8PSBGbGFncy5QQVJFTlQ7CiAgICAgIHRoaXMuY29tcHJlc3ModGhpcy5idWZmZXIzMiwgMCwgdHJ1ZSk7CiAgICAgIHRoaXMuY2h1bmtzRG9uZSA9IDA7CiAgICAgIHRoaXMucG9zID0gdGhpcy5ibG9ja0xlbjsKICAgIH0gZWxzZSB7CiAgICAgIGZsYWdzIHw9ICghdGhpcy5jaHVua1BvcyA/IEZsYWdzLkNIVU5LX1NUQVJUIDogMCkgfCBGbGFncy5DSFVOS19FTkQ7CiAgICB9CiAgICB0aGlzLmZsYWdzID0gZmxhZ3M7CiAgICB0aGlzLmIyQ29tcHJlc3NPdXQoKTsKICB9CiAgd3JpdGVJbnRvKG91dCkgewogICAgaWYgKHRoaXMuZGVzdHJveWVkKSB0aHJvdyBuZXcgRXJyb3IoJ2luc3RhbmNlIGlzIGRlc3Ryb3llZCcpOwogICAgaWYgKCEob3V0IGluc3RhbmNlb2YgVWludDhBcnJheSkpIHRocm93IG5ldyBFcnJvcignQmxha2UzOiBJbnZhbGlkIG91dHB1dCBidWZmZXInKTsKICAgIHRoaXMuZmluaXNoKCk7CiAgICBjb25zdCB7CiAgICAgIGJsb2NrTGVuLAogICAgICBidWZmZXJPdXQKICAgIH0gPSB0aGlzOwogICAgZm9yIChsZXQgcG9zID0gMCwgbGVuID0gb3V0Lmxlbmd0aDsgcG9zIDwgbGVuOykgewogICAgICBpZiAodGhpcy5wb3NPdXQgPj0gYmxvY2tMZW4pIHRoaXMuYjJDb21wcmVzc091dCgpOwogICAgICBjb25zdCB0YWtlID0gTWF0aC5taW4odGhpcy5ibG9ja0xlbiAtIHRoaXMucG9zT3V0LCBsZW4gLSBwb3MpOwogICAgICBvdXQuc2V0KGJ1ZmZlck91dC5zdWJhcnJheSh0aGlzLnBvc091dCwgdGhpcy5wb3NPdXQgKyB0YWtlKSwgcG9zKTsKICAgICAgdGhpcy5wb3NPdXQgKz0gdGFrZTsKICAgICAgcG9zICs9IHRha2U7CiAgICB9CiAgICByZXR1cm4gb3V0OwogIH0KICB4b2ZJbnRvKG91dCkgewogICAgaWYgKCF0aGlzLmVuYWJsZVhPRikgdGhyb3cgbmV3IEVycm9yKCdYT0YgaW1wb3NzaWJsZSBhZnRlciBkaWdlc3QgY2FsbCcpOwogICAgcmV0dXJuIHRoaXMud3JpdGVJbnRvKG91dCk7CiAgfQogIHhvZihieXRlcykgewogICAgKDAsIHV0aWxzX2pzXzEuYXNzZXJ0TnVtYmVyKShieXRlcyk7CiAgICByZXR1cm4gdGhpcy54b2ZJbnRvKG5ldyBVaW50OEFycmF5KGJ5dGVzKSk7CiAgfQogIGRpZ2VzdEludG8ob3V0KSB7CiAgICBpZiAob3V0Lmxlbmd0aCA8IHRoaXMub3V0cHV0TGVuKSB0aHJvdyBuZXcgRXJyb3IoJ0JsYWtlMzogSW52YWxpZCBvdXRwdXQgYnVmZmVyJyk7CiAgICBpZiAodGhpcy5maW5pc2hlZCkgdGhyb3cgbmV3IEVycm9yKCdkaWdlc3QoKSB3YXMgYWxyZWFkeSBjYWxsZWQnKTsKICAgIHRoaXMuZW5hYmxlWE9GID0gZmFsc2U7CiAgICB0aGlzLndyaXRlSW50byhvdXQpOwogICAgdGhpcy5kZXN0cm95KCk7CiAgICByZXR1cm4gb3V0OwogIH0KICBkaWdlc3QoKSB7CiAgICByZXR1cm4gdGhpcy5kaWdlc3RJbnRvKG5ldyBVaW50OEFycmF5KHRoaXMub3V0cHV0TGVuKSk7CiAgfQp9Ci8qKgogKiBCTEFLRTMgaGFzaCBmdW5jdGlvbi4KICogQHBhcmFtIG1zZyAtIG1lc3NhZ2UgdGhhdCB3b3VsZCBiZSBoYXNoZWQKICogQHBhcmFtIG9wdHMgLSBka0xlbiwga2V5LCBjb250ZXh0CiAqLwpleHBvcnRzLmJsYWtlMyA9ICgwLCB1dGlsc19qc18xLndyYXBDb25zdHJ1Y3RvcldpdGhPcHRzKShvcHRzID0+IG5ldyBCTEFLRTMob3B0cykpOw=="},{"version":3,"names":["require","__createBinding","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","exports","blake3","u64","blake2","blake2s","utils_js_1","Flags","SIGMA","Id","Array","from","length","_","i","permute","arr","map","res","push","Uint8Array","BLAKE3","BLAKE2","constructor","opts","arguments","flags","dkLen","Number","MAX_SAFE_INTEGER","chunkPos","chunksDone","stack","posOut","bufferOut32","Uint32Array","chunkOut","enableXOF","outputLen","assertNumber","key","context","Error","toBytes","IV","u32","KEYED_HASH","context_key","DERIVE_KEY_CONTEXT","update","digest","DERIVE_KEY_MATERIAL","slice","state","bufferOut","u8","set","b2Compress","counter","buf","bufPos","pos","h","l","fromBig","BigInt","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10","v11","v12","v13","v14","v15","compress","isLast","CHUNK_START","CHUNK_END","blockLen","chunk","last","chunks","pop","buffer32","PARENT","_cloneInto","to","destroy","destroyed","fill","b2CompressOut","finish","finished","buffer","ROOT","writeInto","out","len","take","Math","min","subarray","xofInto","xof","bytes","digestInto","wrapConstructorWithOpts"],"sources":["/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/@okxweb3/coin-ethereum/node_modules/@noble/hashes/blake3.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.blake3 = void 0;\nconst u64 = __importStar(require(\"./_u64.js\"));\nconst blake2 = __importStar(require(\"./_blake2.js\"));\nconst blake2s = __importStar(require(\"./blake2s.js\"));\nconst utils_js_1 = require(\"./utils.js\");\n// Flag bitset\nvar Flags;\n(function (Flags) {\n    Flags[Flags[\"CHUNK_START\"] = 1] = \"CHUNK_START\";\n    Flags[Flags[\"CHUNK_END\"] = 2] = \"CHUNK_END\";\n    Flags[Flags[\"PARENT\"] = 4] = \"PARENT\";\n    Flags[Flags[\"ROOT\"] = 8] = \"ROOT\";\n    Flags[Flags[\"KEYED_HASH\"] = 16] = \"KEYED_HASH\";\n    Flags[Flags[\"DERIVE_KEY_CONTEXT\"] = 32] = \"DERIVE_KEY_CONTEXT\";\n    Flags[Flags[\"DERIVE_KEY_MATERIAL\"] = 64] = \"DERIVE_KEY_MATERIAL\";\n})(Flags || (Flags = {}));\nconst SIGMA = (() => {\n    const Id = Array.from({ length: 16 }, (_, i) => i);\n    const permute = (arr) => [2, 6, 3, 10, 7, 0, 4, 13, 1, 11, 12, 5, 9, 14, 15, 8].map((i) => arr[i]);\n    const res = [];\n    for (let i = 0, v = Id; i < 7; i++, v = permute(v))\n        res.push(...v);\n    return Uint8Array.from(res);\n})();\n// Why is this so slow? It should be 6x faster than blake2b.\n// - There is only 30% reduction in number of rounds from blake2s\n// - This function uses tree mode to achive parallelisation via SIMD and threading,\n//   however in JS we don't have threads and SIMD, so we get only overhead from tree structure\n// - It is possible to speed it up via Web Workers, hovewer it will make code singnificantly more\n//   complicated, which we are trying to avoid, since this library is intended to be used\n//   for cryptographic purposes. Also, parallelization happens only on chunk level (1024 bytes),\n//   which won't really benefit small inputs.\nclass BLAKE3 extends blake2.BLAKE2 {\n    constructor(opts = {}, flags = 0) {\n        super(64, opts.dkLen === undefined ? 32 : opts.dkLen, {}, Number.MAX_SAFE_INTEGER, 0, 0);\n        this.flags = 0 | 0;\n        this.chunkPos = 0; // Position of current block in chunk\n        this.chunksDone = 0; // How many chunks we already have\n        this.stack = [];\n        // Output\n        this.posOut = 0;\n        this.bufferOut32 = new Uint32Array(16);\n        this.chunkOut = 0; // index of output chunk\n        this.enableXOF = true;\n        this.outputLen = opts.dkLen === undefined ? 32 : opts.dkLen;\n        (0, utils_js_1.assertNumber)(this.outputLen);\n        if (opts.key !== undefined && opts.context !== undefined)\n            throw new Error('Blake3: only key or context can be specified at same time');\n        else if (opts.key !== undefined) {\n            const key = (0, utils_js_1.toBytes)(opts.key);\n            if (key.length !== 32)\n                throw new Error('Blake3: key should be 32 byte');\n            this.IV = (0, utils_js_1.u32)(key);\n            this.flags = flags | Flags.KEYED_HASH;\n        }\n        else if (opts.context !== undefined) {\n            const context_key = new BLAKE3({ dkLen: 32 }, Flags.DERIVE_KEY_CONTEXT)\n                .update(opts.context)\n                .digest();\n            this.IV = (0, utils_js_1.u32)(context_key);\n            this.flags = flags | Flags.DERIVE_KEY_MATERIAL;\n        }\n        else {\n            this.IV = blake2s.IV.slice();\n            this.flags = flags;\n        }\n        this.state = this.IV.slice();\n        this.bufferOut = (0, utils_js_1.u8)(this.bufferOut32);\n    }\n    // Unused\n    get() {\n        return [];\n    }\n    set() { }\n    b2Compress(counter, flags, buf, bufPos = 0) {\n        const { state, pos } = this;\n        const { h, l } = u64.fromBig(BigInt(counter), true);\n        // prettier-ignore\n        const { v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15 } = blake2s.compress(SIGMA, bufPos, buf, 7, state[0], state[1], state[2], state[3], state[4], state[5], state[6], state[7], blake2s.IV[0], blake2s.IV[1], blake2s.IV[2], blake2s.IV[3], h, l, pos, flags);\n        state[0] = v0 ^ v8;\n        state[1] = v1 ^ v9;\n        state[2] = v2 ^ v10;\n        state[3] = v3 ^ v11;\n        state[4] = v4 ^ v12;\n        state[5] = v5 ^ v13;\n        state[6] = v6 ^ v14;\n        state[7] = v7 ^ v15;\n    }\n    compress(buf, bufPos = 0, isLast = false) {\n        // Compress last block\n        let flags = this.flags;\n        if (!this.chunkPos)\n            flags |= Flags.CHUNK_START;\n        if (this.chunkPos === 15 || isLast)\n            flags |= Flags.CHUNK_END;\n        if (!isLast)\n            this.pos = this.blockLen;\n        this.b2Compress(this.chunksDone, flags, buf, bufPos);\n        this.chunkPos += 1;\n        // If current block is last in chunk (16 blocks), then compress chunks\n        if (this.chunkPos === 16 || isLast) {\n            let chunk = this.state;\n            this.state = this.IV.slice();\n            // If not the last one, compress only when there are trailing zeros in chunk counter\n            // chunks used as binary tree where current stack is path. Zero means current leaf is finished and can be compressed.\n            // 1 (001) - leaf not finished (just push current chunk to stack)\n            // 2 (010) - leaf finished at depth=1 (merge with last elm on stack and push back)\n            // 3 (011) - last leaf not finished\n            // 4 (100) - leafs finished at depth=1 and depth=2\n            for (let last, chunks = this.chunksDone + 1; isLast || !(chunks & 1); chunks >>= 1) {\n                if (!(last = this.stack.pop()))\n                    break;\n                this.buffer32.set(last, 0);\n                this.buffer32.set(chunk, 8);\n                this.pos = this.blockLen;\n                this.b2Compress(0, this.flags | Flags.PARENT, this.buffer32, 0);\n                chunk = this.state;\n                this.state = this.IV.slice();\n            }\n            this.chunksDone++;\n            this.chunkPos = 0;\n            this.stack.push(chunk);\n        }\n        this.pos = 0;\n    }\n    _cloneInto(to) {\n        to = super._cloneInto(to);\n        const { IV, flags, state, chunkPos, posOut, chunkOut, stack, chunksDone } = this;\n        to.state.set(state.slice());\n        to.stack = stack.map((i) => Uint32Array.from(i));\n        to.IV.set(IV);\n        to.flags = flags;\n        to.chunkPos = chunkPos;\n        to.chunksDone = chunksDone;\n        to.posOut = posOut;\n        to.chunkOut = chunkOut;\n        to.enableXOF = this.enableXOF;\n        to.bufferOut32.set(this.bufferOut32);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n        this.buffer32.fill(0);\n        this.IV.fill(0);\n        this.bufferOut32.fill(0);\n        for (let i of this.stack)\n            i.fill(0);\n    }\n    // Same as b2Compress, but doesn't modify state and returns 16 u32 array (instead of 8)\n    b2CompressOut() {\n        const { state, pos, flags, buffer32, bufferOut32 } = this;\n        const { h, l } = u64.fromBig(BigInt(this.chunkOut++));\n        // prettier-ignore\n        const { v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15 } = blake2s.compress(SIGMA, 0, buffer32, 7, state[0], state[1], state[2], state[3], state[4], state[5], state[6], state[7], blake2s.IV[0], blake2s.IV[1], blake2s.IV[2], blake2s.IV[3], l, h, pos, flags);\n        bufferOut32[0] = v0 ^ v8;\n        bufferOut32[1] = v1 ^ v9;\n        bufferOut32[2] = v2 ^ v10;\n        bufferOut32[3] = v3 ^ v11;\n        bufferOut32[4] = v4 ^ v12;\n        bufferOut32[5] = v5 ^ v13;\n        bufferOut32[6] = v6 ^ v14;\n        bufferOut32[7] = v7 ^ v15;\n        bufferOut32[8] = state[0] ^ v8;\n        bufferOut32[9] = state[1] ^ v9;\n        bufferOut32[10] = state[2] ^ v10;\n        bufferOut32[11] = state[3] ^ v11;\n        bufferOut32[12] = state[4] ^ v12;\n        bufferOut32[13] = state[5] ^ v13;\n        bufferOut32[14] = state[6] ^ v14;\n        bufferOut32[15] = state[7] ^ v15;\n        this.posOut = 0;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        // Padding\n        this.buffer.fill(0, this.pos);\n        // Process last chunk\n        let flags = this.flags | Flags.ROOT;\n        if (this.stack.length) {\n            flags |= Flags.PARENT;\n            this.compress(this.buffer32, 0, true);\n            this.chunksDone = 0;\n            this.pos = this.blockLen;\n        }\n        else {\n            flags |= (!this.chunkPos ? Flags.CHUNK_START : 0) | Flags.CHUNK_END;\n        }\n        this.flags = flags;\n        this.b2CompressOut();\n    }\n    writeInto(out) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (!(out instanceof Uint8Array))\n            throw new Error('Blake3: Invalid output buffer');\n        this.finish();\n        const { blockLen, bufferOut } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.b2CompressOut();\n            const take = Math.min(this.blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        if (!this.enableXOF)\n            throw new Error('XOF impossible after digest call');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        (0, utils_js_1.assertNumber)(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        if (out.length < this.outputLen)\n            throw new Error('Blake3: Invalid output buffer');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.enableXOF = false;\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n}\n/**\n * BLAKE3 hash function.\n * @param msg - message that would be hashed\n * @param opts - dkLen, key, context\n */\nexports.blake3 = (0, utils_js_1.wrapConstructorWithOpts)((opts) => new BLAKE3(opts));\n"],"mappings":"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"}]}