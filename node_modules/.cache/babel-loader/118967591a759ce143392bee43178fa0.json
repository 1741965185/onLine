{"remainingRequest":"/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/babel-loader/lib/index.js!/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/babel-loader/lib/index.js??ref--16!/Users/apple/IdeaProjects/onLinePayMerchant/src/wallet/BTCNetWorkMethods.js","dependencies":[{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/src/wallet/BTCNetWorkMethods.js","mtime":1730111979305},{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/babel.config.js","mtime":1730111979206},{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/babel.config.js","mtime":1730111979206},{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/babel-loader/lib/index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgQnRjV2FsbGV0IH0gZnJvbSAiQG9reHdlYjMvY29pbi1iaXRjb2luIjsKaW1wb3J0IG9reFJlcSBmcm9tICJAL3V0aWxzL29reFJlcSI7CmNvbnN0IHdhbGxldCA9IG5ldyBCdGNXYWxsZXQoKTsKLy/nlJ/miJBidGPnmoTlnLDlnYAKYXN5bmMgZnVuY3Rpb24gZ2V0TmV3QWRkcmVzcyhuZXRXb3JrLCBwcml2YXRlS2V5LCB0aW1lc3RhbXBTdHJpbmcpIHsKICBsZXQgYWRkcmVzc1R5cGUgPSAnJzsKICBpZiAobmV0V29yayA9PT0gJ0xlZ2FjeScpIHsKICAgIGFkZHJlc3NUeXBlID0gJ0xlZ2FjeSc7CiAgfSBlbHNlIGlmIChuZXRXb3JrID09PSAnVGFwcm9vdCcpIHsKICAgIGFkZHJlc3NUeXBlID0gJ3NlZ3dpdF90YXByb290JzsKICB9CiAgbGV0IGRlcml2ZVByaXZhdGVLZXkgPSBwcml2YXRlS2V5OwogIGlmICghZGVyaXZlUHJpdmF0ZUtleSkgewogICAgZGVyaXZlUHJpdmF0ZUtleSA9IGF3YWl0IHdhbGxldC5nZXRSYW5kb21Qcml2YXRlS2V5KCk7CiAgfQogIGxldCBhZGRyZXNzID0gYXdhaXQgd2FsbGV0LmdldE5ld0FkZHJlc3MoewogICAgcHJpdmF0ZUtleTogZGVyaXZlUHJpdmF0ZUtleSwKICAgIGFkZHJlc3NUeXBlOiBhZGRyZXNzVHlwZQogIH0pOwogIHJldHVybiB7CiAgICBwcml2YXRlS2V5OiBkZXJpdmVQcml2YXRlS2V5LAogICAgYWRkcmVzczogYWRkcmVzcwogIH07Cn0KYXN5bmMgZnVuY3Rpb24gdGVzdHNpZ25NZXNzYWdlKCkgewogIGxldCBub3cgPSBuZXcgRGF0ZSgpOwogIGxldCB0aW1lc3RhbXAgPSBub3cuZ2V0VGltZSgpOwogIGxldCB0aW1lc3RhbXBTdHJpbmcgPSB0aW1lc3RhbXAudG9TdHJpbmcoKTsKICBjb25zb2xlLmxvZygndGltZXN0YW1wU3RyaW5nJywgdGltZXN0YW1wU3RyaW5nKTsKICBsZXQgd2FsbGV0ID0gbmV3IEJ0Y1dhbGxldCgpOwogIGNvbnN0IHByaXZhdGVLZXkgPSBhd2FpdCB3YWxsZXQuZ2V0UmFuZG9tUHJpdmF0ZUtleSgpOwoKICAvL0xlZ2FjeQogIGxldCBhY2NvdW50ID0gYXdhaXQgd2FsbGV0LmdldE5ld0FkZHJlc3MoewogICAgcHJpdmF0ZUtleTogcHJpdmF0ZUtleSwKICAgIGFkZHJlc3NUeXBlOiAiTGVnYWN5IgogIH0pOwogIGNvbnNvbGUubG9nKCdhY2NvdW50JywgYWNjb3VudCk7CiAgbGV0IHNpZ25QYXJhbXMgPSB7CiAgICBwcml2YXRlS2V5OiBwcml2YXRlS2V5LAogICAgZGF0YTogewogICAgICB0eXBlOiAwLAogICAgICBhZGRyZXNzOiBhY2NvdW50LmFkZHJlc3MsCiAgICAgIG1lc3NhZ2U6IHRpbWVzdGFtcFN0cmluZwogICAgfQogIH07CiAgY29uc29sZS5sb2coInNpZ25QYXJhbXMiLCBzaWduUGFyYW1zKTsKCiAgLy8gbGV0IHNpZ25hdHVyZSA9IGF3YWl0IHdhbGxldC5zaWduTWVzc2FnZShzaWduUGFyYW1zKQogIC8vIGNvbnNvbGUuaW5mbygnc2lnbmVkIHJlc3VsdCcsIHNpZ25hdHVyZSkKICAvLwogIC8vIGNvbnN0IGFkZHJlc3NlcyA9IFsKICAvLyAJewogIC8vIAkJImNoYWluSW5kZXgiOiAiMCIsCiAgLy8gCQkiYWRkcmVzcyI6IGFjY291bnQuYWRkcmVzcywKICAvLyAJCSJwdWJsaWNLZXkiOiBhY2NvdW50LnB1YmxpY0tleSwKICAvLyAJCSJzaWduYXR1cmUiOiBzaWduYXR1cmUKICAvLyAJfQogIC8vIF07CiAgLy8KICAvLyBjb25zdCBnZXRDcmVhdGVBY2NvdW50Qm9keSA9IHsKICAvLyAJYWRkcmVzc2VzOiBhZGRyZXNzZXMsCiAgLy8gCXNpZ25NZXNzYWdlOiB0aW1lc3RhbXBTdHJpbmcsIC8vIFVOSVggVGltZXN0YW1wIGluIG1pbGxpc2Vjb25kCiAgLy8gfTsKICAvLwogIC8vIGNvbnN0IGdldFJlcXVlc3RQYXRoID0gJy9hcGkvdjUvd2FsbGV0L2FjY291bnQvY3JlYXRlLWFjY291bnQnOwogIC8vCiAgLy8gY29uc3Qge2NvZGUsZGF0YSxtc2d9ID0gIGF3YWl0IG9reFJlcS5zZW5kUG9zdFJlcXVlc3QoZ2V0UmVxdWVzdFBhdGgsZ2V0Q3JlYXRlQWNjb3VudEJvZHkpCiAgLy8gY29uc29sZS5sb2coJzEyMzQnLGNvZGUsZGF0YSxtc2cpOwp9CmV4cG9ydCBkZWZhdWx0IHsKICBnZXROZXdBZGRyZXNzLAogIHRlc3RzaWduTWVzc2FnZQp9Ow=="},{"version":3,"names":["BtcWallet","okxReq","wallet","getNewAddress","netWork","privateKey","timestampString","addressType","derivePrivateKey","getRandomPrivateKey","address","testsignMessage","now","Date","timestamp","getTime","toString","console","log","account","signParams","data","type","message"],"sources":["/Users/apple/IdeaProjects/onLinePayMerchant/src/wallet/BTCNetWorkMethods.js"],"sourcesContent":["import { BtcWallet } from \"@okxweb3/coin-bitcoin\";\nimport okxReq from \"@/utils/okxReq\";\n\nconst wallet = new BtcWallet();\n//生成btc的地址\nasync function getNewAddress(netWork,privateKey,timestampString) {\n\tlet addressType = '';\n\tif (netWork === 'Legacy') {\n\t\taddressType = 'Legacy'\n\t} else if (netWork === 'Taproot') {\n\t\taddressType = 'segwit_taproot'\n\t}\n\tlet derivePrivateKey = privateKey;\n\tif(!derivePrivateKey){\n\t\tderivePrivateKey =await wallet.getRandomPrivateKey();\n\t}\n\tlet address = await wallet.getNewAddress({ privateKey: derivePrivateKey, addressType: addressType });\n\treturn {privateKey:derivePrivateKey,address:address}\n}\n\nasync function testsignMessage(){\n\n\tlet now = new Date();\n\n\tlet timestamp = now.getTime();\n\n\tlet timestampString = timestamp.toString();\n\tconsole.log('timestampString', timestampString)\n\tlet wallet = new BtcWallet()\n\n\tconst privateKey = await wallet.getRandomPrivateKey();\n\n\t//Legacy\n\tlet account = await wallet.getNewAddress({privateKey: privateKey,addressType: \"Legacy\"})\n\tconsole.log('account', account)\n\n\tlet signParams = {\n\t\tprivateKey: privateKey,\n\t\tdata: {\n\t\t\ttype: 0,\n\t\t\taddress: account.address,\n\t\t\tmessage: timestampString,\n\t\t}\n\t};\n\n\tconsole.log(\"signParams\",signParams);\n\n\t// let signature = await wallet.signMessage(signParams)\n\t// console.info('signed result', signature)\n\t//\n\t// const addresses = [\n\t// \t{\n\t// \t\t\"chainIndex\": \"0\",\n\t// \t\t\"address\": account.address,\n\t// \t\t\"publicKey\": account.publicKey,\n\t// \t\t\"signature\": signature\n\t// \t}\n\t// ];\n\t//\n\t// const getCreateAccountBody = {\n\t// \taddresses: addresses,\n\t// \tsignMessage: timestampString, // UNIX Timestamp in millisecond\n\t// };\n\t//\n\t// const getRequestPath = '/api/v5/wallet/account/create-account';\n\t//\n\t// const {code,data,msg} =  await okxReq.sendPostRequest(getRequestPath,getCreateAccountBody)\n\t// console.log('1234',code,data,msg);\n\n\n}\n\n\n\nexport default {getNewAddress,testsignMessage}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,uBAAuB;AACjD,OAAOC,MAAM,MAAM,gBAAgB;AAEnC,MAAMC,MAAM,GAAG,IAAIF,SAAS,CAAC,CAAC;AAC9B;AACA,eAAeG,aAAaA,CAACC,OAAO,EAACC,UAAU,EAACC,eAAe,EAAE;EAChE,IAAIC,WAAW,GAAG,EAAE;EACpB,IAAIH,OAAO,KAAK,QAAQ,EAAE;IACzBG,WAAW,GAAG,QAAQ;EACvB,CAAC,MAAM,IAAIH,OAAO,KAAK,SAAS,EAAE;IACjCG,WAAW,GAAG,gBAAgB;EAC/B;EACA,IAAIC,gBAAgB,GAAGH,UAAU;EACjC,IAAG,CAACG,gBAAgB,EAAC;IACpBA,gBAAgB,GAAE,MAAMN,MAAM,CAACO,mBAAmB,CAAC,CAAC;EACrD;EACA,IAAIC,OAAO,GAAG,MAAMR,MAAM,CAACC,aAAa,CAAC;IAAEE,UAAU,EAAEG,gBAAgB;IAAED,WAAW,EAAEA;EAAY,CAAC,CAAC;EACpG,OAAO;IAACF,UAAU,EAACG,gBAAgB;IAACE,OAAO,EAACA;EAAO,CAAC;AACrD;AAEA,eAAeC,eAAeA,CAAA,EAAE;EAE/B,IAAIC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EAEpB,IAAIC,SAAS,GAAGF,GAAG,CAACG,OAAO,CAAC,CAAC;EAE7B,IAAIT,eAAe,GAAGQ,SAAS,CAACE,QAAQ,CAAC,CAAC;EAC1CC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEZ,eAAe,CAAC;EAC/C,IAAIJ,MAAM,GAAG,IAAIF,SAAS,CAAC,CAAC;EAE5B,MAAMK,UAAU,GAAG,MAAMH,MAAM,CAACO,mBAAmB,CAAC,CAAC;;EAErD;EACA,IAAIU,OAAO,GAAG,MAAMjB,MAAM,CAACC,aAAa,CAAC;IAACE,UAAU,EAAEA,UAAU;IAACE,WAAW,EAAE;EAAQ,CAAC,CAAC;EACxFU,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEC,OAAO,CAAC;EAE/B,IAAIC,UAAU,GAAG;IAChBf,UAAU,EAAEA,UAAU;IACtBgB,IAAI,EAAE;MACLC,IAAI,EAAE,CAAC;MACPZ,OAAO,EAAES,OAAO,CAACT,OAAO;MACxBa,OAAO,EAAEjB;IACV;EACD,CAAC;EAEDW,OAAO,CAACC,GAAG,CAAC,YAAY,EAACE,UAAU,CAAC;;EAEpC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAGD;AAIA,eAAe;EAACjB,aAAa;EAACQ;AAAe,CAAC"}]}