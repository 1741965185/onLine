{"remainingRequest":"/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/IdeaProjects/onLinePayMerchant/src/components/RechangeDetail/rechangeAddress.vue?vue&type=style&index=0&id=68671bc6&scoped=true&lang=css","dependencies":[{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/src/components/RechangeDetail/rechangeAddress.vue","mtime":1731402661167},{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/IdeaProjects/onLinePayMerchant/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5xci1jb250YWluZXIgewoJZGlzcGxheTogZmxleDsKCWp1c3RpZnktY29udGVudDogY2VudGVyOwoJbWFyZ2luLXRvcDogMjBweDsKfQoKLnFyLXdyYXBwZXIgewoJcG9zaXRpb246IHJlbGF0aXZlOwoJcGFkZGluZzogMTVweDsKCWJvcmRlci1yYWRpdXM6IDE4cHg7CgliYWNrZ3JvdW5kOiAjZmZmOwoJYm94LXNoYWRvdzogMCAwIDAgMXB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7Cn0KCi5xci1jb2RlIHsKCXdpZHRoOiAyMDBweDsKCWhlaWdodDogMjAwcHg7CglkaXNwbGF5OiBibG9jazsKfQoKLnFyLWNvcm5lci1kb3QgewoJcG9zaXRpb246IGFic29sdXRlOwoJd2lkdGg6IDEwcHg7CgloZWlnaHQ6IDEwcHg7Cglib3JkZXItcmFkaXVzOiA1MCU7CgliYWNrZ3JvdW5kLWNvbG9yOiAjZTBlMGZmOwp9CgoucXItY29ybmVyLWRvdC50b3AtbGVmdCB7Cgl0b3A6IC01cHg7CglsZWZ0OiAtNXB4Owp9CgoucXItY29ybmVyLWRvdC50b3AtcmlnaHQgewoJdG9wOiAtNXB4OwoJcmlnaHQ6IC01cHg7Cn0KCi5xci1jb3JuZXItZG90LmJvdHRvbS1sZWZ0IHsKCWJvdHRvbTogLTVweDsKCWxlZnQ6IC01cHg7Cn0KCi5xci1jb3JuZXItZG90LmJvdHRvbS1yaWdodCB7Cglib3R0b206IC01cHg7CglyaWdodDogLTVweDsKfQoKLyog5re75Yqg5LiA5Liq5b6u5aaZ55qE5YaF6Zi05b2x5pWI5p6cICovCi5xci13cmFwcGVyOjpiZWZvcmUgewoJY29udGVudDogJyc7Cglwb3NpdGlvbjogYWJzb2x1dGU7Cgl0b3A6IDA7CglsZWZ0OiAwOwoJcmlnaHQ6IDA7Cglib3R0b206IDA7Cglib3JkZXItcmFkaXVzOiAxOHB4OwoJYm94LXNoYWRvdzogaW5zZXQgMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjA1KTsKCXBvaW50ZXItZXZlbnRzOiBub25lOwp9Ci54aWFuewoJYm9yZGVyOiAxcHggZGFzaGVkICNEQkRGRUE7CgltYXJnaW4tYm90dG9tOjE5cHg7Cn0KLnJlY2hhcmdlLXBhZ2UgewoJZGlzcGxheTogZmxleDsKCWZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CglqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKCWFsaWduLWl0ZW1zOiBjZW50ZXI7Cn0KLmVsZW1lbnQgewoJcG9zaXRpb246IGFic29sdXRlOwoJY3Vyc29yOiBwb2ludGVyOwoJbGVmdDogMTIxcHg7Cgl0b3A6IDE3cHg7Cn0KLnJlY2hhcmdlLWNhcmQgewoJbWFyZ2luLXRvcDogOTlweDsKCXdpZHRoOiA0ODBweDsKCWJhY2tncm91bmQ6ICNGRkZGRkY7Cglib3JkZXItcmFkaXVzOiAxNnB4OwoJYm9yZGVyOiAxcHggc29saWQgI0RCREZFQTsKCXBhZGRpbmc6IDE5cHggMzBweCA1OHB4IDMwcHg7Cn0KCi5jYXJkLXRpdGxlIHsKCWZvbnQtc2l6ZTogMThweDsKCWNvbG9yOiAjMzMzOwoJbWFyZ2luLWJvdHRvbTogMTBweDsKCXRleHQtYWxpZ246IGNlbnRlcjsKfQoKLmN1cnJlbmN5LWluZm8gewoJZGlzcGxheTpmbGV4OwoJbWFyZ2luLWJvdHRvbTogMTVweDsKCW1hcmdpbi10b3A6IDUwcHg7Cn0KCi5jdXJyZW5jeS1pY29uIGltZyB7Cgl3aWR0aDogNDRweDsKCWhlaWdodDogNDRweDsKCW1hcmdpbi1yaWdodDogMTVweDsKfQoKLmN1cnJlbmN5LWRldGFpbHMgewoJZGlzcGxheTogZmxleDsKCWFsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7Cn0KCi5jdXJyZW5jeS1uYW1lIHsKCWZvbnQtd2VpZ2h0OiA1MDA7Cglmb250LXNpemU6IDI0cHg7Cgljb2xvcjogIzM2NEE2MzsKCWxpbmUtaGVpZ2h0OiAyNnB4OwoJdGV4dC1hbGlnbjogbGVmdDsKCWZvbnQtc3R5bGU6IG5vcm1hbDsKCW1hcmdpbi1yaWdodDogMTRweDsKfQoKLmN1cnJlbmN5LW5ldHdvcmsgewoJZm9udC13ZWlnaHQ6IDQwMDsKCWZvbnQtc2l6ZTogMTNweDsKCWNvbG9yOiAjNTI2NDg0OwoJbGluZS1oZWlnaHQ6IDE2cHg7Cgl0ZXh0LWFsaWduOiBsZWZ0OwoJZm9udC1zdHlsZTogbm9ybWFsOwoJcGFkZGluZzozcHggOHB4Cn0KCi5uZXR3b3JrLWRpdnsKCWJhY2tncm91bmQ6ICNGNkY4RkU7Cglib3JkZXItcmFkaXVzOiA0cHg7CglhbGlnbi1jb250ZW50OiBjZW50ZXI7Cn0KCi5hZGRyZXNzLWNvbnRhaW5lciB7CglkaXNwbGF5OiBmbGV4OwoJYWxpZ24taXRlbXM6IGNlbnRlcjsKCWJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7Cglib3JkZXItcmFkaXVzOiA4cHg7CglwYWRkaW5nOiAxMHB4OwoJbWFyZ2luLWJvdHRvbTogMTBweDsKCW1hcmdpbi1sZWZ0OiA1MHB4OwoJbWFyZ2luLXRvcDotMzVweAp9CgouYWRkcmVzcyB7CglmbGV4LWdyb3c6IDE7Cgl3b3JkLWJyZWFrOiBicmVhay1hbGw7Cglmb250LXdlaWdodDogNDAwOwoJZm9udC1zaXplOiAxNnB4OwoJY29sb3I6ICM4MDk0QUU7CglsaW5lLWhlaWdodDogMjJweDsKCXRleHQtYWxpZ246IGxlZnQ7Cglmb250LXN0eWxlOiBub3JtYWw7Cn0KCi5jb3B5LWljb24gewoJY3Vyc29yOiBwb2ludGVyOwoJbWFyZ2luLWxlZnQ6IDEwcHg7Cn0KCi5jb3B5LWljb246aG92ZXIgewoJb3BhY2l0eTogMC43Owp9CgoubmV0d29yay1pbmZvIHsKCW1hcmdpbi1ib3R0b206IDIwcHg7Cglmb250LXdlaWdodDogNDAwOwoJZm9udC1zaXplOiAxNHB4OwoJY29sb3I6ICM4MDk0QUU7CglsaW5lLWhlaWdodDogMjBweDsKCXRleHQtYWxpZ246IGNlbnRlcjsKCWZvbnQtc3R5bGU6IG5vcm1hbDsKfQoucXItY29udGFpbmVyewoJZGlzcGxheTogZmxleDsKCWp1c3RpZnktY29udGVudDpjZW50ZXI7Cn0KLmJvcmRlci1xcnsKCWJvcmRlcjogM3B4IHNvbGlkIHJnYmEoMTI3LCAxNDEsIDI1NSwgMC4zKTsKCXdpZHRoOjI4MHB4OwoJaGVpZ2h0OiAyODBweDsKCW1hcmdpbjowIGF1dG87CglwYWRkaW5nLXRvcDogMjBweDsKfQo="},{"version":3,"sources":["rechangeAddress.vue"],"names":[],"mappings":";AA+SA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"rechangeAddress.vue","sourceRoot":"src/components/RechangeDetail","sourcesContent":["<template>\n\t<div class=\"recharge-page\">\n\t\t<img class=\"element\" src=\"../../assets/images/bank-main.png\" @click=\"goToBack\" alt=\"返回按钮\" />\n\t\t<div class=\"recharge-card\">\n\t\t\t<h2 class=\"card-title\">{{$t('rechangeDetail.rechangeCrypto')}}</h2>\n\t\t\t<div class=\"currency-info\">\n\t\t\t\t<div class=\"currency-icon\">\n\t\t\t\t\t<img :src=\"currencyIcon\" :alt=\"currencyName\">\n\t\t\t\t</div>\n\t\t\t\t<div class=\"currency-details\">\n\t\t\t\t\t<div class=\"currency-name\">{{ currencyName }}</div>\n\t\t\t\t\t<div class=\"network-div\">\n\t\t\t\t\t\t<div class=\"currency-network\">{{ network }}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"address-container\">\n\t\t\t\t<div class=\"address\">{{ address }}</div>\n\t\t\t\t<div class=\"copy-icon\" @click=\"copyAddress\" title=\"复制地址\">\n\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\n\t\t\t\t\t\t<rect x=\"9\" y=\"9\" width=\"13\" height=\"13\" rx=\"2\" ry=\"2\"></rect>\n\t\t\t\t\t\t<path d=\"M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1\"></path>\n\t\t\t\t\t</svg>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"xian\"></div>\n\t\t\t<div class=\"network-info\">仅支持接受 {{ network }} 网络资产</div>\n<!--\t\t\t<div class=\"qr-container\">-->\n<!--\t\t\t\t<div class=\"qr-wrapper\">-->\n<!--\t\t\t\t\t<div class=\"qr-corner-dot top-left\"></div>-->\n<!--\t\t\t\t\t<div class=\"qr-corner-dot top-right\"></div>-->\n<!--\t\t\t\t\t<div class=\"qr-corner-dot bottom-left\"></div>-->\n<!--\t\t\t\t\t<div class=\"qr-corner-dot bottom-right\"></div>-->\n<!--\t\t\t\t\t<QrcodeVue :size=\"240\" :value=\"address\"  level=\"L\" />-->\n<!--\t\t\t\t</div>-->\n<!--\t\t\t</div>-->\n\t\t\t<div class=\"border-qr\">\n\t\t\t\t<div class=\"qr-corner-dot top-left\"></div>\n\t\t\t\t<div class=\"qr-corner-dot top-right\"></div>\n\t\t\t\t<div class=\"qr-corner-dot bottom-left\"></div>\n\t\t\t\t<div class=\"qr-corner-dot bottom-right\"></div>\n\t\t\t\t<div class=\"qr-container\">\n\t\t\t\t\t<QrcodeVue :size=\"240\" :value=\"address\"  level=\"L\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nimport QrcodeVue from 'qrcode.vue';\nimport ETHNetWorkMethods from '@/wallet/ETHNetWorkMethods'\nimport BTCNetWorkMethods from '@/wallet/BTCNetWorkMethods'\nimport TRCNetWorkMethods from '@/wallet/TRCNetWorkMethods'\nimport { getAccount, getAddress, insertAddress } from \"@/api/home\";\nimport okxReq from \"@/utils/okxReq\";\n\nexport default {\n\tname: 'DigitalCurrencyRechargePage',\n\tcomponents:{QrcodeVue},\n\tdata() {\n\t\treturn {\n\t\t\tcurrencyIcon: require('/src/assets/images/USDC.png'), // 替换为实际的图标路径\n\t\t\tcurrencyName: 'USDC',\n\t\t\tnetwork: 'Ethereum',\n\t\t\taddress: '',\n\t\t\tqrCodeUrl: ''\n\t\t}\n\t},\n\tmounted() {\n\t\tthis.currencyName = this.$route.query.currency;\n\t\tthis.currencyIcon  = require('/src/assets/images/'+this.currencyName+'.png')\n\t\tthis.network = this.$route.query.network;\n\t\tconsole.log(this.currencyName, this.network);\n\t\tthis.getAddress()\n\t},\n\tmethods: {\n\t\tasync getAddress() {\n\t\t\t\tlet {status,msg,data}  = await getAddress({netWork:this.network});\n\t\t\t\tif(status === 200 && data){\n\t\t\t\t\tthis.address = data\n\t\t\t\t}else {\n\t\t\t\t\t\tlet privateKey ,address;\n\t\t\t\t\t\tif (this.network === 'ERC20' ||  this.network  === 'Polygon') {\n\t\t\t\t\t\t\t({privateKey,address} = await ETHNetWorkMethods.getNewAddress(this.network));\n\t\t\t\t\t\t} else if (this.network === 'Legacy' || this.network === 'Taproot' ) {\n\t\t\t\t\t\t\t({privateKey,address} =await BTCNetWorkMethods.getNewAddress(this.network));\n\t\t\t\t\t\t}else if(this.network === 'TRC20') {\n\t\t\t\t\t\t\t({privateKey,address} = await TRCNetWorkMethods.getNewAddress(this.network))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.address = address.address;\n\t\t\t\t\t\tawait insertAddress({address:this.address,network:this.network,privatekey:privateKey,publickey:address.publicKey})\n\n\t\t\t\t\t// let addresses = [];\n\t\t\t\t\t// var netWorkAddress = [];\n\t\t\t\t\t// var privateKey, address , signature;\n\t\t\t\t\t// let now = new Date();\n\t\t\t\t\t//\n\t\t\t\t\t// let timestamp = now.getTime();\n\t\t\t\t\t//\n\t\t\t\t\t// let timestampString = timestamp.toString();\n\t\t\t\t\t//\n\t\t\t\t\t//\n\t\t\t\t\t// // await BTCNetWorkMethods.testsignMessage();\n\t\t\t\t\t//\n\t\t\t\t\t// // 生成ERC20\n\t\t\t\t\t// ({privateKey, address} = await ETHNetWorkMethods.getNewAddress());\n\t\t\t\t\t// // signature =  await ETHNetWorkMethods.signMessage(privateKey,timestampString);\n\t\t\t\t\t//\n\t\t\t\t\t// // addresses.push({\n\t\t\t\t\t// // \t\"chainIndex\": \"1\",\n\t\t\t\t\t// // \t\"address\": address.address,\n\t\t\t\t\t// // \t\"publicKey\": address.publicKey,\n\t\t\t\t\t// // \t\"signature\": signature\n\t\t\t\t\t// // });\n\t\t\t\t\t//\n\t\t\t\t\t// netWorkAddress.push({\n\t\t\t\t\t// \t\t\t'address': address.address,\n\t\t\t\t\t// \t\t\t'network': \"ERC20\",\n\t\t\t\t\t// \t\t\t'privatekey': privateKey,\n\t\t\t\t\t// \t\t\t'publickey': address.publicKey,\n\t\t\t\t\t// })\n\t\t\t\t\t//\n\t\t\t\t\t// //Polygon 地址\n\t\t\t\t\t// ({privateKey, address} = await ETHNetWorkMethods.getNewAddress(privateKey));\n\t\t\t\t\t//\n\t\t\t\t\t// // signature =await ETHNetWorkMethods.signMessage(privateKey);\n\t\t\t\t\t//\n\t\t\t\t\t// // addresses.push({\n\t\t\t\t\t// // \t\"chainIndex\":\"137\",\n\t\t\t\t\t// // \t\"address\":address.address,\n\t\t\t\t\t// // \t\"publicKey\":address.publicKey,\n\t\t\t\t\t// // \t\"signature\":signature\n\t\t\t\t\t// // });\n\t\t\t\t\t//\n\t\t\t\t\t// netWorkAddress.push({\n\t\t\t\t\t// \t'address': address.address,\n\t\t\t\t\t// \t'network': \"Polygon\",\n\t\t\t\t\t// \t'privatekey': privateKey,\n\t\t\t\t\t// \t'publickey': address.publicKey,\n\t\t\t\t\t// })\n\t\t\t\t\t//\n\t\t\t\t\t//\n\t\t\t\t\t//\n\t\t\t\t\t// //Legacy 地址生成\n\t\t\t\t\t// ({privateKey, address} = await BTCNetWorkMethods.getNewAddress(\"Legacy\",\"\",timestampString));\n\t\t\t\t\t//\n\t\t\t\t\t// // addresses.push({\n\t\t\t\t\t// // \t\"chainIndex\":\"0\",\n\t\t\t\t\t// // \t\"address\":address.address,\n\t\t\t\t\t// // \t\"publicKey\":address.publicKey,\n\t\t\t\t\t// // \t\"signature\":signature\n\t\t\t\t\t// // });\n\t\t\t\t\t//\n\t\t\t\t\t// netWorkAddress.push({\n\t\t\t\t\t// \taddress: address.address,\n\t\t\t\t\t// \tnetwork: \"Legacy\",\n\t\t\t\t\t// \tprivatekey: privateKey,\n\t\t\t\t\t// \tpublickey: address.publicKey,\n\t\t\t\t\t// })\n\t\t\t\t\t//\n\t\t\t\t\t//\n\t\t\t\t\t//\n\t\t\t\t\t// // Taproot 地址生成\n\t\t\t\t\t// ({ privateKey, address} = await BTCNetWorkMethods.getNewAddress(\"Taproot\",privateKey,timestampString));\n\t\t\t\t\t//\n\t\t\t\t\t//\n\t\t\t\t\t// // addresses.push({\n\t\t\t\t\t// // \t\"chainIndex\":\"0\",\n\t\t\t\t\t// // \t\"address\":address.address,\n\t\t\t\t\t// // \t\"publicKey\":address.publicKey,\n\t\t\t\t\t// // \t\"signature\":signature\n\t\t\t\t\t// // });\n\t\t\t\t\t//\n\t\t\t\t\t// netWorkAddress.push({\n\t\t\t\t\t// \taddress: address.address,\n\t\t\t\t\t// \tnetwork: \"Taproot\",\n\t\t\t\t\t// \tprivatekey: privateKey,\n\t\t\t\t\t// \tpublickey: address.publicKey,\n\t\t\t\t\t// })\n\t\t\t\t\t//\n\t\t\t\t\t//\n\t\t\t\t\t// // TRC20 地址生成\n\t\t\t\t\t// ({ privateKey, address } = await TRCNetWorkMethods.getNewAddress(\"TRC20\"))\n\t\t\t\t\t// // signature = await TRCNetWorkMethods.signMessage(privateKey,address.address,timestampString);\n\t\t\t\t\t// // addresses.push({\n\t\t\t\t\t// // \t\"chainIndex\":\"195\",\n\t\t\t\t\t// // \t\"address\":address.address,\n\t\t\t\t\t// // \t\"publicKey\":address.publicKey,\n\t\t\t\t\t// // \t\"signature\":signature\n\t\t\t\t\t// // });\n\t\t\t\t\t//\n\t\t\t\t\t// netWorkAddress.push({\n\t\t\t\t\t// \taddress: address.address,\n\t\t\t\t\t// \tnetwork: \"TRC20\",\n\t\t\t\t\t// \tprivatekey: privateKey,\n\t\t\t\t\t// \tpublickey: address.publicKey,\n\t\t\t\t\t// })\n\t\t\t\t\t//\n\t\t\t\t\t//\n\t\t\t\t\t// //\n\t\t\t\t\t// //\n\t\t\t\t\t// // const getCreateAccountBody = {\n\t\t\t\t\t// // \taddresses: addresses,\n\t\t\t\t\t// // \tsignMessage: timestampString, // UNIX Timestamp in millisecond\n\t\t\t\t\t// // };\n\t\t\t\t\t// //\n\t\t\t\t\t// // const getRequestPath = '/api/v5/wallet/account/create-account';\n\t\t\t\t\t// //\n\t\t\t\t\t// // const {code,data,msg} =  await okxReq.sendPostRequest(getRequestPath,getCreateAccountBody)\n\t\t\t\t\t// // console.log('1234',code,data,msg);\n\t\t\t\t\t// //\n\t\t\t\t\t// // console.log(\"[]=\",addresses,netWorkAddress);\n\t\t\t\t\t// //\n\t\t\t\t\t// // //循环把accountId 补充上\n\t\t\t\t\t// // netWorkAddress.forEach(e=>{\n\t\t\t\t\t// // \te.accountId = data[0].accountId;\n\t\t\t\t\t// // })\n\t\t\t\t\t// //\n\t\t\t\t\t// await insertAddress(netWorkAddress)\n\t\t\t\t\t// //\n\t\t\t\t\t// console.log(netWorkAddress);\n\t\t\t\t\t// this.address = netWorkAddress.filter(item=>item.netWork === this.network).map(item=>item.address);\n\n\n\n\n\t\t\t\t\t// let privateKey, address;\n\t\t\t\t\t// if (this.network === 'ERC20' || this.network === 'Polygon') {\n\t\t\t\t\t// \t({ privateKey, address } = await ETHNetWorkMethods.getNewAddress(this.network));\n\t\t\t\t\t// } else if (this.network === 'Legacy' || this.network === 'Taproot') {\n\t\t\t\t\t// \t({ privateKey, address } = await BTCNetWorkMethods.getNewAddress(this.network));\n\t\t\t\t\t// } else if (this.network === 'TRC20') {\n\t\t\t\t\t// \t({ privateKey, address } = await TRCNetWorkMethods.getNewAddress(this.network))\n\t\t\t\t\t// }\n\t\t\t\t\t// this.address = address.address;\n\t\t\t\t\t// await insertAddress({\n\t\t\t\t\t// \taddress: this.address,\n\t\t\t\t\t// \tnetwork: this.network,\n\t\t\t\t\t// \tprivatekey: privateKey,\n\t\t\t\t\t// \tpublickey: address.publicKey,\n\t\t\t\t\t// \taccountId: accountId\n\t\t\t\t\t// })\n\t\t\t\t}\n\t\t\t// }else{\n\t\t\t// \tlet privateKey ,address;\n\t\t\t// \tif (this.network === 'ERC20' ||  this.network  === 'Polygon') {\n\t\t\t// \t\t({privateKey,address} = await ETHNetWorkMethods.getNewAddress(this.network));\n\t\t\t// \t} else if (this.network === 'Legacy' || this.network === 'Taproot' ) {\n\t\t\t// \t\t({privateKey,address} =await BTCNetWorkMethods.getNewAddress(this.network));\n\t\t\t// \t}else if(this.network === 'TRC20') {\n\t\t\t// \t\t({privateKey,address} = await TRCNetWorkMethods.getNewAddress(this.network))\n\t\t\t// \t}\n\t\t\t// \tthis.address = address.address;\n\t\t\t// \tawait insertAddress({\n\t\t\t// \t\taddress:this.address,\n\t\t\t// \t\tnetwork:this.network,\n\t\t\t// \t\tprivatekey:privateKey,\n\t\t\t// \t\tpublickey:address.publicKey,\n\t\t\t// \t\taccountId:accountId\n\t\t\t// \t})\n\n\n\t\t\t\t// let {status,msg,data}  = await getAddress({netWork:this.network});\n\t\t\t\t// if(status === 200 && data){\n\t\t\t\t// \tthis.address = data\n\t\t\t\t// }else {\n\n\t\t\t\t\t// await insertAddress({address:this.address,network:this.network,privatekey:privateKey,publickey:address.publicKey,accountId:accountId})\n\t\t\t// \t}\n\t\t\t// }\n\t\t\t// await getAddress({netWork:this.network});\n\t\t\t// if(data){\n\t\t\t// \tthis.address = data\n\t\t\t// }else{\n\t\t\t// \tlet privateKey ,address;\n\t\t\t// \tif (this.network === 'ERC20' ||  this.network  === 'Polygon') {\n\t\t\t// \t\t({privateKey,address} = await ETHNetWorkMethods.getNewAddress(this.network));\n\t\t\t// \t} else if (this.network === 'Legacy' || this.network === 'Taproot' ) {\n\t\t\t// \t\t({privateKey,address} =await BTCNetWorkMethods.getNewAddress(this.network));\n\t\t\t// \t}else if(this.network === 'TRC20') {\n\t\t\t// \t\t({privateKey,address} = await TRCNetWorkMethods.getNewAddress(this.network))\n\t\t\t// \t}\n\t\t\t// \tthis.address = address.address;\n\t\t\t// \tawait insertAddress({address:this.address,network:this.network,privatekey:privateKey,publickey:address.publicKey,accountId:accountId})\n\t\t\t// }\n\t\t},\n\t\tgoToBack() {\n\t\t\thistory.go(-1);\n\t\t},\n\t\tcopyAddress() {\n\t\t\tnavigator.clipboard.writeText(this.address).then(() => {\n\t\t\t\tthis.$message.success('地址已复制到剪贴板');\n\t\t\t}).catch(err => {\n\t\t\t\tconsole.error('复制失败:', err);\n\t\t\t\tthis.$message.error('复制失败，请手动复制');\n\t\t\t});\n\t\t},\n\t}\n}\n</script>\n\n<style scoped>\n.qr-container {\n\tdisplay: flex;\n\tjustify-content: center;\n\tmargin-top: 20px;\n}\n\n.qr-wrapper {\n\tposition: relative;\n\tpadding: 15px;\n\tborder-radius: 18px;\n\tbackground: #fff;\n\tbox-shadow: 0 0 0 1px rgba(0, 0, 0, 0.05);\n}\n\n.qr-code {\n\twidth: 200px;\n\theight: 200px;\n\tdisplay: block;\n}\n\n.qr-corner-dot {\n\tposition: absolute;\n\twidth: 10px;\n\theight: 10px;\n\tborder-radius: 50%;\n\tbackground-color: #e0e0ff;\n}\n\n.qr-corner-dot.top-left {\n\ttop: -5px;\n\tleft: -5px;\n}\n\n.qr-corner-dot.top-right {\n\ttop: -5px;\n\tright: -5px;\n}\n\n.qr-corner-dot.bottom-left {\n\tbottom: -5px;\n\tleft: -5px;\n}\n\n.qr-corner-dot.bottom-right {\n\tbottom: -5px;\n\tright: -5px;\n}\n\n/* 添加一个微妙的内阴影效果 */\n.qr-wrapper::before {\n\tcontent: '';\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n\tborder-radius: 18px;\n\tbox-shadow: inset 0 0 10px rgba(0, 0, 0, 0.05);\n\tpointer-events: none;\n}\n.xian{\n\tborder: 1px dashed #DBDFEA;\n\tmargin-bottom:19px;\n}\n.recharge-page {\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n}\n.element {\n\tposition: absolute;\n\tcursor: pointer;\n\tleft: 121px;\n\ttop: 17px;\n}\n.recharge-card {\n\tmargin-top: 99px;\n\twidth: 480px;\n\tbackground: #FFFFFF;\n\tborder-radius: 16px;\n\tborder: 1px solid #DBDFEA;\n\tpadding: 19px 30px 58px 30px;\n}\n\n.card-title {\n\tfont-size: 18px;\n\tcolor: #333;\n\tmargin-bottom: 10px;\n\ttext-align: center;\n}\n\n.currency-info {\n\tdisplay:flex;\n\tmargin-bottom: 15px;\n\tmargin-top: 50px;\n}\n\n.currency-icon img {\n\twidth: 44px;\n\theight: 44px;\n\tmargin-right: 15px;\n}\n\n.currency-details {\n\tdisplay: flex;\n\talign-items:flex-start;\n}\n\n.currency-name {\n\tfont-weight: 500;\n\tfont-size: 24px;\n\tcolor: #364A63;\n\tline-height: 26px;\n\ttext-align: left;\n\tfont-style: normal;\n\tmargin-right: 14px;\n}\n\n.currency-network {\n\tfont-weight: 400;\n\tfont-size: 13px;\n\tcolor: #526484;\n\tline-height: 16px;\n\ttext-align: left;\n\tfont-style: normal;\n\tpadding:3px 8px\n}\n\n.network-div{\n\tbackground: #F6F8FE;\n\tborder-radius: 4px;\n\talign-content: center;\n}\n\n.address-container {\n\tdisplay: flex;\n\talign-items: center;\n\tbackground-color: #FFFFFF;\n\tborder-radius: 8px;\n\tpadding: 10px;\n\tmargin-bottom: 10px;\n\tmargin-left: 50px;\n\tmargin-top:-35px\n}\n\n.address {\n\tflex-grow: 1;\n\tword-break: break-all;\n\tfont-weight: 400;\n\tfont-size: 16px;\n\tcolor: #8094AE;\n\tline-height: 22px;\n\ttext-align: left;\n\tfont-style: normal;\n}\n\n.copy-icon {\n\tcursor: pointer;\n\tmargin-left: 10px;\n}\n\n.copy-icon:hover {\n\topacity: 0.7;\n}\n\n.network-info {\n\tmargin-bottom: 20px;\n\tfont-weight: 400;\n\tfont-size: 14px;\n\tcolor: #8094AE;\n\tline-height: 20px;\n\ttext-align: center;\n\tfont-style: normal;\n}\n.qr-container{\n\tdisplay: flex;\n\tjustify-content:center;\n}\n.border-qr{\n\tborder: 3px solid rgba(127, 141, 255, 0.3);\n\twidth:280px;\n\theight: 280px;\n\tmargin:0 auto;\n\tpadding-top: 20px;\n}\n</style>"]}]}